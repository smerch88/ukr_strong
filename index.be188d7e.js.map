{"mappings":"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","sources":["node_modules/process/browser.js","node_modules/@firebase/util/src/crypt.ts","node_modules/@firebase/util/src/deepCopy.ts","node_modules/@firebase/util/src/environment.ts","node_modules/@firebase/util/src/defaults.ts","node_modules/@firebase/util/src/emulator.ts","node_modules/@firebase/util/src/errors.ts","node_modules/@firebase/util/src/json.ts","node_modules/@firebase/util/src/obj.ts","node_modules/@firebase/util/src/query.ts","node_modules/@firebase/util/src/promise.ts","node_modules/@firebase/util/src/sha1.ts","node_modules/@firebase/util/src/subscribe.ts","node_modules/@firebase/util/src/exponential_backoff.ts","node_modules/@firebase/util/src/formatters.ts","node_modules/@firebase/util/src/compat.ts","node_modules/@firebase/component/src/component.ts","node_modules/@firebase/component/src/constants.ts","node_modules/@firebase/component/src/provider.ts","node_modules/@firebase/component/src/component_container.ts","node_modules/@firebase/logger/src/logger.ts","node_modules/idb/build/wrap-idb-value.js","node_modules/idb/build/index.js","node_modules/@firebase/app/src/platformLoggerService.ts","node_modules/@firebase/app/src/logger.ts","node_modules/@firebase/app/src/constants.ts","node_modules/@firebase/app/src/internal.ts","node_modules/@firebase/app/src/errors.ts","node_modules/@firebase/app/src/firebaseApp.ts","node_modules/@firebase/app/src/api.ts","node_modules/@firebase/app/src/indexeddb.ts","node_modules/@firebase/app/src/heartbeatService.ts","node_modules/@firebase/util/src/jwt.ts","node_modules/@firebase/firestore/dist/lite/index.browser.esm2017.js","node_modules/tslib/tslib.es6.js","node_modules/@firebase/auth/src/core/errors.ts","node_modules/@firebase/auth/src/core/auth/initialize.ts","node_modules/@firebase/auth/src/core/util/location.ts","node_modules/@firebase/auth/src/core/util/navigator.ts","node_modules/@firebase/auth/src/core/util/delay.ts","node_modules/@firebase/auth/src/core/util/emulator.ts","node_modules/@firebase/auth/src/core/util/fetch_provider.ts","node_modules/@firebase/auth/src/api/errors.ts","node_modules/@firebase/auth/src/api/index.ts","node_modules/@firebase/auth/src/core/util/time.ts","node_modules/@firebase/auth/src/core/user/id_token_result.ts","node_modules/@firebase/auth/src/core/user/invalidation.ts","node_modules/@firebase/auth/src/core/user/proactive_refresh.ts","node_modules/@firebase/auth/src/core/user/user_metadata.ts","node_modules/@firebase/auth/src/core/user/reload.ts","node_modules/@firebase/auth/src/api/authentication/token.ts","node_modules/@firebase/auth/src/core/user/token_manager.ts","node_modules/@firebase/auth/src/core/user/user_impl.ts","node_modules/@firebase/auth/src/core/persistence/in_memory.ts","node_modules/@firebase/auth/src/core/persistence/persistence_user_manager.ts","node_modules/@firebase/auth/src/core/util/browser.ts","node_modules/@firebase/auth/src/core/util/version.ts","node_modules/@firebase/auth/src/core/auth/middleware.ts","node_modules/@firebase/auth/src/core/auth/auth_impl.ts","node_modules/@firebase/auth/src/core/auth/emulator.ts","node_modules/@firebase/auth/src/core/credentials/auth_credential.ts","node_modules/@firebase/auth/src/api/authentication/email_and_password.ts","node_modules/@firebase/auth/src/api/authentication/email_link.ts","node_modules/@firebase/auth/src/core/credentials/email.ts","node_modules/@firebase/auth/src/api/authentication/idp.ts","node_modules/@firebase/auth/src/core/credentials/oauth.ts","node_modules/@firebase/auth/src/api/authentication/sms.ts","node_modules/@firebase/auth/src/core/credentials/phone.ts","node_modules/@firebase/auth/src/core/action_code_url.ts","node_modules/@firebase/auth/src/core/providers/email.ts","node_modules/@firebase/auth/src/core/providers/federated.ts","node_modules/@firebase/auth/src/core/providers/oauth.ts","node_modules/@firebase/auth/src/core/providers/facebook.ts","node_modules/@firebase/auth/src/core/providers/google.ts","node_modules/@firebase/auth/src/core/providers/github.ts","node_modules/@firebase/auth/src/core/credentials/saml.ts","node_modules/@firebase/auth/src/core/providers/saml.ts","node_modules/@firebase/auth/src/core/providers/twitter.ts","node_modules/@firebase/auth/src/api/authentication/sign_up.ts","node_modules/@firebase/auth/src/core/user/user_credential_impl.ts","node_modules/@firebase/auth/src/core/strategies/anonymous.ts","node_modules/@firebase/auth/src/core/strategies/credential.ts","node_modules/@firebase/auth/src/api/authentication/custom_token.ts","node_modules/@firebase/auth/src/core/strategies/custom_token.ts","node_modules/@firebase/auth/src/mfa/mfa_info.ts","node_modules/@firebase/auth/src/mfa/mfa_error.ts","node_modules/@firebase/auth/src/core/user/link_unlink.ts","node_modules/@firebase/auth/src/core/strategies/action_code_settings.ts","node_modules/@firebase/auth/src/core/user/reauthenticate.ts","node_modules/@firebase/auth/src/core/strategies/email_and_password.ts","node_modules/@firebase/auth/src/core/strategies/email_link.ts","node_modules/@firebase/auth/src/api/authentication/create_auth_uri.ts","node_modules/@firebase/auth/src/core/strategies/email.ts","node_modules/@firebase/auth/src/api/account_management/profile.ts","node_modules/@firebase/auth/src/core/user/account_info.ts","node_modules/@firebase/auth/src/core/user/additional_user_info.ts","node_modules/@firebase/auth/src/mfa/mfa_resolver.ts","node_modules/@firebase/auth/src/mfa/mfa_session.ts","node_modules/@firebase/auth/src/core/index.ts","node_modules/@firebase/auth/src/mfa/mfa_user.ts","node_modules/@firebase/auth/src/core/persistence/index.ts","node_modules/@firebase/auth/src/platform_browser/persistence/browser.ts","node_modules/@firebase/auth/src/platform_browser/persistence/local_storage.ts","node_modules/@firebase/auth/src/platform_browser/messagechannel/sender.ts","node_modules/@firebase/auth/src/platform_browser/persistence/indexed_db.ts","node_modules/@firebase/auth/src/platform_browser/recaptcha/recaptcha_mock.ts","node_modules/@firebase/auth/src/platform_browser/recaptcha/recaptcha_loader.ts","node_modules/@firebase/auth/src/platform_browser/recaptcha/recaptcha_verifier.ts","node_modules/@firebase/auth/src/platform_browser/strategies/phone.ts","node_modules/@firebase/auth/src/platform_browser/providers/phone.ts","node_modules/@firebase/auth/src/core/util/resolver.ts","node_modules/@firebase/auth/src/core/strategies/idp.ts","node_modules/@firebase/auth/src/api/account_management/email_and_password.ts","src/scripts/firebase.js","node_modules/@firebase/auth/src/core/auth/firebase_internal.ts","src/scripts/items.js","src/scripts/map-slider.js","src/scripts/oblastmodalmobile.js"],"sourcesContent":["// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst stringToByteArray = function (str: string): number[] {\n  // TODO(user): Use native implementations if/when available\n  const out: number[] = [];\n  let p = 0;\n  for (let i = 0; i < str.length; i++) {\n    let c = str.charCodeAt(i);\n    if (c < 128) {\n      out[p++] = c;\n    } else if (c < 2048) {\n      out[p++] = (c >> 6) | 192;\n      out[p++] = (c & 63) | 128;\n    } else if (\n      (c & 0xfc00) === 0xd800 &&\n      i + 1 < str.length &&\n      (str.charCodeAt(i + 1) & 0xfc00) === 0xdc00\n    ) {\n      // Surrogate Pair\n      c = 0x10000 + ((c & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);\n      out[p++] = (c >> 18) | 240;\n      out[p++] = ((c >> 12) & 63) | 128;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    } else {\n      out[p++] = (c >> 12) | 224;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    }\n  }\n  return out;\n};\n\n/**\n * Turns an array of numbers into the string given by the concatenation of the\n * characters to which the numbers correspond.\n * @param bytes Array of numbers representing characters.\n * @return Stringification of the array.\n */\nconst byteArrayToString = function (bytes: number[]): string {\n  // TODO(user): Use native implementations if/when available\n  const out: string[] = [];\n  let pos = 0,\n    c = 0;\n  while (pos < bytes.length) {\n    const c1 = bytes[pos++];\n    if (c1 < 128) {\n      out[c++] = String.fromCharCode(c1);\n    } else if (c1 > 191 && c1 < 224) {\n      const c2 = bytes[pos++];\n      out[c++] = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));\n    } else if (c1 > 239 && c1 < 365) {\n      // Surrogate Pair\n      const c2 = bytes[pos++];\n      const c3 = bytes[pos++];\n      const c4 = bytes[pos++];\n      const u =\n        (((c1 & 7) << 18) | ((c2 & 63) << 12) | ((c3 & 63) << 6) | (c4 & 63)) -\n        0x10000;\n      out[c++] = String.fromCharCode(0xd800 + (u >> 10));\n      out[c++] = String.fromCharCode(0xdc00 + (u & 1023));\n    } else {\n      const c2 = bytes[pos++];\n      const c3 = bytes[pos++];\n      out[c++] = String.fromCharCode(\n        ((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63)\n      );\n    }\n  }\n  return out.join('');\n};\n\ninterface Base64 {\n  byteToCharMap_: { [key: number]: string } | null;\n  charToByteMap_: { [key: string]: number } | null;\n  byteToCharMapWebSafe_: { [key: number]: string } | null;\n  charToByteMapWebSafe_: { [key: string]: number } | null;\n  ENCODED_VALS_BASE: string;\n  readonly ENCODED_VALS: string;\n  readonly ENCODED_VALS_WEBSAFE: string;\n  HAS_NATIVE_SUPPORT: boolean;\n  encodeByteArray(input: number[] | Uint8Array, webSafe?: boolean): string;\n  encodeString(input: string, webSafe?: boolean): string;\n  decodeString(input: string, webSafe: boolean): string;\n  decodeStringToByteArray(input: string, webSafe: boolean): number[];\n  init_(): void;\n}\n\n// We define it as an object literal instead of a class because a class compiled down to es5 can't\n// be treeshaked. https://github.com/rollup/rollup/issues/1691\n// Static lookup maps, lazily populated by init_()\nexport const base64: Base64 = {\n  /**\n   * Maps bytes to characters.\n   */\n  byteToCharMap_: null,\n\n  /**\n   * Maps characters to bytes.\n   */\n  charToByteMap_: null,\n\n  /**\n   * Maps bytes to websafe characters.\n   * @private\n   */\n  byteToCharMapWebSafe_: null,\n\n  /**\n   * Maps websafe characters to bytes.\n   * @private\n   */\n  charToByteMapWebSafe_: null,\n\n  /**\n   * Our default alphabet, shared between\n   * ENCODED_VALS and ENCODED_VALS_WEBSAFE\n   */\n  ENCODED_VALS_BASE:\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + 'abcdefghijklmnopqrstuvwxyz' + '0123456789',\n\n  /**\n   * Our default alphabet. Value 64 (=) is special; it means \"nothing.\"\n   */\n  get ENCODED_VALS() {\n    return this.ENCODED_VALS_BASE + '+/=';\n  },\n\n  /**\n   * Our websafe alphabet.\n   */\n  get ENCODED_VALS_WEBSAFE() {\n    return this.ENCODED_VALS_BASE + '-_.';\n  },\n\n  /**\n   * Whether this browser supports the atob and btoa functions. This extension\n   * started at Mozilla but is now implemented by many browsers. We use the\n   * ASSUME_* variables to avoid pulling in the full useragent detection library\n   * but still allowing the standard per-browser compilations.\n   *\n   */\n  HAS_NATIVE_SUPPORT: typeof atob === 'function',\n\n  /**\n   * Base64-encode an array of bytes.\n   *\n   * @param input An array of bytes (numbers with\n   *     value in [0, 255]) to encode.\n   * @param webSafe Boolean indicating we should use the\n   *     alternative alphabet.\n   * @return The base64 encoded string.\n   */\n  encodeByteArray(input: number[] | Uint8Array, webSafe?: boolean): string {\n    if (!Array.isArray(input)) {\n      throw Error('encodeByteArray takes an array as a parameter');\n    }\n\n    this.init_();\n\n    const byteToCharMap = webSafe\n      ? this.byteToCharMapWebSafe_!\n      : this.byteToCharMap_!;\n\n    const output = [];\n\n    for (let i = 0; i < input.length; i += 3) {\n      const byte1 = input[i];\n      const haveByte2 = i + 1 < input.length;\n      const byte2 = haveByte2 ? input[i + 1] : 0;\n      const haveByte3 = i + 2 < input.length;\n      const byte3 = haveByte3 ? input[i + 2] : 0;\n\n      const outByte1 = byte1 >> 2;\n      const outByte2 = ((byte1 & 0x03) << 4) | (byte2 >> 4);\n      let outByte3 = ((byte2 & 0x0f) << 2) | (byte3 >> 6);\n      let outByte4 = byte3 & 0x3f;\n\n      if (!haveByte3) {\n        outByte4 = 64;\n\n        if (!haveByte2) {\n          outByte3 = 64;\n        }\n      }\n\n      output.push(\n        byteToCharMap[outByte1],\n        byteToCharMap[outByte2],\n        byteToCharMap[outByte3],\n        byteToCharMap[outByte4]\n      );\n    }\n\n    return output.join('');\n  },\n\n  /**\n   * Base64-encode a string.\n   *\n   * @param input A string to encode.\n   * @param webSafe If true, we should use the\n   *     alternative alphabet.\n   * @return The base64 encoded string.\n   */\n  encodeString(input: string, webSafe?: boolean): string {\n    // Shortcut for Mozilla browsers that implement\n    // a native base64 encoder in the form of \"btoa/atob\"\n    if (this.HAS_NATIVE_SUPPORT && !webSafe) {\n      return btoa(input);\n    }\n    return this.encodeByteArray(stringToByteArray(input), webSafe);\n  },\n\n  /**\n   * Base64-decode a string.\n   *\n   * @param input to decode.\n   * @param webSafe True if we should use the\n   *     alternative alphabet.\n   * @return string representing the decoded value.\n   */\n  decodeString(input: string, webSafe: boolean): string {\n    // Shortcut for Mozilla browsers that implement\n    // a native base64 encoder in the form of \"btoa/atob\"\n    if (this.HAS_NATIVE_SUPPORT && !webSafe) {\n      return atob(input);\n    }\n    return byteArrayToString(this.decodeStringToByteArray(input, webSafe));\n  },\n\n  /**\n   * Base64-decode a string.\n   *\n   * In base-64 decoding, groups of four characters are converted into three\n   * bytes.  If the encoder did not apply padding, the input length may not\n   * be a multiple of 4.\n   *\n   * In this case, the last group will have fewer than 4 characters, and\n   * padding will be inferred.  If the group has one or two characters, it decodes\n   * to one byte.  If the group has three characters, it decodes to two bytes.\n   *\n   * @param input Input to decode.\n   * @param webSafe True if we should use the web-safe alphabet.\n   * @return bytes representing the decoded value.\n   */\n  decodeStringToByteArray(input: string, webSafe: boolean): number[] {\n    this.init_();\n\n    const charToByteMap = webSafe\n      ? this.charToByteMapWebSafe_!\n      : this.charToByteMap_!;\n\n    const output: number[] = [];\n\n    for (let i = 0; i < input.length; ) {\n      const byte1 = charToByteMap[input.charAt(i++)];\n\n      const haveByte2 = i < input.length;\n      const byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;\n      ++i;\n\n      const haveByte3 = i < input.length;\n      const byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;\n      ++i;\n\n      const haveByte4 = i < input.length;\n      const byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;\n      ++i;\n\n      if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {\n        throw Error();\n      }\n\n      const outByte1 = (byte1 << 2) | (byte2 >> 4);\n      output.push(outByte1);\n\n      if (byte3 !== 64) {\n        const outByte2 = ((byte2 << 4) & 0xf0) | (byte3 >> 2);\n        output.push(outByte2);\n\n        if (byte4 !== 64) {\n          const outByte3 = ((byte3 << 6) & 0xc0) | byte4;\n          output.push(outByte3);\n        }\n      }\n    }\n\n    return output;\n  },\n\n  /**\n   * Lazy static initialization function. Called before\n   * accessing any of the static map variables.\n   * @private\n   */\n  init_() {\n    if (!this.byteToCharMap_) {\n      this.byteToCharMap_ = {};\n      this.charToByteMap_ = {};\n      this.byteToCharMapWebSafe_ = {};\n      this.charToByteMapWebSafe_ = {};\n\n      // We want quick mappings back and forth, so we precompute two maps.\n      for (let i = 0; i < this.ENCODED_VALS.length; i++) {\n        this.byteToCharMap_[i] = this.ENCODED_VALS.charAt(i);\n        this.charToByteMap_[this.byteToCharMap_[i]] = i;\n        this.byteToCharMapWebSafe_[i] = this.ENCODED_VALS_WEBSAFE.charAt(i);\n        this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]] = i;\n\n        // Be forgiving when decoding and correctly decode both encodings.\n        if (i >= this.ENCODED_VALS_BASE.length) {\n          this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)] = i;\n          this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)] = i;\n        }\n      }\n    }\n  }\n};\n\n/**\n * URL-safe base64 encoding\n */\nexport const base64Encode = function (str: string): string {\n  const utf8Bytes = stringToByteArray(str);\n  return base64.encodeByteArray(utf8Bytes, true);\n};\n\n/**\n * URL-safe base64 encoding (without \".\" padding in the end).\n * e.g. Used in JSON Web Token (JWT) parts.\n */\nexport const base64urlEncodeWithoutPadding = function (str: string): string {\n  // Use base64url encoding and remove padding in the end (dot characters).\n  return base64Encode(str).replace(/\\./g, '');\n};\n\n/**\n * URL-safe base64 decoding\n *\n * NOTE: DO NOT use the global atob() function - it does NOT support the\n * base64Url variant encoding.\n *\n * @param str To be decoded\n * @return Decoded result, if possible\n */\nexport const base64Decode = function (str: string): string | null {\n  try {\n    return base64.decodeString(str, true);\n  } catch (e) {\n    console.error('base64Decode failed: ', e);\n  }\n  return null;\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Do a deep-copy of basic JavaScript Objects or Arrays.\n */\nexport function deepCopy<T>(value: T): T {\n  return deepExtend(undefined, value) as T;\n}\n\n/**\n * Copy properties from source to target (recursively allows extension\n * of Objects and Arrays).  Scalar values in the target are over-written.\n * If target is undefined, an object of the appropriate type will be created\n * (and returned).\n *\n * We recursively copy all child properties of plain Objects in the source- so\n * that namespace- like dictionaries are merged.\n *\n * Note that the target can be a function, in which case the properties in\n * the source Object are copied onto it as static properties of the Function.\n *\n * Note: we don't merge __proto__ to prevent prototype pollution\n */\nexport function deepExtend(target: unknown, source: unknown): unknown {\n  if (!(source instanceof Object)) {\n    return source;\n  }\n\n  switch (source.constructor) {\n    case Date:\n      // Treat Dates like scalars; if the target date object had any child\n      // properties - they will be lost!\n      const dateValue = source as Date;\n      return new Date(dateValue.getTime());\n\n    case Object:\n      if (target === undefined) {\n        target = {};\n      }\n      break;\n    case Array:\n      // Always copy the array source and overwrite the target.\n      target = [];\n      break;\n\n    default:\n      // Not a plain Object - treat it as a scalar.\n      return source;\n  }\n\n  for (const prop in source) {\n    // use isValidKey to guard against prototype pollution. See https://snyk.io/vuln/SNYK-JS-LODASH-450202\n    if (!source.hasOwnProperty(prop) || !isValidKey(prop)) {\n      continue;\n    }\n    (target as Record<string, unknown>)[prop] = deepExtend(\n      (target as Record<string, unknown>)[prop],\n      (source as Record<string, unknown>)[prop]\n    );\n  }\n\n  return target;\n}\n\nfunction isValidKey(key: string): boolean {\n  return key !== '__proto__';\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CONSTANTS } from './constants';\n\n/**\n * Returns navigator.userAgent string or '' if it's not defined.\n * @return user agent string\n */\nexport function getUA(): string {\n  if (\n    typeof navigator !== 'undefined' &&\n    typeof navigator['userAgent'] === 'string'\n  ) {\n    return navigator['userAgent'];\n  } else {\n    return '';\n  }\n}\n\n/**\n * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.\n *\n * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap\n * in the Ripple emulator) nor Cordova `onDeviceReady`, which would normally\n * wait for a callback.\n */\nexport function isMobileCordova(): boolean {\n  return (\n    typeof window !== 'undefined' &&\n    // @ts-ignore Setting up an broadly applicable index signature for Window\n    // just to deal with this case would probably be a bad idea.\n    !!(window['cordova'] || window['phonegap'] || window['PhoneGap']) &&\n    /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(getUA())\n  );\n}\n\n/**\n * Detect Node.js.\n *\n * @return true if Node.js environment is detected.\n */\n// Node detection logic from: https://github.com/iliakan/detect-node/\nexport function isNode(): boolean {\n  try {\n    return (\n      Object.prototype.toString.call(global.process) === '[object process]'\n    );\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Detect Browser Environment\n */\nexport function isBrowser(): boolean {\n  return typeof self === 'object' && self.self === self;\n}\n\n/**\n * Detect browser extensions (Chrome and Firefox at least).\n */\ninterface BrowserRuntime {\n  id?: unknown;\n}\ndeclare const chrome: { runtime?: BrowserRuntime };\ndeclare const browser: { runtime?: BrowserRuntime };\nexport function isBrowserExtension(): boolean {\n  const runtime =\n    typeof chrome === 'object'\n      ? chrome.runtime\n      : typeof browser === 'object'\n      ? browser.runtime\n      : undefined;\n  return typeof runtime === 'object' && runtime.id !== undefined;\n}\n\n/**\n * Detect React Native.\n *\n * @return true if ReactNative environment is detected.\n */\nexport function isReactNative(): boolean {\n  return (\n    typeof navigator === 'object' && navigator['product'] === 'ReactNative'\n  );\n}\n\n/** Detects Electron apps. */\nexport function isElectron(): boolean {\n  return getUA().indexOf('Electron/') >= 0;\n}\n\n/** Detects Internet Explorer. */\nexport function isIE(): boolean {\n  const ua = getUA();\n  return ua.indexOf('MSIE ') >= 0 || ua.indexOf('Trident/') >= 0;\n}\n\n/** Detects Universal Windows Platform apps. */\nexport function isUWP(): boolean {\n  return getUA().indexOf('MSAppHost/') >= 0;\n}\n\n/**\n * Detect whether the current SDK build is the Node version.\n *\n * @return true if it's the Node SDK build.\n */\nexport function isNodeSdk(): boolean {\n  return CONSTANTS.NODE_CLIENT === true || CONSTANTS.NODE_ADMIN === true;\n}\n\n/** Returns true if we are running in Safari. */\nexport function isSafari(): boolean {\n  return (\n    !isNode() &&\n    navigator.userAgent.includes('Safari') &&\n    !navigator.userAgent.includes('Chrome')\n  );\n}\n\n/**\n * This method checks if indexedDB is supported by current browser/service worker context\n * @return true if indexedDB is supported by current browser/service worker context\n */\nexport function isIndexedDBAvailable(): boolean {\n  return typeof indexedDB === 'object';\n}\n\n/**\n * This method validates browser/sw context for indexedDB by opening a dummy indexedDB database and reject\n * if errors occur during the database open operation.\n *\n * @throws exception if current browser/sw context can't run idb.open (ex: Safari iframe, Firefox\n * private browsing)\n */\nexport function validateIndexedDBOpenable(): Promise<boolean> {\n  return new Promise((resolve, reject) => {\n    try {\n      let preExist: boolean = true;\n      const DB_CHECK_NAME =\n        'validate-browser-context-for-indexeddb-analytics-module';\n      const request = self.indexedDB.open(DB_CHECK_NAME);\n      request.onsuccess = () => {\n        request.result.close();\n        // delete database only when it doesn't pre-exist\n        if (!preExist) {\n          self.indexedDB.deleteDatabase(DB_CHECK_NAME);\n        }\n        resolve(true);\n      };\n      request.onupgradeneeded = () => {\n        preExist = false;\n      };\n\n      request.onerror = () => {\n        reject(request.error?.message || '');\n      };\n    } catch (error) {\n      reject(error);\n    }\n  });\n}\n\n/**\n *\n * This method checks whether cookie is enabled within current browser\n * @return true if cookie is enabled within current browser\n */\nexport function areCookiesEnabled(): boolean {\n  if (typeof navigator === 'undefined' || !navigator.cookieEnabled) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * Polyfill for `globalThis` object.\n * @returns the `globalThis` object for the given environment.\n */\nexport function getGlobal(): typeof globalThis {\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n  if (typeof global !== 'undefined') {\n    return global;\n  }\n  throw new Error('Unable to locate global object.');\n}\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64Decode } from './crypt';\nimport { getGlobal } from './environment';\n\n/**\n * Keys for experimental properties on the `FirebaseDefaults` object.\n * @public\n */\nexport type ExperimentalKey = 'authTokenSyncURL' | 'authIdTokenMaxAge';\n\n/**\n * An object that can be injected into the environment as __FIREBASE_DEFAULTS__,\n * either as a property of globalThis, a shell environment variable, or a\n * cookie.\n *\n * This object can be used to automatically configure and initialize\n * a Firebase app as well as any emulators.\n *\n * @public\n */\nexport interface FirebaseDefaults {\n  config?: Record<string, string>;\n  emulatorHosts?: Record<string, string>;\n  _authTokenSyncURL?: string;\n  _authIdTokenMaxAge?: number;\n  [key: string]: unknown;\n}\n\ndeclare global {\n  // Need `var` for this to work.\n  // eslint-disable-next-line no-var\n  var __FIREBASE_DEFAULTS__: FirebaseDefaults | undefined;\n}\n\nconst getDefaultsFromGlobal = (): FirebaseDefaults | undefined =>\n  getGlobal().__FIREBASE_DEFAULTS__;\n\n/**\n * Attempt to read defaults from a JSON string provided to\n * process.env.__FIREBASE_DEFAULTS__ or a JSON file whose path is in\n * process.env.__FIREBASE_DEFAULTS_PATH__\n */\nconst getDefaultsFromEnvVariable = (): FirebaseDefaults | undefined => {\n  if (typeof process === 'undefined' || typeof process.env === 'undefined') {\n    return;\n  }\n  const defaultsJsonString = process.env.__FIREBASE_DEFAULTS__;\n  if (defaultsJsonString) {\n    return JSON.parse(defaultsJsonString);\n  }\n};\n\nconst getDefaultsFromCookie = (): FirebaseDefaults | undefined => {\n  if (typeof document === 'undefined') {\n    return;\n  }\n  let match;\n  try {\n    match = document.cookie.match(/__FIREBASE_DEFAULTS__=([^;]+)/);\n  } catch (e) {\n    // Some environments such as Angular Universal SSR have a\n    // `document` object but error on accessing `document.cookie`.\n    return;\n  }\n  const decoded = match && base64Decode(match[1]);\n  return decoded && JSON.parse(decoded);\n};\n\n/**\n * Get the __FIREBASE_DEFAULTS__ object. It checks in order:\n * (1) if such an object exists as a property of `globalThis`\n * (2) if such an object was provided on a shell environment variable\n * (3) if such an object exists in a cookie\n */\nconst getDefaults = (): FirebaseDefaults | undefined => {\n  try {\n    return (\n      getDefaultsFromGlobal() ||\n      getDefaultsFromEnvVariable() ||\n      getDefaultsFromCookie()\n    );\n  } catch (e) {\n    /**\n     * Catch-all for being unable to get __FIREBASE_DEFAULTS__ due\n     * to any environment case we have not accounted for. Log to\n     * info instead of swallowing so we can find these unknown cases\n     * and add paths for them if needed.\n     */\n    console.info(`Unable to get __FIREBASE_DEFAULTS__ due to: ${e}`);\n    return;\n  }\n};\n\n/**\n * Returns emulator host stored in the __FIREBASE_DEFAULTS__ object\n * for the given product.\n * @returns a URL host formatted like `127.0.0.1:9999` or `[::1]:4000` if available\n * @public\n */\nexport const getDefaultEmulatorHost = (\n  productName: string\n): string | undefined => getDefaults()?.emulatorHosts?.[productName];\n\n/**\n * Returns emulator hostname and port stored in the __FIREBASE_DEFAULTS__ object\n * for the given product.\n * @returns a pair of hostname and port like `[\"::1\", 4000]` if available\n * @public\n */\nexport const getDefaultEmulatorHostnameAndPort = (\n  productName: string\n): [hostname: string, port: number] | undefined => {\n  const host = getDefaultEmulatorHost(productName);\n  if (!host) {\n    return undefined;\n  }\n  const separatorIndex = host.lastIndexOf(':'); // Finding the last since IPv6 addr also has colons.\n  if (separatorIndex <= 0 || separatorIndex + 1 === host.length) {\n    throw new Error(`Invalid host ${host} with no separate hostname and port!`);\n  }\n  // eslint-disable-next-line no-restricted-globals\n  const port = parseInt(host.substring(separatorIndex + 1), 10);\n  if (host[0] === '[') {\n    // Bracket-quoted `[ipv6addr]:port` => return \"ipv6addr\" (without brackets).\n    return [host.substring(1, separatorIndex - 1), port];\n  } else {\n    return [host.substring(0, separatorIndex), port];\n  }\n};\n\n/**\n * Returns Firebase app config stored in the __FIREBASE_DEFAULTS__ object.\n * @public\n */\nexport const getDefaultAppConfig = (): Record<string, string> | undefined =>\n  getDefaults()?.config;\n\n/**\n * Returns an experimental setting on the __FIREBASE_DEFAULTS__ object (properties\n * prefixed by \"_\")\n * @public\n */\nexport const getExperimentalSetting = <T extends ExperimentalKey>(\n  name: T\n): FirebaseDefaults[`_${T}`] =>\n  getDefaults()?.[`_${name}`] as FirebaseDefaults[`_${T}`];\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64urlEncodeWithoutPadding } from './crypt';\n\n// Firebase Auth tokens contain snake_case claims following the JWT standard / convention.\n/* eslint-disable camelcase */\n\nexport type FirebaseSignInProvider =\n  | 'custom'\n  | 'email'\n  | 'password'\n  | 'phone'\n  | 'anonymous'\n  | 'google.com'\n  | 'facebook.com'\n  | 'github.com'\n  | 'twitter.com'\n  | 'microsoft.com'\n  | 'apple.com';\n\ninterface FirebaseIdToken {\n  // Always set to https://securetoken.google.com/PROJECT_ID\n  iss: string;\n\n  // Always set to PROJECT_ID\n  aud: string;\n\n  // The user's unique ID\n  sub: string;\n\n  // The token issue time, in seconds since epoch\n  iat: number;\n\n  // The token expiry time, normally 'iat' + 3600\n  exp: number;\n\n  // The user's unique ID. Must be equal to 'sub'\n  user_id: string;\n\n  // The time the user authenticated, normally 'iat'\n  auth_time: number;\n\n  // The sign in provider, only set when the provider is 'anonymous'\n  provider_id?: 'anonymous';\n\n  // The user's primary email\n  email?: string;\n\n  // The user's email verification status\n  email_verified?: boolean;\n\n  // The user's primary phone number\n  phone_number?: string;\n\n  // The user's display name\n  name?: string;\n\n  // The user's profile photo URL\n  picture?: string;\n\n  // Information on all identities linked to this user\n  firebase: {\n    // The primary sign-in provider\n    sign_in_provider: FirebaseSignInProvider;\n\n    // A map of providers to the user's list of unique identifiers from\n    // each provider\n    identities?: { [provider in FirebaseSignInProvider]?: string[] };\n  };\n\n  // Custom claims set by the developer\n  [claim: string]: unknown;\n\n  uid?: never; // Try to catch a common mistake of \"uid\" (should be \"sub\" instead).\n}\n\nexport type EmulatorMockTokenOptions = ({ user_id: string } | { sub: string }) &\n  Partial<FirebaseIdToken>;\n\nexport function createMockUserToken(\n  token: EmulatorMockTokenOptions,\n  projectId?: string\n): string {\n  if (token.uid) {\n    throw new Error(\n      'The \"uid\" field is no longer supported by mockUserToken. Please use \"sub\" instead for Firebase Auth User ID.'\n    );\n  }\n  // Unsecured JWTs use \"none\" as the algorithm.\n  const header = {\n    alg: 'none',\n    type: 'JWT'\n  };\n\n  const project = projectId || 'demo-project';\n  const iat = token.iat || 0;\n  const sub = token.sub || token.user_id;\n  if (!sub) {\n    throw new Error(\"mockUserToken must contain 'sub' or 'user_id' field!\");\n  }\n\n  const payload: FirebaseIdToken = {\n    // Set all required fields to decent defaults\n    iss: `https://securetoken.google.com/${project}`,\n    aud: project,\n    iat,\n    exp: iat + 3600,\n    auth_time: iat,\n    sub,\n    user_id: sub,\n    firebase: {\n      sign_in_provider: 'custom',\n      identities: {}\n    },\n\n    // Override with user options\n    ...token\n  };\n\n  // Unsecured JWTs use the empty string as a signature.\n  const signature = '';\n  return [\n    base64urlEncodeWithoutPadding(JSON.stringify(header)),\n    base64urlEncodeWithoutPadding(JSON.stringify(payload)),\n    signature\n  ].join('.');\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Standardized Firebase Error.\n *\n * Usage:\n *\n *   // Typescript string literals for type-safe codes\n *   type Err =\n *     'unknown' |\n *     'object-not-found'\n *     ;\n *\n *   // Closure enum for type-safe error codes\n *   // at-enum {string}\n *   var Err = {\n *     UNKNOWN: 'unknown',\n *     OBJECT_NOT_FOUND: 'object-not-found',\n *   }\n *\n *   let errors: Map<Err, string> = {\n *     'generic-error': \"Unknown error\",\n *     'file-not-found': \"Could not find file: {$file}\",\n *   };\n *\n *   // Type-safe function - must pass a valid error code as param.\n *   let error = new ErrorFactory<Err>('service', 'Service', errors);\n *\n *   ...\n *   throw error.create(Err.GENERIC);\n *   ...\n *   throw error.create(Err.FILE_NOT_FOUND, {'file': fileName});\n *   ...\n *   // Service: Could not file file: foo.txt (service/file-not-found).\n *\n *   catch (e) {\n *     assert(e.message === \"Could not find file: foo.txt.\");\n *     if ((e as FirebaseError)?.code === 'service/file-not-found') {\n *       console.log(\"Could not read file: \" + e['file']);\n *     }\n *   }\n */\n\nexport type ErrorMap<ErrorCode extends string> = {\n  readonly [K in ErrorCode]: string;\n};\n\nconst ERROR_NAME = 'FirebaseError';\n\nexport interface StringLike {\n  toString(): string;\n}\n\nexport interface ErrorData {\n  [key: string]: unknown;\n}\n\n// Based on code from:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Custom_Error_Types\nexport class FirebaseError extends Error {\n  /** The custom name for all FirebaseErrors. */\n  readonly name: string = ERROR_NAME;\n\n  constructor(\n    /** The error code for this error. */\n    readonly code: string,\n    message: string,\n    /** Custom data for this error. */\n    public customData?: Record<string, unknown>\n  ) {\n    super(message);\n\n    // Fix For ES5\n    // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    Object.setPrototypeOf(this, FirebaseError.prototype);\n\n    // Maintains proper stack trace for where our error was thrown.\n    // Only available on V8.\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, ErrorFactory.prototype.create);\n    }\n  }\n}\n\nexport class ErrorFactory<\n  ErrorCode extends string,\n  ErrorParams extends { readonly [K in ErrorCode]?: ErrorData } = {}\n> {\n  constructor(\n    private readonly service: string,\n    private readonly serviceName: string,\n    private readonly errors: ErrorMap<ErrorCode>\n  ) {}\n\n  create<K extends ErrorCode>(\n    code: K,\n    ...data: K extends keyof ErrorParams ? [ErrorParams[K]] : []\n  ): FirebaseError {\n    const customData = (data[0] as ErrorData) || {};\n    const fullCode = `${this.service}/${code}`;\n    const template = this.errors[code];\n\n    const message = template ? replaceTemplate(template, customData) : 'Error';\n    // Service Name: Error message (service/code).\n    const fullMessage = `${this.serviceName}: ${message} (${fullCode}).`;\n\n    const error = new FirebaseError(fullCode, fullMessage, customData);\n\n    return error;\n  }\n}\n\nfunction replaceTemplate(template: string, data: ErrorData): string {\n  return template.replace(PATTERN, (_, key) => {\n    const value = data[key];\n    return value != null ? String(value) : `<${key}?>`;\n  });\n}\n\nconst PATTERN = /\\{\\$([^}]+)}/g;\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Evaluates a JSON string into a javascript object.\n *\n * @param {string} str A string containing JSON.\n * @return {*} The javascript object representing the specified JSON.\n */\nexport function jsonEval(str: string): unknown {\n  return JSON.parse(str);\n}\n\n/**\n * Returns JSON representing a javascript object.\n * @param {*} data Javascript object to be stringified.\n * @return {string} The JSON contents of the object.\n */\nexport function stringify(data: unknown): string {\n  return JSON.stringify(data);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function contains<T extends object>(obj: T, key: string): boolean {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nexport function safeGet<T extends object, K extends keyof T>(\n  obj: T,\n  key: K\n): T[K] | undefined {\n  if (Object.prototype.hasOwnProperty.call(obj, key)) {\n    return obj[key];\n  } else {\n    return undefined;\n  }\n}\n\nexport function isEmpty(obj: object): obj is {} {\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function map<K extends string, V, U>(\n  obj: { [key in K]: V },\n  fn: (value: V, key: K, obj: { [key in K]: V }) => U,\n  contextObj?: unknown\n): { [key in K]: U } {\n  const res: Partial<{ [key in K]: U }> = {};\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      res[key] = fn.call(contextObj, obj[key], key, obj);\n    }\n  }\n  return res as { [key in K]: U };\n}\n\n/**\n * Deep equal two objects. Support Arrays and Objects.\n */\nexport function deepEqual(a: object, b: object): boolean {\n  if (a === b) {\n    return true;\n  }\n\n  const aKeys = Object.keys(a);\n  const bKeys = Object.keys(b);\n  for (const k of aKeys) {\n    if (!bKeys.includes(k)) {\n      return false;\n    }\n\n    const aProp = (a as Record<string, unknown>)[k];\n    const bProp = (b as Record<string, unknown>)[k];\n    if (isObject(aProp) && isObject(bProp)) {\n      if (!deepEqual(aProp, bProp)) {\n        return false;\n      }\n    } else if (aProp !== bProp) {\n      return false;\n    }\n  }\n\n  for (const k of bKeys) {\n    if (!aKeys.includes(k)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction isObject(thing: unknown): thing is object {\n  return thing !== null && typeof thing === 'object';\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns a querystring-formatted string (e.g. &arg=val&arg2=val2) from a\n * params object (e.g. {arg: 'val', arg2: 'val2'})\n * Note: You must prepend it with ? when adding it to a URL.\n */\nexport function querystring(querystringParams: {\n  [key: string]: string | number;\n}): string {\n  const params = [];\n  for (const [key, value] of Object.entries(querystringParams)) {\n    if (Array.isArray(value)) {\n      value.forEach(arrayVal => {\n        params.push(\n          encodeURIComponent(key) + '=' + encodeURIComponent(arrayVal)\n        );\n      });\n    } else {\n      params.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\n    }\n  }\n  return params.length ? '&' + params.join('&') : '';\n}\n\n/**\n * Decodes a querystring (e.g. ?arg=val&arg2=val2) into a params object\n * (e.g. {arg: 'val', arg2: 'val2'})\n */\nexport function querystringDecode(querystring: string): Record<string, string> {\n  const obj: Record<string, string> = {};\n  const tokens = querystring.replace(/^\\?/, '').split('&');\n\n  tokens.forEach(token => {\n    if (token) {\n      const [key, value] = token.split('=');\n      obj[decodeURIComponent(key)] = decodeURIComponent(value);\n    }\n  });\n  return obj;\n}\n\n/**\n * Extract the query string part of a URL, including the leading question mark (if present).\n */\nexport function extractQuerystring(url: string): string {\n  const queryStart = url.indexOf('?');\n  if (!queryStart) {\n    return '';\n  }\n  const fragmentStart = url.indexOf('#', queryStart);\n  return url.substring(\n    queryStart,\n    fragmentStart > 0 ? fragmentStart : undefined\n  );\n}\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Deferred } from './deferred';\n\n/**\n * Rejects if the given promise doesn't resolve in timeInMS milliseconds.\n * @internal\n */\nexport function promiseWithTimeout<T>(\n  promise: Promise<T>,\n  timeInMS = 2000\n): Promise<T> {\n  const deferredPromise = new Deferred<T>();\n  setTimeout(() => deferredPromise.reject('timeout!'), timeInMS);\n  promise.then(deferredPromise.resolve, deferredPromise.reject);\n  return deferredPromise.promise;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview SHA-1 cryptographic hash.\n * Variable names follow the notation in FIPS PUB 180-3:\n * http://csrc.nist.gov/publications/fips/fips180-3/fips180-3_final.pdf.\n *\n * Usage:\n *   var sha1 = new sha1();\n *   sha1.update(bytes);\n *   var hash = sha1.digest();\n *\n * Performance:\n *   Chrome 23:   ~400 Mbit/s\n *   Firefox 16:  ~250 Mbit/s\n *\n */\n\n/**\n * SHA-1 cryptographic hash constructor.\n *\n * The properties declared here are discussed in the above algorithm document.\n * @constructor\n * @final\n * @struct\n */\nexport class Sha1 {\n  /**\n   * Holds the previous values of accumulated variables a-e in the compress_\n   * function.\n   * @private\n   */\n  private chain_: number[] = [];\n\n  /**\n   * A buffer holding the partially computed hash result.\n   * @private\n   */\n  private buf_: number[] = [];\n\n  /**\n   * An array of 80 bytes, each a part of the message to be hashed.  Referred to\n   * as the message schedule in the docs.\n   * @private\n   */\n  private W_: number[] = [];\n\n  /**\n   * Contains data needed to pad messages less than 64 bytes.\n   * @private\n   */\n  private pad_: number[] = [];\n\n  /**\n   * @private {number}\n   */\n  private inbuf_: number = 0;\n\n  /**\n   * @private {number}\n   */\n  private total_: number = 0;\n\n  blockSize: number;\n\n  constructor() {\n    this.blockSize = 512 / 8;\n\n    this.pad_[0] = 128;\n    for (let i = 1; i < this.blockSize; ++i) {\n      this.pad_[i] = 0;\n    }\n\n    this.reset();\n  }\n\n  reset(): void {\n    this.chain_[0] = 0x67452301;\n    this.chain_[1] = 0xefcdab89;\n    this.chain_[2] = 0x98badcfe;\n    this.chain_[3] = 0x10325476;\n    this.chain_[4] = 0xc3d2e1f0;\n\n    this.inbuf_ = 0;\n    this.total_ = 0;\n  }\n\n  /**\n   * Internal compress helper function.\n   * @param buf Block to compress.\n   * @param offset Offset of the block in the buffer.\n   * @private\n   */\n  compress_(buf: number[] | Uint8Array | string, offset?: number): void {\n    if (!offset) {\n      offset = 0;\n    }\n\n    const W = this.W_;\n\n    // get 16 big endian words\n    if (typeof buf === 'string') {\n      for (let i = 0; i < 16; i++) {\n        // TODO(user): [bug 8140122] Recent versions of Safari for Mac OS and iOS\n        // have a bug that turns the post-increment ++ operator into pre-increment\n        // during JIT compilation.  We have code that depends heavily on SHA-1 for\n        // correctness and which is affected by this bug, so I've removed all uses\n        // of post-increment ++ in which the result value is used.  We can revert\n        // this change once the Safari bug\n        // (https://bugs.webkit.org/show_bug.cgi?id=109036) has been fixed and\n        // most clients have been updated.\n        W[i] =\n          (buf.charCodeAt(offset) << 24) |\n          (buf.charCodeAt(offset + 1) << 16) |\n          (buf.charCodeAt(offset + 2) << 8) |\n          buf.charCodeAt(offset + 3);\n        offset += 4;\n      }\n    } else {\n      for (let i = 0; i < 16; i++) {\n        W[i] =\n          (buf[offset] << 24) |\n          (buf[offset + 1] << 16) |\n          (buf[offset + 2] << 8) |\n          buf[offset + 3];\n        offset += 4;\n      }\n    }\n\n    // expand to 80 words\n    for (let i = 16; i < 80; i++) {\n      const t = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\n      W[i] = ((t << 1) | (t >>> 31)) & 0xffffffff;\n    }\n\n    let a = this.chain_[0];\n    let b = this.chain_[1];\n    let c = this.chain_[2];\n    let d = this.chain_[3];\n    let e = this.chain_[4];\n    let f, k;\n\n    // TODO(user): Try to unroll this loop to speed up the computation.\n    for (let i = 0; i < 80; i++) {\n      if (i < 40) {\n        if (i < 20) {\n          f = d ^ (b & (c ^ d));\n          k = 0x5a827999;\n        } else {\n          f = b ^ c ^ d;\n          k = 0x6ed9eba1;\n        }\n      } else {\n        if (i < 60) {\n          f = (b & c) | (d & (b | c));\n          k = 0x8f1bbcdc;\n        } else {\n          f = b ^ c ^ d;\n          k = 0xca62c1d6;\n        }\n      }\n\n      const t = (((a << 5) | (a >>> 27)) + f + e + k + W[i]) & 0xffffffff;\n      e = d;\n      d = c;\n      c = ((b << 30) | (b >>> 2)) & 0xffffffff;\n      b = a;\n      a = t;\n    }\n\n    this.chain_[0] = (this.chain_[0] + a) & 0xffffffff;\n    this.chain_[1] = (this.chain_[1] + b) & 0xffffffff;\n    this.chain_[2] = (this.chain_[2] + c) & 0xffffffff;\n    this.chain_[3] = (this.chain_[3] + d) & 0xffffffff;\n    this.chain_[4] = (this.chain_[4] + e) & 0xffffffff;\n  }\n\n  update(bytes?: number[] | Uint8Array | string, length?: number): void {\n    // TODO(johnlenz): tighten the function signature and remove this check\n    if (bytes == null) {\n      return;\n    }\n\n    if (length === undefined) {\n      length = bytes.length;\n    }\n\n    const lengthMinusBlock = length - this.blockSize;\n    let n = 0;\n    // Using local instead of member variables gives ~5% speedup on Firefox 16.\n    const buf = this.buf_;\n    let inbuf = this.inbuf_;\n\n    // The outer while loop should execute at most twice.\n    while (n < length) {\n      // When we have no data in the block to top up, we can directly process the\n      // input buffer (assuming it contains sufficient data). This gives ~25%\n      // speedup on Chrome 23 and ~15% speedup on Firefox 16, but requires that\n      // the data is provided in large chunks (or in multiples of 64 bytes).\n      if (inbuf === 0) {\n        while (n <= lengthMinusBlock) {\n          this.compress_(bytes, n);\n          n += this.blockSize;\n        }\n      }\n\n      if (typeof bytes === 'string') {\n        while (n < length) {\n          buf[inbuf] = bytes.charCodeAt(n);\n          ++inbuf;\n          ++n;\n          if (inbuf === this.blockSize) {\n            this.compress_(buf);\n            inbuf = 0;\n            // Jump to the outer loop so we use the full-block optimization.\n            break;\n          }\n        }\n      } else {\n        while (n < length) {\n          buf[inbuf] = bytes[n];\n          ++inbuf;\n          ++n;\n          if (inbuf === this.blockSize) {\n            this.compress_(buf);\n            inbuf = 0;\n            // Jump to the outer loop so we use the full-block optimization.\n            break;\n          }\n        }\n      }\n    }\n\n    this.inbuf_ = inbuf;\n    this.total_ += length;\n  }\n\n  /** @override */\n  digest(): number[] {\n    const digest: number[] = [];\n    let totalBits = this.total_ * 8;\n\n    // Add pad 0x80 0x00*.\n    if (this.inbuf_ < 56) {\n      this.update(this.pad_, 56 - this.inbuf_);\n    } else {\n      this.update(this.pad_, this.blockSize - (this.inbuf_ - 56));\n    }\n\n    // Add # bits.\n    for (let i = this.blockSize - 1; i >= 56; i--) {\n      this.buf_[i] = totalBits & 255;\n      totalBits /= 256; // Don't use bit-shifting here!\n    }\n\n    this.compress_(this.buf_);\n\n    let n = 0;\n    for (let i = 0; i < 5; i++) {\n      for (let j = 24; j >= 0; j -= 8) {\n        digest[n] = (this.chain_[i] >> j) & 255;\n        ++n;\n      }\n    }\n    return digest;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport type NextFn<T> = (value: T) => void;\nexport type ErrorFn = (error: Error) => void;\nexport type CompleteFn = () => void;\n\nexport interface Observer<T> {\n  // Called once for each value in a stream of values.\n  next: NextFn<T>;\n\n  // A stream terminates by a single call to EITHER error() or complete().\n  error: ErrorFn;\n\n  // No events will be sent to next() once complete() is called.\n  complete: CompleteFn;\n}\n\nexport type PartialObserver<T> = Partial<Observer<T>>;\n\n// TODO: Support also Unsubscribe.unsubscribe?\nexport type Unsubscribe = () => void;\n\n/**\n * The Subscribe interface has two forms - passing the inline function\n * callbacks, or a object interface with callback properties.\n */\nexport interface Subscribe<T> {\n  (next?: NextFn<T>, error?: ErrorFn, complete?: CompleteFn): Unsubscribe;\n  (observer: PartialObserver<T>): Unsubscribe;\n}\n\nexport interface Observable<T> {\n  // Subscribe method\n  subscribe: Subscribe<T>;\n}\n\nexport type Executor<T> = (observer: Observer<T>) => void;\n\n/**\n * Helper to make a Subscribe function (just like Promise helps make a\n * Thenable).\n *\n * @param executor Function which can make calls to a single Observer\n *     as a proxy.\n * @param onNoObservers Callback when count of Observers goes to zero.\n */\nexport function createSubscribe<T>(\n  executor: Executor<T>,\n  onNoObservers?: Executor<T>\n): Subscribe<T> {\n  const proxy = new ObserverProxy<T>(executor, onNoObservers);\n  return proxy.subscribe.bind(proxy);\n}\n\n/**\n * Implement fan-out for any number of Observers attached via a subscribe\n * function.\n */\nclass ObserverProxy<T> implements Observer<T> {\n  private observers: Array<Observer<T>> | undefined = [];\n  private unsubscribes: Unsubscribe[] = [];\n  private onNoObservers: Executor<T> | undefined;\n  private observerCount = 0;\n  // Micro-task scheduling by calling task.then().\n  private task = Promise.resolve();\n  private finalized = false;\n  private finalError?: Error;\n\n  /**\n   * @param executor Function which can make calls to a single Observer\n   *     as a proxy.\n   * @param onNoObservers Callback when count of Observers goes to zero.\n   */\n  constructor(executor: Executor<T>, onNoObservers?: Executor<T>) {\n    this.onNoObservers = onNoObservers;\n    // Call the executor asynchronously so subscribers that are called\n    // synchronously after the creation of the subscribe function\n    // can still receive the very first value generated in the executor.\n    this.task\n      .then(() => {\n        executor(this);\n      })\n      .catch(e => {\n        this.error(e);\n      });\n  }\n\n  next(value: T): void {\n    this.forEachObserver((observer: Observer<T>) => {\n      observer.next(value);\n    });\n  }\n\n  error(error: Error): void {\n    this.forEachObserver((observer: Observer<T>) => {\n      observer.error(error);\n    });\n    this.close(error);\n  }\n\n  complete(): void {\n    this.forEachObserver((observer: Observer<T>) => {\n      observer.complete();\n    });\n    this.close();\n  }\n\n  /**\n   * Subscribe function that can be used to add an Observer to the fan-out list.\n   *\n   * - We require that no event is sent to a subscriber sychronously to their\n   *   call to subscribe().\n   */\n  subscribe(\n    nextOrObserver?: NextFn<T> | PartialObserver<T>,\n    error?: ErrorFn,\n    complete?: CompleteFn\n  ): Unsubscribe {\n    let observer: Observer<T>;\n\n    if (\n      nextOrObserver === undefined &&\n      error === undefined &&\n      complete === undefined\n    ) {\n      throw new Error('Missing Observer.');\n    }\n\n    // Assemble an Observer object when passed as callback functions.\n    if (\n      implementsAnyMethods(nextOrObserver as { [key: string]: unknown }, [\n        'next',\n        'error',\n        'complete'\n      ])\n    ) {\n      observer = nextOrObserver as Observer<T>;\n    } else {\n      observer = {\n        next: nextOrObserver as NextFn<T>,\n        error,\n        complete\n      } as Observer<T>;\n    }\n\n    if (observer.next === undefined) {\n      observer.next = noop as NextFn<T>;\n    }\n    if (observer.error === undefined) {\n      observer.error = noop as ErrorFn;\n    }\n    if (observer.complete === undefined) {\n      observer.complete = noop as CompleteFn;\n    }\n\n    const unsub = this.unsubscribeOne.bind(this, this.observers!.length);\n\n    // Attempt to subscribe to a terminated Observable - we\n    // just respond to the Observer with the final error or complete\n    // event.\n    if (this.finalized) {\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this.task.then(() => {\n        try {\n          if (this.finalError) {\n            observer.error(this.finalError);\n          } else {\n            observer.complete();\n          }\n        } catch (e) {\n          // nothing\n        }\n        return;\n      });\n    }\n\n    this.observers!.push(observer as Observer<T>);\n\n    return unsub;\n  }\n\n  // Unsubscribe is synchronous - we guarantee that no events are sent to\n  // any unsubscribed Observer.\n  private unsubscribeOne(i: number): void {\n    if (this.observers === undefined || this.observers[i] === undefined) {\n      return;\n    }\n\n    delete this.observers[i];\n\n    this.observerCount -= 1;\n    if (this.observerCount === 0 && this.onNoObservers !== undefined) {\n      this.onNoObservers(this);\n    }\n  }\n\n  private forEachObserver(fn: (observer: Observer<T>) => void): void {\n    if (this.finalized) {\n      // Already closed by previous event....just eat the additional values.\n      return;\n    }\n\n    // Since sendOne calls asynchronously - there is no chance that\n    // this.observers will become undefined.\n    for (let i = 0; i < this.observers!.length; i++) {\n      this.sendOne(i, fn);\n    }\n  }\n\n  // Call the Observer via one of it's callback function. We are careful to\n  // confirm that the observe has not been unsubscribed since this asynchronous\n  // function had been queued.\n  private sendOne(i: number, fn: (observer: Observer<T>) => void): void {\n    // Execute the callback asynchronously\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.task.then(() => {\n      if (this.observers !== undefined && this.observers[i] !== undefined) {\n        try {\n          fn(this.observers[i]);\n        } catch (e) {\n          // Ignore exceptions raised in Observers or missing methods of an\n          // Observer.\n          // Log error to console. b/31404806\n          if (typeof console !== 'undefined' && console.error) {\n            console.error(e);\n          }\n        }\n      }\n    });\n  }\n\n  private close(err?: Error): void {\n    if (this.finalized) {\n      return;\n    }\n    this.finalized = true;\n    if (err !== undefined) {\n      this.finalError = err;\n    }\n    // Proxy is no longer needed - garbage collect references\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.task.then(() => {\n      this.observers = undefined;\n      this.onNoObservers = undefined;\n    });\n  }\n}\n\n/** Turn synchronous function into one called asynchronously. */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function async(fn: Function, onError?: ErrorFn): Function {\n  return (...args: unknown[]) => {\n    Promise.resolve(true)\n      .then(() => {\n        fn(...args);\n      })\n      .catch((error: Error) => {\n        if (onError) {\n          onError(error);\n        }\n      });\n  };\n}\n\n/**\n * Return true if the object passed in implements any of the named methods.\n */\nfunction implementsAnyMethods(\n  obj: { [key: string]: unknown },\n  methods: string[]\n): boolean {\n  if (typeof obj !== 'object' || obj === null) {\n    return false;\n  }\n\n  for (const method of methods) {\n    if (method in obj && typeof obj[method] === 'function') {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction noop(): void {\n  // do nothing\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * The amount of milliseconds to exponentially increase.\n */\nconst DEFAULT_INTERVAL_MILLIS = 1000;\n\n/**\n * The factor to backoff by.\n * Should be a number greater than 1.\n */\nconst DEFAULT_BACKOFF_FACTOR = 2;\n\n/**\n * The maximum milliseconds to increase to.\n *\n * <p>Visible for testing\n */\nexport const MAX_VALUE_MILLIS = 4 * 60 * 60 * 1000; // Four hours, like iOS and Android.\n\n/**\n * The percentage of backoff time to randomize by.\n * See\n * http://go/safe-client-behavior#step-1-determine-the-appropriate-retry-interval-to-handle-spike-traffic\n * for context.\n *\n * <p>Visible for testing\n */\nexport const RANDOM_FACTOR = 0.5;\n\n/**\n * Based on the backoff method from\n * https://github.com/google/closure-library/blob/master/closure/goog/math/exponentialbackoff.js.\n * Extracted here so we don't need to pass metadata and a stateful ExponentialBackoff object around.\n */\nexport function calculateBackoffMillis(\n  backoffCount: number,\n  intervalMillis: number = DEFAULT_INTERVAL_MILLIS,\n  backoffFactor: number = DEFAULT_BACKOFF_FACTOR\n): number {\n  // Calculates an exponentially increasing value.\n  // Deviation: calculates value from count and a constant interval, so we only need to save value\n  // and count to restore state.\n  const currBaseValue = intervalMillis * Math.pow(backoffFactor, backoffCount);\n\n  // A random \"fuzz\" to avoid waves of retries.\n  // Deviation: randomFactor is required.\n  const randomWait = Math.round(\n    // A fraction of the backoff value to add/subtract.\n    // Deviation: changes multiplication order to improve readability.\n    RANDOM_FACTOR *\n      currBaseValue *\n      // A random float (rounded to int by Math.round above) in the range [-1, 1]. Determines\n      // if we add or subtract.\n      (Math.random() - 0.5) *\n      2\n  );\n\n  // Limits backoff to max to avoid effectively permanent backoff.\n  return Math.min(MAX_VALUE_MILLIS, currBaseValue + randomWait);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Provide English ordinal letters after a number\n */\nexport function ordinal(i: number): string {\n  if (!Number.isFinite(i)) {\n    return `${i}`;\n  }\n  return i + indicator(i);\n}\n\nfunction indicator(i: number): string {\n  i = Math.abs(i);\n  const cent = i % 100;\n  if (cent >= 10 && cent <= 20) {\n    return 'th';\n  }\n  const dec = i % 10;\n  if (dec === 1) {\n    return 'st';\n  }\n  if (dec === 2) {\n    return 'nd';\n  }\n  if (dec === 3) {\n    return 'rd';\n  }\n  return 'th';\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport interface Compat<T> {\n  _delegate: T;\n}\n\nexport function getModularInstance<ExpService>(\n  service: Compat<ExpService> | ExpService\n): ExpService {\n  if (service && (service as Compat<ExpService>)._delegate) {\n    return (service as Compat<ExpService>)._delegate;\n  } else {\n    return service as ExpService;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  InstantiationMode,\n  InstanceFactory,\n  ComponentType,\n  Dictionary,\n  Name,\n  onInstanceCreatedCallback\n} from './types';\n\n/**\n * Component for service name T, e.g. `auth`, `auth-internal`\n */\nexport class Component<T extends Name = Name> {\n  multipleInstances = false;\n  /**\n   * Properties to be added to the service namespace\n   */\n  serviceProps: Dictionary = {};\n\n  instantiationMode = InstantiationMode.LAZY;\n\n  onInstanceCreated: onInstanceCreatedCallback<T> | null = null;\n\n  /**\n   *\n   * @param name The public service name, e.g. app, auth, firestore, database\n   * @param instanceFactory Service factory responsible for creating the public interface\n   * @param type whether the service provided by the component is public or private\n   */\n  constructor(\n    readonly name: T,\n    readonly instanceFactory: InstanceFactory<T>,\n    readonly type: ComponentType\n  ) {}\n\n  setInstantiationMode(mode: InstantiationMode): this {\n    this.instantiationMode = mode;\n    return this;\n  }\n\n  setMultipleInstances(multipleInstances: boolean): this {\n    this.multipleInstances = multipleInstances;\n    return this;\n  }\n\n  setServiceProps(props: Dictionary): this {\n    this.serviceProps = props;\n    return this;\n  }\n\n  setInstanceCreatedCallback(callback: onInstanceCreatedCallback<T>): this {\n    this.onInstanceCreated = callback;\n    return this;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const DEFAULT_ENTRY_NAME = '[DEFAULT]';\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Deferred } from '@firebase/util';\nimport { ComponentContainer } from './component_container';\nimport { DEFAULT_ENTRY_NAME } from './constants';\nimport {\n  InitializeOptions,\n  InstantiationMode,\n  Name,\n  NameServiceMapping,\n  OnInitCallBack\n} from './types';\nimport { Component } from './component';\n\n/**\n * Provider for instance for service name T, e.g. 'auth', 'auth-internal'\n * NameServiceMapping[T] is an alias for the type of the instance\n */\nexport class Provider<T extends Name> {\n  private component: Component<T> | null = null;\n  private readonly instances: Map<string, NameServiceMapping[T]> = new Map();\n  private readonly instancesDeferred: Map<\n    string,\n    Deferred<NameServiceMapping[T]>\n  > = new Map();\n  private readonly instancesOptions: Map<string, Record<string, unknown>> =\n    new Map();\n  private onInitCallbacks: Map<string, Set<OnInitCallBack<T>>> = new Map();\n\n  constructor(\n    private readonly name: T,\n    private readonly container: ComponentContainer\n  ) {}\n\n  /**\n   * @param identifier A provider can provide mulitple instances of a service\n   * if this.component.multipleInstances is true.\n   */\n  get(identifier?: string): Promise<NameServiceMapping[T]> {\n    // if multipleInstances is not supported, use the default name\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\n\n    if (!this.instancesDeferred.has(normalizedIdentifier)) {\n      const deferred = new Deferred<NameServiceMapping[T]>();\n      this.instancesDeferred.set(normalizedIdentifier, deferred);\n\n      if (\n        this.isInitialized(normalizedIdentifier) ||\n        this.shouldAutoInitialize()\n      ) {\n        // initialize the service if it can be auto-initialized\n        try {\n          const instance = this.getOrInitializeService({\n            instanceIdentifier: normalizedIdentifier\n          });\n          if (instance) {\n            deferred.resolve(instance);\n          }\n        } catch (e) {\n          // when the instance factory throws an exception during get(), it should not cause\n          // a fatal error. We just return the unresolved promise in this case.\n        }\n      }\n    }\n\n    return this.instancesDeferred.get(normalizedIdentifier)!.promise;\n  }\n\n  /**\n   *\n   * @param options.identifier A provider can provide mulitple instances of a service\n   * if this.component.multipleInstances is true.\n   * @param options.optional If optional is false or not provided, the method throws an error when\n   * the service is not immediately available.\n   * If optional is true, the method returns null if the service is not immediately available.\n   */\n  getImmediate(options: {\n    identifier?: string;\n    optional: true;\n  }): NameServiceMapping[T] | null;\n  getImmediate(options?: {\n    identifier?: string;\n    optional?: false;\n  }): NameServiceMapping[T];\n  getImmediate(options?: {\n    identifier?: string;\n    optional?: boolean;\n  }): NameServiceMapping[T] | null {\n    // if multipleInstances is not supported, use the default name\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(\n      options?.identifier\n    );\n    const optional = options?.optional ?? false;\n\n    if (\n      this.isInitialized(normalizedIdentifier) ||\n      this.shouldAutoInitialize()\n    ) {\n      try {\n        return this.getOrInitializeService({\n          instanceIdentifier: normalizedIdentifier\n        });\n      } catch (e) {\n        if (optional) {\n          return null;\n        } else {\n          throw e;\n        }\n      }\n    } else {\n      // In case a component is not initialized and should/can not be auto-initialized at the moment, return null if the optional flag is set, or throw\n      if (optional) {\n        return null;\n      } else {\n        throw Error(`Service ${this.name} is not available`);\n      }\n    }\n  }\n\n  getComponent(): Component<T> | null {\n    return this.component;\n  }\n\n  setComponent(component: Component<T>): void {\n    if (component.name !== this.name) {\n      throw Error(\n        `Mismatching Component ${component.name} for Provider ${this.name}.`\n      );\n    }\n\n    if (this.component) {\n      throw Error(`Component for ${this.name} has already been provided`);\n    }\n\n    this.component = component;\n\n    // return early without attempting to initialize the component if the component requires explicit initialization (calling `Provider.initialize()`)\n    if (!this.shouldAutoInitialize()) {\n      return;\n    }\n\n    // if the service is eager, initialize the default instance\n    if (isComponentEager(component)) {\n      try {\n        this.getOrInitializeService({ instanceIdentifier: DEFAULT_ENTRY_NAME });\n      } catch (e) {\n        // when the instance factory for an eager Component throws an exception during the eager\n        // initialization, it should not cause a fatal error.\n        // TODO: Investigate if we need to make it configurable, because some component may want to cause\n        // a fatal error in this case?\n      }\n    }\n\n    // Create service instances for the pending promises and resolve them\n    // NOTE: if this.multipleInstances is false, only the default instance will be created\n    // and all promises with resolve with it regardless of the identifier.\n    for (const [\n      instanceIdentifier,\n      instanceDeferred\n    ] of this.instancesDeferred.entries()) {\n      const normalizedIdentifier =\n        this.normalizeInstanceIdentifier(instanceIdentifier);\n\n      try {\n        // `getOrInitializeService()` should always return a valid instance since a component is guaranteed. use ! to make typescript happy.\n        const instance = this.getOrInitializeService({\n          instanceIdentifier: normalizedIdentifier\n        })!;\n        instanceDeferred.resolve(instance);\n      } catch (e) {\n        // when the instance factory throws an exception, it should not cause\n        // a fatal error. We just leave the promise unresolved.\n      }\n    }\n  }\n\n  clearInstance(identifier: string = DEFAULT_ENTRY_NAME): void {\n    this.instancesDeferred.delete(identifier);\n    this.instancesOptions.delete(identifier);\n    this.instances.delete(identifier);\n  }\n\n  // app.delete() will call this method on every provider to delete the services\n  // TODO: should we mark the provider as deleted?\n  async delete(): Promise<void> {\n    const services = Array.from(this.instances.values());\n\n    await Promise.all([\n      ...services\n        .filter(service => 'INTERNAL' in service) // legacy services\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        .map(service => (service as any).INTERNAL!.delete()),\n      ...services\n        .filter(service => '_delete' in service) // modularized services\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        .map(service => (service as any)._delete())\n    ]);\n  }\n\n  isComponentSet(): boolean {\n    return this.component != null;\n  }\n\n  isInitialized(identifier: string = DEFAULT_ENTRY_NAME): boolean {\n    return this.instances.has(identifier);\n  }\n\n  getOptions(identifier: string = DEFAULT_ENTRY_NAME): Record<string, unknown> {\n    return this.instancesOptions.get(identifier) || {};\n  }\n\n  initialize(opts: InitializeOptions = {}): NameServiceMapping[T] {\n    const { options = {} } = opts;\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(\n      opts.instanceIdentifier\n    );\n    if (this.isInitialized(normalizedIdentifier)) {\n      throw Error(\n        `${this.name}(${normalizedIdentifier}) has already been initialized`\n      );\n    }\n\n    if (!this.isComponentSet()) {\n      throw Error(`Component ${this.name} has not been registered yet`);\n    }\n\n    const instance = this.getOrInitializeService({\n      instanceIdentifier: normalizedIdentifier,\n      options\n    })!;\n\n    // resolve any pending promise waiting for the service instance\n    for (const [\n      instanceIdentifier,\n      instanceDeferred\n    ] of this.instancesDeferred.entries()) {\n      const normalizedDeferredIdentifier =\n        this.normalizeInstanceIdentifier(instanceIdentifier);\n      if (normalizedIdentifier === normalizedDeferredIdentifier) {\n        instanceDeferred.resolve(instance);\n      }\n    }\n\n    return instance;\n  }\n\n  /**\n   *\n   * @param callback - a function that will be invoked  after the provider has been initialized by calling provider.initialize().\n   * The function is invoked SYNCHRONOUSLY, so it should not execute any longrunning tasks in order to not block the program.\n   *\n   * @param identifier An optional instance identifier\n   * @returns a function to unregister the callback\n   */\n  onInit(callback: OnInitCallBack<T>, identifier?: string): () => void {\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\n    const existingCallbacks =\n      this.onInitCallbacks.get(normalizedIdentifier) ??\n      new Set<OnInitCallBack<T>>();\n    existingCallbacks.add(callback);\n    this.onInitCallbacks.set(normalizedIdentifier, existingCallbacks);\n\n    const existingInstance = this.instances.get(normalizedIdentifier);\n    if (existingInstance) {\n      callback(existingInstance, normalizedIdentifier);\n    }\n\n    return () => {\n      existingCallbacks.delete(callback);\n    };\n  }\n\n  /**\n   * Invoke onInit callbacks synchronously\n   * @param instance the service instance`\n   */\n  private invokeOnInitCallbacks(\n    instance: NameServiceMapping[T],\n    identifier: string\n  ): void {\n    const callbacks = this.onInitCallbacks.get(identifier);\n    if (!callbacks) {\n      return;\n    }\n    for (const callback of callbacks) {\n      try {\n        callback(instance, identifier);\n      } catch {\n        // ignore errors in the onInit callback\n      }\n    }\n  }\n\n  private getOrInitializeService({\n    instanceIdentifier,\n    options = {}\n  }: {\n    instanceIdentifier: string;\n    options?: Record<string, unknown>;\n  }): NameServiceMapping[T] | null {\n    let instance = this.instances.get(instanceIdentifier);\n    if (!instance && this.component) {\n      instance = this.component.instanceFactory(this.container, {\n        instanceIdentifier: normalizeIdentifierForFactory(instanceIdentifier),\n        options\n      });\n      this.instances.set(instanceIdentifier, instance);\n      this.instancesOptions.set(instanceIdentifier, options);\n\n      /**\n       * Invoke onInit listeners.\n       * Note this.component.onInstanceCreated is different, which is used by the component creator,\n       * while onInit listeners are registered by consumers of the provider.\n       */\n      this.invokeOnInitCallbacks(instance, instanceIdentifier);\n\n      /**\n       * Order is important\n       * onInstanceCreated() should be called after this.instances.set(instanceIdentifier, instance); which\n       * makes `isInitialized()` return true.\n       */\n      if (this.component.onInstanceCreated) {\n        try {\n          this.component.onInstanceCreated(\n            this.container,\n            instanceIdentifier,\n            instance\n          );\n        } catch {\n          // ignore errors in the onInstanceCreatedCallback\n        }\n      }\n    }\n\n    return instance || null;\n  }\n\n  private normalizeInstanceIdentifier(\n    identifier: string = DEFAULT_ENTRY_NAME\n  ): string {\n    if (this.component) {\n      return this.component.multipleInstances ? identifier : DEFAULT_ENTRY_NAME;\n    } else {\n      return identifier; // assume multiple instances are supported before the component is provided.\n    }\n  }\n\n  private shouldAutoInitialize(): boolean {\n    return (\n      !!this.component &&\n      this.component.instantiationMode !== InstantiationMode.EXPLICIT\n    );\n  }\n}\n\n// undefined should be passed to the service factory for the default instance\nfunction normalizeIdentifierForFactory(identifier: string): string | undefined {\n  return identifier === DEFAULT_ENTRY_NAME ? undefined : identifier;\n}\n\nfunction isComponentEager<T extends Name>(component: Component<T>): boolean {\n  return component.instantiationMode === InstantiationMode.EAGER;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Provider } from './provider';\nimport { Component } from './component';\nimport { Name } from './types';\n\n/**\n * ComponentContainer that provides Providers for service name T, e.g. `auth`, `auth-internal`\n */\nexport class ComponentContainer {\n  private readonly providers = new Map<string, Provider<Name>>();\n\n  constructor(private readonly name: string) {}\n\n  /**\n   *\n   * @param component Component being added\n   * @param overwrite When a component with the same name has already been registered,\n   * if overwrite is true: overwrite the existing component with the new component and create a new\n   * provider with the new component. It can be useful in tests where you want to use different mocks\n   * for different tests.\n   * if overwrite is false: throw an exception\n   */\n  addComponent<T extends Name>(component: Component<T>): void {\n    const provider = this.getProvider(component.name);\n    if (provider.isComponentSet()) {\n      throw new Error(\n        `Component ${component.name} has already been registered with ${this.name}`\n      );\n    }\n\n    provider.setComponent(component);\n  }\n\n  addOrOverwriteComponent<T extends Name>(component: Component<T>): void {\n    const provider = this.getProvider(component.name);\n    if (provider.isComponentSet()) {\n      // delete the existing provider from the container, so we can register the new component\n      this.providers.delete(component.name);\n    }\n\n    this.addComponent(component);\n  }\n\n  /**\n   * getProvider provides a type safe interface where it can only be called with a field name\n   * present in NameServiceMapping interface.\n   *\n   * Firebase SDKs providing services should extend NameServiceMapping interface to register\n   * themselves.\n   */\n  getProvider<T extends Name>(name: T): Provider<T> {\n    if (this.providers.has(name)) {\n      return this.providers.get(name) as unknown as Provider<T>;\n    }\n\n    // create a Provider for a service that hasn't registered with Firebase\n    const provider = new Provider<T>(name, this);\n    this.providers.set(name, provider as unknown as Provider<Name>);\n\n    return provider as Provider<T>;\n  }\n\n  getProviders(): Array<Provider<Name>> {\n    return Array.from(this.providers.values());\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport type LogLevelString =\n  | 'debug'\n  | 'verbose'\n  | 'info'\n  | 'warn'\n  | 'error'\n  | 'silent';\n\nexport interface LogOptions {\n  level: LogLevelString;\n}\n\nexport type LogCallback = (callbackParams: LogCallbackParams) => void;\n\nexport interface LogCallbackParams {\n  level: LogLevelString;\n  message: string;\n  args: unknown[];\n  type: string;\n}\n\n/**\n * A container for all of the Logger instances\n */\nexport const instances: Logger[] = [];\n\n/**\n * The JS SDK supports 5 log levels and also allows a user the ability to\n * silence the logs altogether.\n *\n * The order is a follows:\n * DEBUG < VERBOSE < INFO < WARN < ERROR\n *\n * All of the log types above the current log level will be captured (i.e. if\n * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and\n * `VERBOSE` logs will not)\n */\nexport enum LogLevel {\n  DEBUG,\n  VERBOSE,\n  INFO,\n  WARN,\n  ERROR,\n  SILENT\n}\n\nconst levelStringToEnum: { [key in LogLevelString]: LogLevel } = {\n  'debug': LogLevel.DEBUG,\n  'verbose': LogLevel.VERBOSE,\n  'info': LogLevel.INFO,\n  'warn': LogLevel.WARN,\n  'error': LogLevel.ERROR,\n  'silent': LogLevel.SILENT\n};\n\n/**\n * The default log level\n */\nconst defaultLogLevel: LogLevel = LogLevel.INFO;\n\n/**\n * We allow users the ability to pass their own log handler. We will pass the\n * type of log, the current log level, and any other arguments passed (i.e. the\n * messages that the user wants to log) to this function.\n */\nexport type LogHandler = (\n  loggerInstance: Logger,\n  logType: LogLevel,\n  ...args: unknown[]\n) => void;\n\n/**\n * By default, `console.debug` is not displayed in the developer console (in\n * chrome). To avoid forcing users to have to opt-in to these logs twice\n * (i.e. once for firebase, and once in the console), we are sending `DEBUG`\n * logs to the `console.log` function.\n */\nconst ConsoleMethod = {\n  [LogLevel.DEBUG]: 'log',\n  [LogLevel.VERBOSE]: 'log',\n  [LogLevel.INFO]: 'info',\n  [LogLevel.WARN]: 'warn',\n  [LogLevel.ERROR]: 'error'\n};\n\n/**\n * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR\n * messages on to their corresponding console counterparts (if the log method\n * is supported by the current log level)\n */\nconst defaultLogHandler: LogHandler = (instance, logType, ...args): void => {\n  if (logType < instance.logLevel) {\n    return;\n  }\n  const now = new Date().toISOString();\n  const method = ConsoleMethod[logType as keyof typeof ConsoleMethod];\n  if (method) {\n    console[method as 'log' | 'info' | 'warn' | 'error'](\n      `[${now}]  ${instance.name}:`,\n      ...args\n    );\n  } else {\n    throw new Error(\n      `Attempted to log a message with an invalid logType (value: ${logType})`\n    );\n  }\n};\n\nexport class Logger {\n  /**\n   * Gives you an instance of a Logger to capture messages according to\n   * Firebase's logging scheme.\n   *\n   * @param name The name that the logs will be associated with\n   */\n  constructor(public name: string) {\n    /**\n     * Capture the current instance for later use\n     */\n    instances.push(this);\n  }\n\n  /**\n   * The log level of the given Logger instance.\n   */\n  private _logLevel = defaultLogLevel;\n\n  get logLevel(): LogLevel {\n    return this._logLevel;\n  }\n\n  set logLevel(val: LogLevel) {\n    if (!(val in LogLevel)) {\n      throw new TypeError(`Invalid value \"${val}\" assigned to \\`logLevel\\``);\n    }\n    this._logLevel = val;\n  }\n\n  // Workaround for setter/getter having to be the same type.\n  setLogLevel(val: LogLevel | LogLevelString): void {\n    this._logLevel = typeof val === 'string' ? levelStringToEnum[val] : val;\n  }\n\n  /**\n   * The main (internal) log handler for the Logger instance.\n   * Can be set to a new function in internal package code but not by user.\n   */\n  private _logHandler: LogHandler = defaultLogHandler;\n  get logHandler(): LogHandler {\n    return this._logHandler;\n  }\n  set logHandler(val: LogHandler) {\n    if (typeof val !== 'function') {\n      throw new TypeError('Value assigned to `logHandler` must be a function');\n    }\n    this._logHandler = val;\n  }\n\n  /**\n   * The optional, additional, user-defined log handler for the Logger instance.\n   */\n  private _userLogHandler: LogHandler | null = null;\n  get userLogHandler(): LogHandler | null {\n    return this._userLogHandler;\n  }\n  set userLogHandler(val: LogHandler | null) {\n    this._userLogHandler = val;\n  }\n\n  /**\n   * The functions below are all based on the `console` interface\n   */\n\n  debug(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.DEBUG, ...args);\n    this._logHandler(this, LogLevel.DEBUG, ...args);\n  }\n  log(...args: unknown[]): void {\n    this._userLogHandler &&\n      this._userLogHandler(this, LogLevel.VERBOSE, ...args);\n    this._logHandler(this, LogLevel.VERBOSE, ...args);\n  }\n  info(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.INFO, ...args);\n    this._logHandler(this, LogLevel.INFO, ...args);\n  }\n  warn(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.WARN, ...args);\n    this._logHandler(this, LogLevel.WARN, ...args);\n  }\n  error(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.ERROR, ...args);\n    this._logHandler(this, LogLevel.ERROR, ...args);\n  }\n}\n\nexport function setLogLevel(level: LogLevelString | LogLevel): void {\n  instances.forEach(inst => {\n    inst.setLogLevel(level);\n  });\n}\n\nexport function setUserLogHandler(\n  logCallback: LogCallback | null,\n  options?: LogOptions\n): void {\n  for (const instance of instances) {\n    let customLogLevel: LogLevel | null = null;\n    if (options && options.level) {\n      customLogLevel = levelStringToEnum[options.level];\n    }\n    if (logCallback === null) {\n      instance.userLogHandler = null;\n    } else {\n      instance.userLogHandler = (\n        instance: Logger,\n        level: LogLevel,\n        ...args: unknown[]\n      ) => {\n        const message = args\n          .map(arg => {\n            if (arg == null) {\n              return null;\n            } else if (typeof arg === 'string') {\n              return arg;\n            } else if (typeof arg === 'number' || typeof arg === 'boolean') {\n              return arg.toString();\n            } else if (arg instanceof Error) {\n              return arg.message;\n            } else {\n              try {\n                return JSON.stringify(arg);\n              } catch (ignored) {\n                return null;\n              }\n            }\n          })\n          .filter(arg => arg)\n          .join(' ');\n        if (level >= (customLogLevel ?? instance.logLevel)) {\n          logCallback({\n            level: LogLevel[level].toLowerCase() as LogLevelString,\n            message,\n            args,\n            type: instance.name\n          });\n        }\n      };\n    }\n  }\n}\n","const instanceOfAny = (object, constructors) => constructors.some((c) => object instanceof c);\n\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction getIdbProxyableTypes() {\n    return (idbProxyableTypes ||\n        (idbProxyableTypes = [\n            IDBDatabase,\n            IDBObjectStore,\n            IDBIndex,\n            IDBCursor,\n            IDBTransaction,\n        ]));\n}\n// This is a function to prevent it throwing up in node environments.\nfunction getCursorAdvanceMethods() {\n    return (cursorAdvanceMethods ||\n        (cursorAdvanceMethods = [\n            IDBCursor.prototype.advance,\n            IDBCursor.prototype.continue,\n            IDBCursor.prototype.continuePrimaryKey,\n        ]));\n}\nconst cursorRequestMap = new WeakMap();\nconst transactionDoneMap = new WeakMap();\nconst transactionStoreNamesMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n    const promise = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            request.removeEventListener('success', success);\n            request.removeEventListener('error', error);\n        };\n        const success = () => {\n            resolve(wrap(request.result));\n            unlisten();\n        };\n        const error = () => {\n            reject(request.error);\n            unlisten();\n        };\n        request.addEventListener('success', success);\n        request.addEventListener('error', error);\n    });\n    promise\n        .then((value) => {\n        // Since cursoring reuses the IDBRequest (*sigh*), we cache it for later retrieval\n        // (see wrapFunction).\n        if (value instanceof IDBCursor) {\n            cursorRequestMap.set(value, request);\n        }\n        // Catching to avoid \"Uncaught Promise exceptions\"\n    })\n        .catch(() => { });\n    // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    reverseTransformCache.set(promise, request);\n    return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if (transactionDoneMap.has(tx))\n        return;\n    const done = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            tx.removeEventListener('complete', complete);\n            tx.removeEventListener('error', error);\n            tx.removeEventListener('abort', error);\n        };\n        const complete = () => {\n            resolve();\n            unlisten();\n        };\n        const error = () => {\n            reject(tx.error || new DOMException('AbortError', 'AbortError'));\n            unlisten();\n        };\n        tx.addEventListener('complete', complete);\n        tx.addEventListener('error', error);\n        tx.addEventListener('abort', error);\n    });\n    // Cache it for later retrieval.\n    transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n    get(target, prop, receiver) {\n        if (target instanceof IDBTransaction) {\n            // Special handling for transaction.done.\n            if (prop === 'done')\n                return transactionDoneMap.get(target);\n            // Polyfill for objectStoreNames because of Edge.\n            if (prop === 'objectStoreNames') {\n                return target.objectStoreNames || transactionStoreNamesMap.get(target);\n            }\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\n            if (prop === 'store') {\n                return receiver.objectStoreNames[1]\n                    ? undefined\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\n            }\n        }\n        // Else transform whatever we get back.\n        return wrap(target[prop]);\n    },\n    set(target, prop, value) {\n        target[prop] = value;\n        return true;\n    },\n    has(target, prop) {\n        if (target instanceof IDBTransaction &&\n            (prop === 'done' || prop === 'store')) {\n            return true;\n        }\n        return prop in target;\n    },\n};\nfunction replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Edge doesn't support objectStoreNames (booo), so we polyfill it here.\n    if (func === IDBDatabase.prototype.transaction &&\n        !('objectStoreNames' in IDBTransaction.prototype)) {\n        return function (storeNames, ...args) {\n            const tx = func.call(unwrap(this), storeNames, ...args);\n            transactionStoreNamesMap.set(tx, storeNames.sort ? storeNames.sort() : [storeNames]);\n            return wrap(tx);\n        };\n    }\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if (getCursorAdvanceMethods().includes(func)) {\n        return function (...args) {\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n            // the original object.\n            func.apply(unwrap(this), args);\n            return wrap(cursorRequestMap.get(this));\n        };\n    }\n    return function (...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        return wrap(func.apply(unwrap(this), args));\n    };\n}\nfunction transformCachableValue(value) {\n    if (typeof value === 'function')\n        return wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction)\n        cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes()))\n        return new Proxy(value, idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n}\nfunction wrap(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest)\n        return promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if (transformCache.has(value))\n        return transformCache.get(value);\n    const newValue = transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n        transformCache.set(value, newValue);\n        reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n}\nconst unwrap = (value) => reverseTransformCache.get(value);\n\nexport { reverseTransformCache as a, instanceOfAny as i, replaceTraps as r, unwrap as u, wrap as w };\n","import { w as wrap, r as replaceTraps } from './wrap-idb-value.js';\nexport { u as unwrap, w as wrap } from './wrap-idb-value.js';\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = wrap(request);\n    if (upgrade) {\n        request.addEventListener('upgradeneeded', (event) => {\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction));\n        });\n    }\n    if (blocked)\n        request.addEventListener('blocked', () => blocked());\n    openPromise\n        .then((db) => {\n        if (terminated)\n            db.addEventListener('close', () => terminated());\n        if (blocking)\n            db.addEventListener('versionchange', () => blocking());\n    })\n        .catch(() => { });\n    return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\nfunction deleteDB(name, { blocked } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked)\n        request.addEventListener('blocked', () => blocked());\n    return wrap(request).then(() => undefined);\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase &&\n        !(prop in target) &&\n        typeof prop === 'string')) {\n        return;\n    }\n    if (cachedMethods.get(prop))\n        return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n        !(isWrite || readMethods.includes(targetFuncName))) {\n        return;\n    }\n    const method = async function (storeName, ...args) {\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n        let target = tx.store;\n        if (useIndex)\n            target = target.index(args.shift());\n        // Must reject if op rejects.\n        // If it's a write operation, must reject if tx.done rejects.\n        // Must reject with op rejection first.\n        // Must resolve with op value.\n        // Must handle both promises (no unhandled rejections)\n        return (await Promise.all([\n            target[targetFuncName](...args),\n            isWrite && tx.done,\n        ]))[0];\n    };\n    cachedMethods.set(prop, method);\n    return method;\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\n\nexport { deleteDB, openDB };\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ComponentContainer,\n  ComponentType,\n  Provider,\n  Name\n} from '@firebase/component';\nimport { PlatformLoggerService, VersionService } from './types';\n\nexport class PlatformLoggerServiceImpl implements PlatformLoggerService {\n  constructor(private readonly container: ComponentContainer) {}\n  // In initial implementation, this will be called by installations on\n  // auth token refresh, and installations will send this string.\n  getPlatformInfoString(): string {\n    const providers = this.container.getProviders();\n    // Loop through providers and get library/version pairs from any that are\n    // version components.\n    return providers\n      .map(provider => {\n        if (isVersionServiceProvider(provider)) {\n          const service = provider.getImmediate() as VersionService;\n          return `${service.library}/${service.version}`;\n        } else {\n          return null;\n        }\n      })\n      .filter(logString => logString)\n      .join(' ');\n  }\n}\n/**\n *\n * @param provider check if this provider provides a VersionService\n *\n * NOTE: Using Provider<'app-version'> is a hack to indicate that the provider\n * provides VersionService. The provider is not necessarily a 'app-version'\n * provider.\n */\nfunction isVersionServiceProvider(provider: Provider<Name>): boolean {\n  const component = provider.getComponent();\n  return component?.type === ComponentType.VERSION;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger } from '@firebase/logger';\n\nexport const logger = new Logger('@firebase/app');\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { name as appName } from '../package.json';\nimport { name as appCompatName } from '../../app-compat/package.json';\nimport { name as analyticsCompatName } from '../../../packages/analytics-compat/package.json';\nimport { name as analyticsName } from '../../../packages/analytics/package.json';\nimport { name as appCheckCompatName } from '../../../packages/app-check-compat/package.json';\nimport { name as appCheckName } from '../../../packages/app-check/package.json';\nimport { name as authName } from '../../../packages/auth/package.json';\nimport { name as authCompatName } from '../../../packages/auth-compat/package.json';\nimport { name as databaseName } from '../../../packages/database/package.json';\nimport { name as databaseCompatName } from '../../../packages/database-compat/package.json';\nimport { name as functionsName } from '../../../packages/functions/package.json';\nimport { name as functionsCompatName } from '../../../packages/functions-compat/package.json';\nimport { name as installationsName } from '../../../packages/installations/package.json';\nimport { name as installationsCompatName } from '../../../packages/installations-compat/package.json';\nimport { name as messagingName } from '../../../packages/messaging/package.json';\nimport { name as messagingCompatName } from '../../../packages/messaging-compat/package.json';\nimport { name as performanceName } from '../../../packages/performance/package.json';\nimport { name as performanceCompatName } from '../../../packages/performance-compat/package.json';\nimport { name as remoteConfigName } from '../../../packages/remote-config/package.json';\nimport { name as remoteConfigCompatName } from '../../../packages/remote-config-compat/package.json';\nimport { name as storageName } from '../../../packages/storage/package.json';\nimport { name as storageCompatName } from '../../../packages/storage-compat/package.json';\nimport { name as firestoreName } from '../../../packages/firestore/package.json';\nimport { name as firestoreCompatName } from '../../../packages/firestore-compat/package.json';\nimport { name as packageName } from '../../../packages/firebase/package.json';\n\n/**\n * The default app name\n *\n * @internal\n */\nexport const DEFAULT_ENTRY_NAME = '[DEFAULT]';\n\nexport const PLATFORM_LOG_STRING = {\n  [appName]: 'fire-core',\n  [appCompatName]: 'fire-core-compat',\n  [analyticsName]: 'fire-analytics',\n  [analyticsCompatName]: 'fire-analytics-compat',\n  [appCheckName]: 'fire-app-check',\n  [appCheckCompatName]: 'fire-app-check-compat',\n  [authName]: 'fire-auth',\n  [authCompatName]: 'fire-auth-compat',\n  [databaseName]: 'fire-rtdb',\n  [databaseCompatName]: 'fire-rtdb-compat',\n  [functionsName]: 'fire-fn',\n  [functionsCompatName]: 'fire-fn-compat',\n  [installationsName]: 'fire-iid',\n  [installationsCompatName]: 'fire-iid-compat',\n  [messagingName]: 'fire-fcm',\n  [messagingCompatName]: 'fire-fcm-compat',\n  [performanceName]: 'fire-perf',\n  [performanceCompatName]: 'fire-perf-compat',\n  [remoteConfigName]: 'fire-rc',\n  [remoteConfigCompatName]: 'fire-rc-compat',\n  [storageName]: 'fire-gcs',\n  [storageCompatName]: 'fire-gcs-compat',\n  [firestoreName]: 'fire-fst',\n  [firestoreCompatName]: 'fire-fst-compat',\n  'fire-js': 'fire-js', // Platform identifier for JS SDK.\n  [packageName]: 'fire-js-all'\n} as const;\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp } from './public-types';\nimport { Component, Provider, Name } from '@firebase/component';\nimport { logger } from './logger';\nimport { DEFAULT_ENTRY_NAME } from './constants';\nimport { FirebaseAppImpl } from './firebaseApp';\n\n/**\n * @internal\n */\nexport const _apps = new Map<string, FirebaseApp>();\n\n/**\n * Registered components.\n *\n * @internal\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const _components = new Map<string, Component<any>>();\n\n/**\n * @param component - the component being added to this app's container\n *\n * @internal\n */\nexport function _addComponent<T extends Name>(\n  app: FirebaseApp,\n  component: Component<T>\n): void {\n  try {\n    (app as FirebaseAppImpl).container.addComponent(component);\n  } catch (e) {\n    logger.debug(\n      `Component ${component.name} failed to register with FirebaseApp ${app.name}`,\n      e\n    );\n  }\n}\n\n/**\n *\n * @internal\n */\nexport function _addOrOverwriteComponent(\n  app: FirebaseApp,\n  component: Component\n): void {\n  (app as FirebaseAppImpl).container.addOrOverwriteComponent(component);\n}\n\n/**\n *\n * @param component - the component to register\n * @returns whether or not the component is registered successfully\n *\n * @internal\n */\nexport function _registerComponent<T extends Name>(\n  component: Component<T>\n): boolean {\n  const componentName = component.name;\n  if (_components.has(componentName)) {\n    logger.debug(\n      `There were multiple attempts to register component ${componentName}.`\n    );\n\n    return false;\n  }\n\n  _components.set(componentName, component);\n\n  // add the component to existing app instances\n  for (const app of _apps.values()) {\n    _addComponent(app as FirebaseAppImpl, component);\n  }\n\n  return true;\n}\n\n/**\n *\n * @param app - FirebaseApp instance\n * @param name - service name\n *\n * @returns the provider for the service with the matching name\n *\n * @internal\n */\nexport function _getProvider<T extends Name>(\n  app: FirebaseApp,\n  name: T\n): Provider<T> {\n  const heartbeatController = (app as FirebaseAppImpl).container\n    .getProvider('heartbeat')\n    .getImmediate({ optional: true });\n  if (heartbeatController) {\n    void heartbeatController.triggerHeartbeat();\n  }\n  return (app as FirebaseAppImpl).container.getProvider(name);\n}\n\n/**\n *\n * @param app - FirebaseApp instance\n * @param name - service name\n * @param instanceIdentifier - service instance identifier in case the service supports multiple instances\n *\n * @internal\n */\nexport function _removeServiceInstance<T extends Name>(\n  app: FirebaseApp,\n  name: T,\n  instanceIdentifier: string = DEFAULT_ENTRY_NAME\n): void {\n  _getProvider(app, name).clearInstance(instanceIdentifier);\n}\n\n/**\n * Test only\n *\n * @internal\n */\nexport function _clearComponents(): void {\n  _components.clear();\n}\n\n/**\n * Exported in order to be used in app-compat package\n */\nexport { DEFAULT_ENTRY_NAME as _DEFAULT_ENTRY_NAME };\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorFactory, ErrorMap } from '@firebase/util';\n\nexport const enum AppError {\n  NO_APP = 'no-app',\n  BAD_APP_NAME = 'bad-app-name',\n  DUPLICATE_APP = 'duplicate-app',\n  APP_DELETED = 'app-deleted',\n  NO_OPTIONS = 'no-options',\n  INVALID_APP_ARGUMENT = 'invalid-app-argument',\n  INVALID_LOG_ARGUMENT = 'invalid-log-argument',\n  IDB_OPEN = 'idb-open',\n  IDB_GET = 'idb-get',\n  IDB_WRITE = 'idb-set',\n  IDB_DELETE = 'idb-delete'\n}\n\nconst ERRORS: ErrorMap<AppError> = {\n  [AppError.NO_APP]:\n    \"No Firebase App '{$appName}' has been created - \" +\n    'call Firebase App.initializeApp()',\n  [AppError.BAD_APP_NAME]: \"Illegal App name: '{$appName}\",\n  [AppError.DUPLICATE_APP]:\n    \"Firebase App named '{$appName}' already exists with different options or config\",\n  [AppError.APP_DELETED]: \"Firebase App named '{$appName}' already deleted\",\n  [AppError.NO_OPTIONS]:\n    'Need to provide options, when not being deployed to hosting via source.',\n  [AppError.INVALID_APP_ARGUMENT]:\n    'firebase.{$appName}() takes either no argument or a ' +\n    'Firebase App instance.',\n  [AppError.INVALID_LOG_ARGUMENT]:\n    'First argument to `onLog` must be null or a function.',\n  [AppError.IDB_OPEN]:\n    'Error thrown when opening IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.IDB_GET]:\n    'Error thrown when reading from IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.IDB_WRITE]:\n    'Error thrown when writing to IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.IDB_DELETE]:\n    'Error thrown when deleting from IndexedDB. Original error: {$originalErrorMessage}.'\n};\n\ninterface ErrorParams {\n  [AppError.NO_APP]: { appName: string };\n  [AppError.BAD_APP_NAME]: { appName: string };\n  [AppError.DUPLICATE_APP]: { appName: string };\n  [AppError.APP_DELETED]: { appName: string };\n  [AppError.INVALID_APP_ARGUMENT]: { appName: string };\n  [AppError.IDB_OPEN]: { originalErrorMessage?: string };\n  [AppError.IDB_GET]: { originalErrorMessage?: string };\n  [AppError.IDB_WRITE]: { originalErrorMessage?: string };\n  [AppError.IDB_DELETE]: { originalErrorMessage?: string };\n}\n\nexport const ERROR_FACTORY = new ErrorFactory<AppError, ErrorParams>(\n  'app',\n  'Firebase',\n  ERRORS\n);\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseAppSettings\n} from './public-types';\nimport {\n  ComponentContainer,\n  Component,\n  ComponentType\n} from '@firebase/component';\nimport { ERROR_FACTORY, AppError } from './errors';\n\nexport class FirebaseAppImpl implements FirebaseApp {\n  private readonly _options: FirebaseOptions;\n  private readonly _name: string;\n  /**\n   * Original config values passed in as a constructor parameter.\n   * It is only used to compare with another config object to support idempotent initializeApp().\n   *\n   * Updating automaticDataCollectionEnabled on the App instance will not change its value in _config.\n   */\n  private readonly _config: Required<FirebaseAppSettings>;\n  private _automaticDataCollectionEnabled: boolean;\n  private _isDeleted = false;\n  private readonly _container: ComponentContainer;\n\n  constructor(\n    options: FirebaseOptions,\n    config: Required<FirebaseAppSettings>,\n    container: ComponentContainer\n  ) {\n    this._options = { ...options };\n    this._config = { ...config };\n    this._name = config.name;\n    this._automaticDataCollectionEnabled =\n      config.automaticDataCollectionEnabled;\n    this._container = container;\n    this.container.addComponent(\n      new Component('app', () => this, ComponentType.PUBLIC)\n    );\n  }\n\n  get automaticDataCollectionEnabled(): boolean {\n    this.checkDestroyed();\n    return this._automaticDataCollectionEnabled;\n  }\n\n  set automaticDataCollectionEnabled(val: boolean) {\n    this.checkDestroyed();\n    this._automaticDataCollectionEnabled = val;\n  }\n\n  get name(): string {\n    this.checkDestroyed();\n    return this._name;\n  }\n\n  get options(): FirebaseOptions {\n    this.checkDestroyed();\n    return this._options;\n  }\n\n  get config(): Required<FirebaseAppSettings> {\n    this.checkDestroyed();\n    return this._config;\n  }\n\n  get container(): ComponentContainer {\n    return this._container;\n  }\n\n  get isDeleted(): boolean {\n    return this._isDeleted;\n  }\n\n  set isDeleted(val: boolean) {\n    this._isDeleted = val;\n  }\n\n  /**\n   * This function will throw an Error if the App has already been deleted -\n   * use before performing API actions on the App.\n   */\n  private checkDestroyed(): void {\n    if (this.isDeleted) {\n      throw ERROR_FACTORY.create(AppError.APP_DELETED, { appName: this._name });\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseAppSettings\n} from './public-types';\nimport { DEFAULT_ENTRY_NAME, PLATFORM_LOG_STRING } from './constants';\nimport { ERROR_FACTORY, AppError } from './errors';\nimport {\n  ComponentContainer,\n  Component,\n  Name,\n  ComponentType\n} from '@firebase/component';\nimport { version } from '../../firebase/package.json';\nimport { FirebaseAppImpl } from './firebaseApp';\nimport { _apps, _components, _registerComponent } from './internal';\nimport { logger } from './logger';\nimport {\n  LogLevelString,\n  setLogLevel as setLogLevelImpl,\n  LogCallback,\n  LogOptions,\n  setUserLogHandler\n} from '@firebase/logger';\nimport { deepEqual, getDefaultAppConfig } from '@firebase/util';\n\nexport { FirebaseError } from '@firebase/util';\n\n/**\n * The current SDK version.\n *\n * @public\n */\nexport const SDK_VERSION = version;\n\n/**\n * Creates and initializes a {@link @firebase/app#FirebaseApp} instance.\n *\n * See\n * {@link\n *   https://firebase.google.com/docs/web/setup#add_firebase_to_your_app\n *   | Add Firebase to your app} and\n * {@link\n *   https://firebase.google.com/docs/web/setup#multiple-projects\n *   | Initialize multiple projects} for detailed documentation.\n *\n * @example\n * ```javascript\n *\n * // Initialize default app\n * // Retrieve your own options values by adding a web app on\n * // https://console.firebase.google.com\n * initializeApp({\n *   apiKey: \"AIza....\",                             // Auth / General Use\n *   authDomain: \"YOUR_APP.firebaseapp.com\",         // Auth with popup/redirect\n *   databaseURL: \"https://YOUR_APP.firebaseio.com\", // Realtime Database\n *   storageBucket: \"YOUR_APP.appspot.com\",          // Storage\n *   messagingSenderId: \"123456789\"                  // Cloud Messaging\n * });\n * ```\n *\n * @example\n * ```javascript\n *\n * // Initialize another app\n * const otherApp = initializeApp({\n *   databaseURL: \"https://<OTHER_DATABASE_NAME>.firebaseio.com\",\n *   storageBucket: \"<OTHER_STORAGE_BUCKET>.appspot.com\"\n * }, \"otherApp\");\n * ```\n *\n * @param options - Options to configure the app's services.\n * @param name - Optional name of the app to initialize. If no name\n *   is provided, the default is `\"[DEFAULT]\"`.\n *\n * @returns The initialized app.\n *\n * @public\n */\nexport function initializeApp(\n  options: FirebaseOptions,\n  name?: string\n): FirebaseApp;\n/**\n * Creates and initializes a FirebaseApp instance.\n *\n * @param options - Options to configure the app's services.\n * @param config - FirebaseApp Configuration\n *\n * @public\n */\nexport function initializeApp(\n  options: FirebaseOptions,\n  config?: FirebaseAppSettings\n): FirebaseApp;\n/**\n * Creates and initializes a FirebaseApp instance.\n *\n * @public\n */\nexport function initializeApp(): FirebaseApp;\nexport function initializeApp(\n  _options?: FirebaseOptions,\n  rawConfig = {}\n): FirebaseApp {\n  let options = _options;\n\n  if (typeof rawConfig !== 'object') {\n    const name = rawConfig;\n    rawConfig = { name };\n  }\n\n  const config: Required<FirebaseAppSettings> = {\n    name: DEFAULT_ENTRY_NAME,\n    automaticDataCollectionEnabled: false,\n    ...rawConfig\n  };\n  const name = config.name;\n\n  if (typeof name !== 'string' || !name) {\n    throw ERROR_FACTORY.create(AppError.BAD_APP_NAME, {\n      appName: String(name)\n    });\n  }\n\n  options ||= getDefaultAppConfig();\n\n  if (!options) {\n    throw ERROR_FACTORY.create(AppError.NO_OPTIONS);\n  }\n\n  const existingApp = _apps.get(name) as FirebaseAppImpl;\n  if (existingApp) {\n    // return the existing app if options and config deep equal the ones in the existing app.\n    if (\n      deepEqual(options, existingApp.options) &&\n      deepEqual(config, existingApp.config)\n    ) {\n      return existingApp;\n    } else {\n      throw ERROR_FACTORY.create(AppError.DUPLICATE_APP, { appName: name });\n    }\n  }\n\n  const container = new ComponentContainer(name);\n  for (const component of _components.values()) {\n    container.addComponent(component);\n  }\n\n  const newApp = new FirebaseAppImpl(options, config, container);\n\n  _apps.set(name, newApp);\n\n  return newApp;\n}\n\n/**\n * Retrieves a {@link @firebase/app#FirebaseApp} instance.\n *\n * When called with no arguments, the default app is returned. When an app name\n * is provided, the app corresponding to that name is returned.\n *\n * An exception is thrown if the app being retrieved has not yet been\n * initialized.\n *\n * @example\n * ```javascript\n * // Return the default app\n * const app = getApp();\n * ```\n *\n * @example\n * ```javascript\n * // Return a named app\n * const otherApp = getApp(\"otherApp\");\n * ```\n *\n * @param name - Optional name of the app to return. If no name is\n *   provided, the default is `\"[DEFAULT]\"`.\n *\n * @returns The app corresponding to the provided app name.\n *   If no app name is provided, the default app is returned.\n *\n * @public\n */\nexport function getApp(name: string = DEFAULT_ENTRY_NAME): FirebaseApp {\n  const app = _apps.get(name);\n  if (!app && name === DEFAULT_ENTRY_NAME) {\n    return initializeApp();\n  }\n  if (!app) {\n    throw ERROR_FACTORY.create(AppError.NO_APP, { appName: name });\n  }\n\n  return app;\n}\n\n/**\n * A (read-only) array of all initialized apps.\n * @public\n */\nexport function getApps(): FirebaseApp[] {\n  return Array.from(_apps.values());\n}\n\n/**\n * Renders this app unusable and frees the resources of all associated\n * services.\n *\n * @example\n * ```javascript\n * deleteApp(app)\n *   .then(function() {\n *     console.log(\"App deleted successfully\");\n *   })\n *   .catch(function(error) {\n *     console.log(\"Error deleting app:\", error);\n *   });\n * ```\n *\n * @public\n */\nexport async function deleteApp(app: FirebaseApp): Promise<void> {\n  const name = app.name;\n  if (_apps.has(name)) {\n    _apps.delete(name);\n    await Promise.all(\n      (app as FirebaseAppImpl).container\n        .getProviders()\n        .map(provider => provider.delete())\n    );\n    (app as FirebaseAppImpl).isDeleted = true;\n  }\n}\n\n/**\n * Registers a library's name and version for platform logging purposes.\n * @param library - Name of 1p or 3p library (e.g. firestore, angularfire)\n * @param version - Current version of that library.\n * @param variant - Bundle variant, e.g., node, rn, etc.\n *\n * @public\n */\nexport function registerVersion(\n  libraryKeyOrName: string,\n  version: string,\n  variant?: string\n): void {\n  // TODO: We can use this check to whitelist strings when/if we set up\n  // a good whitelist system.\n  let library = PLATFORM_LOG_STRING[libraryKeyOrName] ?? libraryKeyOrName;\n  if (variant) {\n    library += `-${variant}`;\n  }\n  const libraryMismatch = library.match(/\\s|\\//);\n  const versionMismatch = version.match(/\\s|\\//);\n  if (libraryMismatch || versionMismatch) {\n    const warning = [\n      `Unable to register library \"${library}\" with version \"${version}\":`\n    ];\n    if (libraryMismatch) {\n      warning.push(\n        `library name \"${library}\" contains illegal characters (whitespace or \"/\")`\n      );\n    }\n    if (libraryMismatch && versionMismatch) {\n      warning.push('and');\n    }\n    if (versionMismatch) {\n      warning.push(\n        `version name \"${version}\" contains illegal characters (whitespace or \"/\")`\n      );\n    }\n    logger.warn(warning.join(' '));\n    return;\n  }\n  _registerComponent(\n    new Component(\n      `${library}-version` as Name,\n      () => ({ library, version }),\n      ComponentType.VERSION\n    )\n  );\n}\n\n/**\n * Sets log handler for all Firebase SDKs.\n * @param logCallback - An optional custom log handler that executes user code whenever\n * the Firebase SDK makes a logging call.\n *\n * @public\n */\nexport function onLog(\n  logCallback: LogCallback | null,\n  options?: LogOptions\n): void {\n  if (logCallback !== null && typeof logCallback !== 'function') {\n    throw ERROR_FACTORY.create(AppError.INVALID_LOG_ARGUMENT);\n  }\n  setUserLogHandler(logCallback, options);\n}\n\n/**\n * Sets log level for all Firebase SDKs.\n *\n * All of the log types above the current log level are captured (i.e. if\n * you set the log level to `info`, errors are logged, but `debug` and\n * `verbose` logs are not).\n *\n * @public\n */\nexport function setLogLevel(logLevel: LogLevelString): void {\n  setLogLevelImpl(logLevel);\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError } from '@firebase/util';\nimport { DBSchema, openDB, IDBPDatabase } from 'idb';\nimport { AppError, ERROR_FACTORY } from './errors';\nimport { FirebaseApp } from './public-types';\nimport { HeartbeatsInIndexedDB } from './types';\nimport { logger } from './logger';\n\nconst DB_NAME = 'firebase-heartbeat-database';\nconst DB_VERSION = 1;\nconst STORE_NAME = 'firebase-heartbeat-store';\n\ninterface AppDB extends DBSchema {\n  'firebase-heartbeat-store': {\n    key: string;\n    value: HeartbeatsInIndexedDB;\n  };\n}\n\nlet dbPromise: Promise<IDBPDatabase<AppDB>> | null = null;\nfunction getDbPromise(): Promise<IDBPDatabase<AppDB>> {\n  if (!dbPromise) {\n    dbPromise = openDB<AppDB>(DB_NAME, DB_VERSION, {\n      upgrade: (db, oldVersion) => {\n        // We don't use 'break' in this switch statement, the fall-through\n        // behavior is what we want, because if there are multiple versions between\n        // the old version and the current version, we want ALL the migrations\n        // that correspond to those versions to run, not only the last one.\n        // eslint-disable-next-line default-case\n        switch (oldVersion) {\n          case 0:\n            db.createObjectStore(STORE_NAME);\n        }\n      }\n    }).catch(e => {\n      throw ERROR_FACTORY.create(AppError.IDB_OPEN, {\n        originalErrorMessage: e.message\n      });\n    });\n  }\n  return dbPromise;\n}\n\nexport async function readHeartbeatsFromIndexedDB(\n  app: FirebaseApp\n): Promise<HeartbeatsInIndexedDB | undefined> {\n  try {\n    const db = await getDbPromise();\n    return db\n      .transaction(STORE_NAME)\n      .objectStore(STORE_NAME)\n      .get(computeKey(app)) as Promise<HeartbeatsInIndexedDB | undefined>;\n  } catch (e) {\n    if (e instanceof FirebaseError) {\n      logger.warn(e.message);\n    } else {\n      const idbGetError = ERROR_FACTORY.create(AppError.IDB_GET, {\n        originalErrorMessage: (e as Error)?.message\n      });\n      logger.warn(idbGetError.message);\n    }\n  }\n}\n\nexport async function writeHeartbeatsToIndexedDB(\n  app: FirebaseApp,\n  heartbeatObject: HeartbeatsInIndexedDB\n): Promise<void> {\n  try {\n    const db = await getDbPromise();\n    const tx = db.transaction(STORE_NAME, 'readwrite');\n    const objectStore = tx.objectStore(STORE_NAME);\n    await objectStore.put(heartbeatObject, computeKey(app));\n    return tx.done;\n  } catch (e) {\n    if (e instanceof FirebaseError) {\n      logger.warn(e.message);\n    } else {\n      const idbGetError = ERROR_FACTORY.create(AppError.IDB_WRITE, {\n        originalErrorMessage: (e as Error)?.message\n      });\n      logger.warn(idbGetError.message);\n    }\n  }\n}\n\nfunction computeKey(app: FirebaseApp): string {\n  return `${app.name}!${app.options.appId}`;\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ComponentContainer } from '@firebase/component';\nimport {\n  base64urlEncodeWithoutPadding,\n  isIndexedDBAvailable,\n  validateIndexedDBOpenable\n} from '@firebase/util';\nimport {\n  readHeartbeatsFromIndexedDB,\n  writeHeartbeatsToIndexedDB\n} from './indexeddb';\nimport { FirebaseApp } from './public-types';\nimport {\n  HeartbeatsByUserAgent,\n  HeartbeatService,\n  HeartbeatsInIndexedDB,\n  HeartbeatStorage,\n  SingleDateHeartbeat\n} from './types';\n\nconst MAX_HEADER_BYTES = 1024;\n// 30 days\nconst STORED_HEARTBEAT_RETENTION_MAX_MILLIS = 30 * 24 * 60 * 60 * 1000;\n\nexport class HeartbeatServiceImpl implements HeartbeatService {\n  /**\n   * The persistence layer for heartbeats\n   * Leave public for easier testing.\n   */\n  _storage: HeartbeatStorageImpl;\n\n  /**\n   * In-memory cache for heartbeats, used by getHeartbeatsHeader() to generate\n   * the header string.\n   * Stores one record per date. This will be consolidated into the standard\n   * format of one record per user agent string before being sent as a header.\n   * Populated from indexedDB when the controller is instantiated and should\n   * be kept in sync with indexedDB.\n   * Leave public for easier testing.\n   */\n  _heartbeatsCache: HeartbeatsInIndexedDB | null = null;\n\n  /**\n   * the initialization promise for populating heartbeatCache.\n   * If getHeartbeatsHeader() is called before the promise resolves\n   * (hearbeatsCache == null), it should wait for this promise\n   * Leave public for easier testing.\n   */\n  _heartbeatsCachePromise: Promise<HeartbeatsInIndexedDB>;\n  constructor(private readonly container: ComponentContainer) {\n    const app = this.container.getProvider('app').getImmediate();\n    this._storage = new HeartbeatStorageImpl(app);\n    this._heartbeatsCachePromise = this._storage.read().then(result => {\n      this._heartbeatsCache = result;\n      return result;\n    });\n  }\n\n  /**\n   * Called to report a heartbeat. The function will generate\n   * a HeartbeatsByUserAgent object, update heartbeatsCache, and persist it\n   * to IndexedDB.\n   * Note that we only store one heartbeat per day. So if a heartbeat for today is\n   * already logged, subsequent calls to this function in the same day will be ignored.\n   */\n  async triggerHeartbeat(): Promise<void> {\n    const platformLogger = this.container\n      .getProvider('platform-logger')\n      .getImmediate();\n\n    // This is the \"Firebase user agent\" string from the platform logger\n    // service, not the browser user agent.\n    const agent = platformLogger.getPlatformInfoString();\n    const date = getUTCDateString();\n    if (this._heartbeatsCache === null) {\n      this._heartbeatsCache = await this._heartbeatsCachePromise;\n    }\n    // Do not store a heartbeat if one is already stored for this day\n    // or if a header has already been sent today.\n    if (\n      this._heartbeatsCache.lastSentHeartbeatDate === date ||\n      this._heartbeatsCache.heartbeats.some(\n        singleDateHeartbeat => singleDateHeartbeat.date === date\n      )\n    ) {\n      return;\n    } else {\n      // There is no entry for this date. Create one.\n      this._heartbeatsCache.heartbeats.push({ date, agent });\n    }\n    // Remove entries older than 30 days.\n    this._heartbeatsCache.heartbeats = this._heartbeatsCache.heartbeats.filter(\n      singleDateHeartbeat => {\n        const hbTimestamp = new Date(singleDateHeartbeat.date).valueOf();\n        const now = Date.now();\n        return now - hbTimestamp <= STORED_HEARTBEAT_RETENTION_MAX_MILLIS;\n      }\n    );\n    return this._storage.overwrite(this._heartbeatsCache);\n  }\n\n  /**\n   * Returns a base64 encoded string which can be attached to the heartbeat-specific header directly.\n   * It also clears all heartbeats from memory as well as in IndexedDB.\n   *\n   * NOTE: Consuming product SDKs should not send the header if this method\n   * returns an empty string.\n   */\n  async getHeartbeatsHeader(): Promise<string> {\n    if (this._heartbeatsCache === null) {\n      await this._heartbeatsCachePromise;\n    }\n    // If it's still null or the array is empty, there is no data to send.\n    if (\n      this._heartbeatsCache === null ||\n      this._heartbeatsCache.heartbeats.length === 0\n    ) {\n      return '';\n    }\n    const date = getUTCDateString();\n    // Extract as many heartbeats from the cache as will fit under the size limit.\n    const { heartbeatsToSend, unsentEntries } = extractHeartbeatsForHeader(\n      this._heartbeatsCache.heartbeats\n    );\n    const headerString = base64urlEncodeWithoutPadding(\n      JSON.stringify({ version: 2, heartbeats: heartbeatsToSend })\n    );\n    // Store last sent date to prevent another being logged/sent for the same day.\n    this._heartbeatsCache.lastSentHeartbeatDate = date;\n    if (unsentEntries.length > 0) {\n      // Store any unsent entries if they exist.\n      this._heartbeatsCache.heartbeats = unsentEntries;\n      // This seems more likely than emptying the array (below) to lead to some odd state\n      // since the cache isn't empty and this will be called again on the next request,\n      // and is probably safest if we await it.\n      await this._storage.overwrite(this._heartbeatsCache);\n    } else {\n      this._heartbeatsCache.heartbeats = [];\n      // Do not wait for this, to reduce latency.\n      void this._storage.overwrite(this._heartbeatsCache);\n    }\n    return headerString;\n  }\n}\n\nfunction getUTCDateString(): string {\n  const today = new Date();\n  // Returns date format 'YYYY-MM-DD'\n  return today.toISOString().substring(0, 10);\n}\n\nexport function extractHeartbeatsForHeader(\n  heartbeatsCache: SingleDateHeartbeat[],\n  maxSize = MAX_HEADER_BYTES\n): {\n  heartbeatsToSend: HeartbeatsByUserAgent[];\n  unsentEntries: SingleDateHeartbeat[];\n} {\n  // Heartbeats grouped by user agent in the standard format to be sent in\n  // the header.\n  const heartbeatsToSend: HeartbeatsByUserAgent[] = [];\n  // Single date format heartbeats that are not sent.\n  let unsentEntries = heartbeatsCache.slice();\n  for (const singleDateHeartbeat of heartbeatsCache) {\n    // Look for an existing entry with the same user agent.\n    const heartbeatEntry = heartbeatsToSend.find(\n      hb => hb.agent === singleDateHeartbeat.agent\n    );\n    if (!heartbeatEntry) {\n      // If no entry for this user agent exists, create one.\n      heartbeatsToSend.push({\n        agent: singleDateHeartbeat.agent,\n        dates: [singleDateHeartbeat.date]\n      });\n      if (countBytes(heartbeatsToSend) > maxSize) {\n        // If the header would exceed max size, remove the added heartbeat\n        // entry and stop adding to the header.\n        heartbeatsToSend.pop();\n        break;\n      }\n    } else {\n      heartbeatEntry.dates.push(singleDateHeartbeat.date);\n      // If the header would exceed max size, remove the added date\n      // and stop adding to the header.\n      if (countBytes(heartbeatsToSend) > maxSize) {\n        heartbeatEntry.dates.pop();\n        break;\n      }\n    }\n    // Pop unsent entry from queue. (Skipped if adding the entry exceeded\n    // quota and the loop breaks early.)\n    unsentEntries = unsentEntries.slice(1);\n  }\n  return {\n    heartbeatsToSend,\n    unsentEntries\n  };\n}\n\nexport class HeartbeatStorageImpl implements HeartbeatStorage {\n  private _canUseIndexedDBPromise: Promise<boolean>;\n  constructor(public app: FirebaseApp) {\n    this._canUseIndexedDBPromise = this.runIndexedDBEnvironmentCheck();\n  }\n  async runIndexedDBEnvironmentCheck(): Promise<boolean> {\n    if (!isIndexedDBAvailable()) {\n      return false;\n    } else {\n      return validateIndexedDBOpenable()\n        .then(() => true)\n        .catch(() => false);\n    }\n  }\n  /**\n   * Read all heartbeats.\n   */\n  async read(): Promise<HeartbeatsInIndexedDB> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return { heartbeats: [] };\n    } else {\n      const idbHeartbeatObject = await readHeartbeatsFromIndexedDB(this.app);\n      return idbHeartbeatObject || { heartbeats: [] };\n    }\n  }\n  // overwrite the storage with the provided heartbeats\n  async overwrite(heartbeatsObject: HeartbeatsInIndexedDB): Promise<void> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return;\n    } else {\n      const existingHeartbeatsObject = await this.read();\n      return writeHeartbeatsToIndexedDB(this.app, {\n        lastSentHeartbeatDate:\n          heartbeatsObject.lastSentHeartbeatDate ??\n          existingHeartbeatsObject.lastSentHeartbeatDate,\n        heartbeats: heartbeatsObject.heartbeats\n      });\n    }\n  }\n  // add heartbeats\n  async add(heartbeatsObject: HeartbeatsInIndexedDB): Promise<void> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return;\n    } else {\n      const existingHeartbeatsObject = await this.read();\n      return writeHeartbeatsToIndexedDB(this.app, {\n        lastSentHeartbeatDate:\n          heartbeatsObject.lastSentHeartbeatDate ??\n          existingHeartbeatsObject.lastSentHeartbeatDate,\n        heartbeats: [\n          ...existingHeartbeatsObject.heartbeats,\n          ...heartbeatsObject.heartbeats\n        ]\n      });\n    }\n  }\n}\n\n/**\n * Calculate bytes of a HeartbeatsByUserAgent array after being wrapped\n * in a platform logging header JSON object, stringified, and converted\n * to base 64.\n */\nexport function countBytes(heartbeatsCache: HeartbeatsByUserAgent[]): number {\n  // base64 has a restricted set of characters, all of which should be 1 byte.\n  return base64urlEncodeWithoutPadding(\n    // heartbeatsCache wrapper properties\n    JSON.stringify({ version: 2, heartbeats: heartbeatsCache })\n  ).length;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64Decode } from './crypt';\nimport { jsonEval } from './json';\n\ninterface Claims {\n  [key: string]: {};\n}\n\ninterface DecodedToken {\n  header: object;\n  claims: Claims;\n  data: object;\n  signature: string;\n}\n\n/**\n * Decodes a Firebase auth. token into constituent parts.\n *\n * Notes:\n * - May return with invalid / incomplete claims if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const decode = function (token: string): DecodedToken {\n  let header = {},\n    claims: Claims = {},\n    data = {},\n    signature = '';\n\n  try {\n    const parts = token.split('.');\n    header = jsonEval(base64Decode(parts[0]) || '') as object;\n    claims = jsonEval(base64Decode(parts[1]) || '') as Claims;\n    signature = parts[2];\n    data = claims['d'] || {};\n    delete claims['d'];\n  } catch (e) {}\n\n  return {\n    header,\n    claims,\n    data,\n    signature\n  };\n};\n\ninterface DecodedToken {\n  header: object;\n  claims: Claims;\n  data: object;\n  signature: string;\n}\n\n/**\n * Decodes a Firebase auth. token and checks the validity of its time-based claims. Will return true if the\n * token is within the time window authorized by the 'nbf' (not-before) and 'iat' (issued-at) claims.\n *\n * Notes:\n * - May return a false negative if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const isValidTimestamp = function (token: string): boolean {\n  const claims: Claims = decode(token).claims;\n  const now: number = Math.floor(new Date().getTime() / 1000);\n  let validSince: number = 0,\n    validUntil: number = 0;\n\n  if (typeof claims === 'object') {\n    if (claims.hasOwnProperty('nbf')) {\n      validSince = claims['nbf'] as number;\n    } else if (claims.hasOwnProperty('iat')) {\n      validSince = claims['iat'] as number;\n    }\n\n    if (claims.hasOwnProperty('exp')) {\n      validUntil = claims['exp'] as number;\n    } else {\n      // token will expire after 24h by default\n      validUntil = validSince + 86400;\n    }\n  }\n\n  return (\n    !!now &&\n    !!validSince &&\n    !!validUntil &&\n    now >= validSince &&\n    now <= validUntil\n  );\n};\n\n/**\n * Decodes a Firebase auth. token and returns its issued at time if valid, null otherwise.\n *\n * Notes:\n * - May return null if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const issuedAtTime = function (token: string): number | null {\n  const claims: Claims = decode(token).claims;\n  if (typeof claims === 'object' && claims.hasOwnProperty('iat')) {\n    return claims['iat'] as number;\n  }\n  return null;\n};\n\n/**\n * Decodes a Firebase auth. token and checks the validity of its format. Expects a valid issued-at time.\n *\n * Notes:\n * - May return a false negative if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const isValidFormat = function (token: string): boolean {\n  const decoded = decode(token),\n    claims = decoded.claims;\n\n  return !!claims && typeof claims === 'object' && claims.hasOwnProperty('iat');\n};\n\n/**\n * Attempts to peer into an auth token and determine if it's an admin auth token by looking at the claims portion.\n *\n * Notes:\n * - May return a false negative if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const isAdmin = function (token: string): boolean {\n  const claims: Claims = decode(token).claims;\n  return typeof claims === 'object' && claims['admin'] === true;\n};\n","import { _getProvider, getApp as t, _removeServiceInstance as e, _registerComponent as n, registerVersion as r, SDK_VERSION as s } from \"@firebase/app\";\n\nimport { Component as i } from \"@firebase/component\";\n\nimport { Logger as o, LogLevel as u } from \"@firebase/logger\";\n\nimport { FirebaseError as c, getDefaultEmulatorHostnameAndPort as a, createMockUserToken as h, getModularInstance as l, deepEqual as f } from \"@firebase/util\";\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Simple wrapper around a nullable UID. Mostly exists to make code more\n * readable.\n */\nclass d {\n    constructor(t) {\n        this.uid = t;\n    }\n    isAuthenticated() {\n        return null != this.uid;\n    }\n    /**\n     * Returns a key representing this user, suitable for inclusion in a\n     * dictionary.\n     */    toKey() {\n        return this.isAuthenticated() ? \"uid:\" + this.uid : \"anonymous-user\";\n    }\n    isEqual(t) {\n        return t.uid === this.uid;\n    }\n}\n\n/** A user with a null UID. */ d.UNAUTHENTICATED = new d(null), \n// TODO(mikelehen): Look into getting a proper uid-equivalent for\n// non-FirebaseAuth providers.\nd.GOOGLE_CREDENTIALS = new d(\"google-credentials-uid\"), d.FIRST_PARTY = new d(\"first-party-uid\"), \nd.MOCK_USER = new d(\"mock-user\");\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nlet w = \"9.13.0\";\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst m = new o(\"@firebase/firestore\");\n\n/**\n * Sets the verbosity of Cloud Firestore logs (debug, error, or silent).\n *\n * @param logLevel - The verbosity you set for activity and error logging. Can\n *   be any of the following values:\n *\n *   <ul>\n *     <li>`debug` for the most verbose logging level, primarily for\n *     debugging.</li>\n *     <li>`error` to log errors only.</li>\n *     <li><code>`silent` to turn off logging.</li>\n *   </ul>\n */ function p(t) {\n    m.setLogLevel(t);\n}\n\nfunction y(t, ...e) {\n    if (m.logLevel <= u.DEBUG) {\n        const n = e.map(v);\n        m.debug(`Firestore (${w}): ${t}`, ...n);\n    }\n}\n\nfunction _(t, ...e) {\n    if (m.logLevel <= u.ERROR) {\n        const n = e.map(v);\n        m.error(`Firestore (${w}): ${t}`, ...n);\n    }\n}\n\n/**\n * @internal\n */ function g(t, ...e) {\n    if (m.logLevel <= u.WARN) {\n        const n = e.map(v);\n        m.warn(`Firestore (${w}): ${t}`, ...n);\n    }\n}\n\n/**\n * Converts an additional log parameter to a string representation.\n */ function v(t) {\n    if (\"string\" == typeof t) return t;\n    try {\n        return e = t, JSON.stringify(e);\n    } catch (e) {\n        // Converting to JSON failed, just log the object directly\n        return t;\n    }\n    /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n    /** Formats an object as a JSON string, suitable for logging. */\n    var e;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Unconditionally fails, throwing an Error with the given message.\n * Messages are stripped in production builds.\n *\n * Returns `never` and can be used in expressions:\n * @example\n * let futureVar = fail('not implemented yet');\n */ function b(t = \"Unexpected state\") {\n    // Log the failure in addition to throw an exception, just in case the\n    // exception is swallowed.\n    const e = `FIRESTORE (${w}) INTERNAL ASSERTION FAILED: ` + t;\n    // NOTE: We don't use FirestoreError here because these are internal failures\n    // that cannot be handled by the user. (Also it would create a circular\n    // dependency between the error and assert modules which doesn't work.)\n    throw _(e), new Error(e);\n}\n\n/**\n * Fails if the given assertion condition is false, throwing an Error with the\n * given message if it did.\n *\n * Messages are stripped in production builds.\n */ function E(t, e) {\n    t || b();\n}\n\n/**\n * Casts `obj` to `T`. In non-production builds, verifies that `obj` is an\n * instance of `T` before casting.\n */ function I(t, \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ne) {\n    return t;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const T = \"ok\", A = \"cancelled\", R = \"unknown\", P = \"invalid-argument\", V = \"deadline-exceeded\", N = \"not-found\", D = \"already-exists\", $ = \"permission-denied\", x = \"unauthenticated\", F = \"resource-exhausted\", S = \"failed-precondition\", q = \"aborted\", O = \"out-of-range\", k = \"unimplemented\", C = \"internal\", L = \"unavailable\", M = \"data-loss\";\n\n/** An error returned by a Firestore operation. */ class U extends c {\n    /** @hideconstructor */\n    constructor(\n    /**\n     * The backend error code associated with this error.\n     */\n    t, \n    /**\n     * A custom error description.\n     */\n    e) {\n        super(t, e), this.code = t, this.message = e, \n        // HACK: We write a toString property directly because Error is not a real\n        // class and so inheritance does not work correctly. We could alternatively\n        // do the same \"back-door inheritance\" trick that FirebaseError does.\n        this.toString = () => `${this.name}: [code=${this.code}]: ${this.message}`;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class j {\n    constructor() {\n        this.promise = new Promise(((t, e) => {\n            this.resolve = t, this.reject = e;\n        }));\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class B {\n    constructor(t, e) {\n        this.user = e, this.type = \"OAuth\", this.headers = new Map, this.headers.set(\"Authorization\", `Bearer ${t}`);\n    }\n}\n\n/**\n * A CredentialsProvider that always yields an empty token.\n * @internal\n */ class Q {\n    getToken() {\n        return Promise.resolve(null);\n    }\n    invalidateToken() {}\n    start(t, e) {\n        // Fire with initial user.\n        t.enqueueRetryable((() => e(d.UNAUTHENTICATED)));\n    }\n    shutdown() {}\n}\n\n/**\n * A CredentialsProvider that always returns a constant token. Used for\n * emulator token mocking.\n */ class z {\n    constructor(t) {\n        this.token = t, \n        /**\n         * Stores the listener registered with setChangeListener()\n         * This isn't actually necessary since the UID never changes, but we use this\n         * to verify the listen contract is adhered to in tests.\n         */\n        this.changeListener = null;\n    }\n    getToken() {\n        return Promise.resolve(this.token);\n    }\n    invalidateToken() {}\n    start(t, e) {\n        this.changeListener = e, \n        // Fire with initial user.\n        t.enqueueRetryable((() => e(this.token.user)));\n    }\n    shutdown() {\n        this.changeListener = null;\n    }\n}\n\n/** Credential provider for the Lite SDK. */ class G {\n    constructor(t) {\n        this.auth = null, t.onInit((t => {\n            this.auth = t;\n        }));\n    }\n    getToken() {\n        return this.auth ? this.auth.getToken().then((t => t ? (E(\"string\" == typeof t.accessToken), \n        new B(t.accessToken, new d(this.auth.getUid()))) : null)) : Promise.resolve(null);\n    }\n    invalidateToken() {}\n    start(t, e) {}\n    shutdown() {}\n}\n\n/*\n * FirstPartyToken provides a fresh token each time its value\n * is requested, because if the token is too old, requests will be rejected.\n * Technically this may no longer be necessary since the SDK should gracefully\n * recover from unauthenticated errors (see b/33147818 for context), but it's\n * safer to keep the implementation as-is.\n */ class W {\n    constructor(t, e, n, r) {\n        this.t = t, this.i = e, this.o = n, this.u = r, this.type = \"FirstParty\", this.user = d.FIRST_PARTY, \n        this.h = new Map;\n    }\n    /** Gets an authorization token, using a provided factory function, or falling back to First Party GAPI. */    l() {\n        return this.u ? this.u() : (\n        // Make sure this really is a Gapi client.\n        E(!(\"object\" != typeof this.t || null === this.t || !this.t.auth || !this.t.auth.getAuthHeaderValueForFirstParty)), \n        this.t.auth.getAuthHeaderValueForFirstParty([]));\n    }\n    get headers() {\n        this.h.set(\"X-Goog-AuthUser\", this.i);\n        // Use array notation to prevent minification\n        const t = this.l();\n        return t && this.h.set(\"Authorization\", t), this.o && this.h.set(\"X-Goog-Iam-Authorization-Token\", this.o), \n        this.h;\n    }\n}\n\n/*\n * Provides user credentials required for the Firestore JavaScript SDK\n * to authenticate the user, using technique that is only available\n * to applications hosted by Google.\n */ class K {\n    constructor(t, e, n, r) {\n        this.t = t, this.i = e, this.o = n, this.u = r;\n    }\n    getToken() {\n        return Promise.resolve(new W(this.t, this.i, this.o, this.u));\n    }\n    start(t, e) {\n        // Fire with initial uid.\n        t.enqueueRetryable((() => e(d.FIRST_PARTY)));\n    }\n    shutdown() {}\n    invalidateToken() {}\n}\n\nclass Y {\n    constructor(t) {\n        this.value = t, this.type = \"AppCheck\", this.headers = new Map, t && t.length > 0 && this.headers.set(\"x-firebase-appcheck\", this.value);\n    }\n}\n\n/** AppCheck token provider for the Lite SDK. */ class H {\n    constructor(t) {\n        this.m = t, this.appCheck = null, t.onInit((t => {\n            this.appCheck = t;\n        }));\n    }\n    getToken() {\n        return this.appCheck ? this.appCheck.getToken().then((t => t ? (E(\"string\" == typeof t.token), \n        new Y(t.token)) : null)) : Promise.resolve(null);\n    }\n    invalidateToken() {}\n    start(t, e) {}\n    shutdown() {}\n}\n\n/**\n * Builds a CredentialsProvider depending on the type of\n * the credentials passed in.\n */\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nclass J {\n    /**\n     * Constructs a DatabaseInfo using the provided host, databaseId and\n     * persistenceKey.\n     *\n     * @param databaseId - The database to use.\n     * @param appId - The Firebase App Id.\n     * @param persistenceKey - A unique identifier for this Firestore's local\n     * storage (used in conjunction with the databaseId).\n     * @param host - The Firestore backend host to connect to.\n     * @param ssl - Whether to use SSL when connecting.\n     * @param forceLongPolling - Whether to use the forceLongPolling option\n     * when using WebChannel as the network transport.\n     * @param autoDetectLongPolling - Whether to use the detectBufferingProxy\n     * option when using WebChannel as the network transport.\n     * @param useFetchStreams Whether to use the Fetch API instead of\n     * XMLHTTPRequest\n     */\n    constructor(t, e, n, r, s, i, o, u) {\n        this.databaseId = t, this.appId = e, this.persistenceKey = n, this.host = r, this.ssl = s, \n        this.forceLongPolling = i, this.autoDetectLongPolling = o, this.useFetchStreams = u;\n    }\n}\n\n/** The default database name for a project. */\n/**\n * Represents the database ID a Firestore client is associated with.\n * @internal\n */\nclass X {\n    constructor(t, e) {\n        this.projectId = t, this.database = e || \"(default)\";\n    }\n    static empty() {\n        return new X(\"\", \"\");\n    }\n    get isDefaultDatabase() {\n        return \"(default)\" === this.database;\n    }\n    isEqual(t) {\n        return t instanceof X && t.projectId === this.projectId && t.database === this.database;\n    }\n}\n\n/**\n * Path represents an ordered sequence of string segments.\n */\nclass Z {\n    constructor(t, e, n) {\n        void 0 === e ? e = 0 : e > t.length && b(), void 0 === n ? n = t.length - e : n > t.length - e && b(), \n        this.segments = t, this.offset = e, this.len = n;\n    }\n    get length() {\n        return this.len;\n    }\n    isEqual(t) {\n        return 0 === Z.comparator(this, t);\n    }\n    child(t) {\n        const e = this.segments.slice(this.offset, this.limit());\n        return t instanceof Z ? t.forEach((t => {\n            e.push(t);\n        })) : e.push(t), this.construct(e);\n    }\n    /** The index of one past the last segment of the path. */    limit() {\n        return this.offset + this.length;\n    }\n    popFirst(t) {\n        return t = void 0 === t ? 1 : t, this.construct(this.segments, this.offset + t, this.length - t);\n    }\n    popLast() {\n        return this.construct(this.segments, this.offset, this.length - 1);\n    }\n    firstSegment() {\n        return this.segments[this.offset];\n    }\n    lastSegment() {\n        return this.get(this.length - 1);\n    }\n    get(t) {\n        return this.segments[this.offset + t];\n    }\n    isEmpty() {\n        return 0 === this.length;\n    }\n    isPrefixOf(t) {\n        if (t.length < this.length) return !1;\n        for (let e = 0; e < this.length; e++) if (this.get(e) !== t.get(e)) return !1;\n        return !0;\n    }\n    isImmediateParentOf(t) {\n        if (this.length + 1 !== t.length) return !1;\n        for (let e = 0; e < this.length; e++) if (this.get(e) !== t.get(e)) return !1;\n        return !0;\n    }\n    forEach(t) {\n        for (let e = this.offset, n = this.limit(); e < n; e++) t(this.segments[e]);\n    }\n    toArray() {\n        return this.segments.slice(this.offset, this.limit());\n    }\n    static comparator(t, e) {\n        const n = Math.min(t.length, e.length);\n        for (let r = 0; r < n; r++) {\n            const n = t.get(r), s = e.get(r);\n            if (n < s) return -1;\n            if (n > s) return 1;\n        }\n        return t.length < e.length ? -1 : t.length > e.length ? 1 : 0;\n    }\n}\n\n/**\n * A slash-separated path for navigating resources (documents and collections)\n * within Firestore.\n *\n * @internal\n */ class tt extends Z {\n    construct(t, e, n) {\n        return new tt(t, e, n);\n    }\n    canonicalString() {\n        // NOTE: The client is ignorant of any path segments containing escape\n        // sequences (e.g. __id123__) and just passes them through raw (they exist\n        // for legacy reasons and should not be used frequently).\n        return this.toArray().join(\"/\");\n    }\n    toString() {\n        return this.canonicalString();\n    }\n    /**\n     * Creates a resource path from the given slash-delimited string. If multiple\n     * arguments are provided, all components are combined. Leading and trailing\n     * slashes from all components are ignored.\n     */    static fromString(...t) {\n        // NOTE: The client is ignorant of any path segments containing escape\n        // sequences (e.g. __id123__) and just passes them through raw (they exist\n        // for legacy reasons and should not be used frequently).\n        const e = [];\n        for (const n of t) {\n            if (n.indexOf(\"//\") >= 0) throw new U(P, `Invalid segment (${n}). Paths must not contain // in them.`);\n            // Strip leading and traling slashed.\n                        e.push(...n.split(\"/\").filter((t => t.length > 0)));\n        }\n        return new tt(e);\n    }\n    static emptyPath() {\n        return new tt([]);\n    }\n}\n\nconst et = /^[_a-zA-Z][_a-zA-Z0-9]*$/;\n\n/**\n * A dot-separated path for navigating sub-objects within a document.\n * @internal\n */ class nt extends Z {\n    construct(t, e, n) {\n        return new nt(t, e, n);\n    }\n    /**\n     * Returns true if the string could be used as a segment in a field path\n     * without escaping.\n     */    static isValidIdentifier(t) {\n        return et.test(t);\n    }\n    canonicalString() {\n        return this.toArray().map((t => (t = t.replace(/\\\\/g, \"\\\\\\\\\").replace(/`/g, \"\\\\`\"), \n        nt.isValidIdentifier(t) || (t = \"`\" + t + \"`\"), t))).join(\".\");\n    }\n    toString() {\n        return this.canonicalString();\n    }\n    /**\n     * Returns true if this field references the key of a document.\n     */    isKeyField() {\n        return 1 === this.length && \"__name__\" === this.get(0);\n    }\n    /**\n     * The field designating the key of a document.\n     */    static keyField() {\n        return new nt([ \"__name__\" ]);\n    }\n    /**\n     * Parses a field string from the given server-formatted string.\n     *\n     * - Splitting the empty string is not allowed (for now at least).\n     * - Empty segments within the string (e.g. if there are two consecutive\n     *   separators) are not allowed.\n     *\n     * TODO(b/37244157): we should make this more strict. Right now, it allows\n     * non-identifier path components, even if they aren't escaped.\n     */    static fromServerFormat(t) {\n        const e = [];\n        let n = \"\", r = 0;\n        const s = () => {\n            if (0 === n.length) throw new U(P, `Invalid field path (${t}). Paths must not be empty, begin with '.', end with '.', or contain '..'`);\n            e.push(n), n = \"\";\n        };\n        let i = !1;\n        for (;r < t.length; ) {\n            const e = t[r];\n            if (\"\\\\\" === e) {\n                if (r + 1 === t.length) throw new U(P, \"Path has trailing escape character: \" + t);\n                const e = t[r + 1];\n                if (\"\\\\\" !== e && \".\" !== e && \"`\" !== e) throw new U(P, \"Path has invalid escape sequence: \" + t);\n                n += e, r += 2;\n            } else \"`\" === e ? (i = !i, r++) : \".\" !== e || i ? (n += e, r++) : (s(), r++);\n        }\n        if (s(), i) throw new U(P, \"Unterminated ` in path: \" + t);\n        return new nt(e);\n    }\n    static emptyPath() {\n        return new nt([]);\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @internal\n */ class rt {\n    constructor(t) {\n        this.path = t;\n    }\n    static fromPath(t) {\n        return new rt(tt.fromString(t));\n    }\n    static fromName(t) {\n        return new rt(tt.fromString(t).popFirst(5));\n    }\n    static empty() {\n        return new rt(tt.emptyPath());\n    }\n    get collectionGroup() {\n        return this.path.popLast().lastSegment();\n    }\n    /** Returns true if the document is in the specified collectionId. */    hasCollectionId(t) {\n        return this.path.length >= 2 && this.path.get(this.path.length - 2) === t;\n    }\n    /** Returns the collection group (i.e. the name of the parent collection) for this key. */    getCollectionGroup() {\n        return this.path.get(this.path.length - 2);\n    }\n    /** Returns the fully qualified path to the parent collection. */    getCollectionPath() {\n        return this.path.popLast();\n    }\n    isEqual(t) {\n        return null !== t && 0 === tt.comparator(this.path, t.path);\n    }\n    toString() {\n        return this.path.toString();\n    }\n    static comparator(t, e) {\n        return tt.comparator(t.path, e.path);\n    }\n    static isDocumentKey(t) {\n        return t.length % 2 == 0;\n    }\n    /**\n     * Creates and returns a new document key with the given segments.\n     *\n     * @param segments - The segments of the path to the document\n     * @returns A new instance of DocumentKey\n     */    static fromSegments(t) {\n        return new rt(new tt(t.slice()));\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ function st(t, e, n) {\n    if (!n) throw new U(P, `Function ${t}() cannot be called with an empty ${e}.`);\n}\n\n/**\n * Validates that two boolean options are not set at the same time.\n * @internal\n */\n/**\n * Validates that `path` refers to a document (indicated by the fact it contains\n * an even numbers of segments).\n */\nfunction it(t) {\n    if (!rt.isDocumentKey(t)) throw new U(P, `Invalid document reference. Document references must have an even number of segments, but ${t} has ${t.length}.`);\n}\n\n/**\n * Validates that `path` refers to a collection (indicated by the fact it\n * contains an odd numbers of segments).\n */ function ot(t) {\n    if (rt.isDocumentKey(t)) throw new U(P, `Invalid collection reference. Collection references must have an odd number of segments, but ${t} has ${t.length}.`);\n}\n\n/**\n * Returns true if it's a non-null object without a custom prototype\n * (i.e. excludes Array, Date, etc.).\n */\n/** Returns a string describing the type / value of the provided input. */\nfunction ut(t) {\n    if (void 0 === t) return \"undefined\";\n    if (null === t) return \"null\";\n    if (\"string\" == typeof t) return t.length > 20 && (t = `${t.substring(0, 20)}...`), \n    JSON.stringify(t);\n    if (\"number\" == typeof t || \"boolean\" == typeof t) return \"\" + t;\n    if (\"object\" == typeof t) {\n        if (t instanceof Array) return \"an array\";\n        {\n            const e = \n            /** try to get the constructor name for an object. */\n            function(t) {\n                if (t.constructor) return t.constructor.name;\n                return null;\n            }\n            /**\n * Casts `obj` to `T`, optionally unwrapping Compat types to expose the\n * underlying instance. Throws if  `obj` is not an instance of `T`.\n *\n * This cast is used in the Lite and Full SDK to verify instance types for\n * arguments passed to the public API.\n * @internal\n */ (t);\n            return e ? `a custom ${e} object` : \"an object\";\n        }\n    }\n    return \"function\" == typeof t ? \"a function\" : b();\n}\n\nfunction ct(t, \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ne) {\n    if (\"_delegate\" in t && (\n    // Unwrap Compat types\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    t = t._delegate), !(t instanceof e)) {\n        if (e.name === t.constructor.name) throw new U(P, \"Type does not match the expected instance. Did you pass a reference from a different Firestore SDK?\");\n        {\n            const n = ut(t);\n            throw new U(P, `Expected type '${e.name}', but it was: ${n}`);\n        }\n    }\n    return t;\n}\n\nfunction at(t, e) {\n    if (e <= 0) throw new U(P, `Function ${t}() requires a positive number, but it was: ${e}.`);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns whether a variable is either undefined or null.\n */ function ht(t) {\n    return null == t;\n}\n\n/** Returns whether the value represents -0. */ function lt(t) {\n    // Detect if the value is -0.0. Based on polyfill from\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n    return 0 === t && 1 / t == -1 / 0;\n}\n\n/**\n * Returns whether a value is an integer and in the safe integer range\n * @param value - The value to test for being an integer and in the safe range\n */\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst ft = {\n    BatchGetDocuments: \"batchGet\",\n    Commit: \"commit\",\n    RunQuery: \"runQuery\",\n    RunAggregationQuery: \"runAggregationQuery\"\n};\n\n/**\n * Maps RPC names to the corresponding REST endpoint name.\n *\n * We use array notation to avoid mangling.\n */\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Error Codes describing the different ways GRPC can fail. These are copied\n * directly from GRPC's sources here:\n *\n * https://github.com/grpc/grpc/blob/bceec94ea4fc5f0085d81235d8e1c06798dc341a/include/grpc%2B%2B/impl/codegen/status_code_enum.h\n *\n * Important! The names of these identifiers matter because the string forms\n * are used for reverse lookups from the webchannel stream. Do NOT change the\n * names of these identifiers or change this into a const enum.\n */\nvar dt, wt;\n\n/**\n * Converts an HTTP Status Code to the equivalent error code.\n *\n * @param status - An HTTP Status Code, like 200, 404, 503, etc.\n * @returns The equivalent Code. Unknown status codes are mapped to\n *     Code.UNKNOWN.\n */\nfunction mt(t) {\n    if (void 0 === t) return _(\"RPC_ERROR\", \"HTTP error has no status\"), R;\n    // The canonical error codes for Google APIs [1] specify mapping onto HTTP\n    // status codes but the mapping is not bijective. In each case of ambiguity\n    // this function chooses a primary error.\n    \n    // [1]\n    // https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto\n        switch (t) {\n      case 200:\n        // OK\n        return T;\n\n      case 400:\n        // Bad Request\n        return S;\n\n        // Other possibilities based on the forward mapping\n        // return Code.INVALID_ARGUMENT;\n        // return Code.OUT_OF_RANGE;\n              case 401:\n        // Unauthorized\n        return x;\n\n      case 403:\n        // Forbidden\n        return $;\n\n      case 404:\n        // Not Found\n        return N;\n\n      case 409:\n        // Conflict\n        return q;\n\n        // Other possibilities:\n        // return Code.ALREADY_EXISTS;\n              case 416:\n        // Range Not Satisfiable\n        return O;\n\n      case 429:\n        // Too Many Requests\n        return F;\n\n      case 499:\n        // Client Closed Request\n        return A;\n\n      case 500:\n        // Internal Server Error\n        return R;\n\n        // Other possibilities:\n        // return Code.INTERNAL;\n        // return Code.DATA_LOSS;\n              case 501:\n        // Unimplemented\n        return k;\n\n      case 503:\n        // Service Unavailable\n        return L;\n\n      case 504:\n        // Gateway Timeout\n        return V;\n\n      default:\n        return t >= 200 && t < 300 ? T : t >= 400 && t < 500 ? S : t >= 500 && t < 600 ? C : R;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A Rest-based connection that relies on the native HTTP stack\n * (e.g. `fetch` or a polyfill).\n */ (wt = dt || (dt = {}))[wt.OK = 0] = \"OK\", wt[wt.CANCELLED = 1] = \"CANCELLED\", \nwt[wt.UNKNOWN = 2] = \"UNKNOWN\", wt[wt.INVALID_ARGUMENT = 3] = \"INVALID_ARGUMENT\", \nwt[wt.DEADLINE_EXCEEDED = 4] = \"DEADLINE_EXCEEDED\", wt[wt.NOT_FOUND = 5] = \"NOT_FOUND\", \nwt[wt.ALREADY_EXISTS = 6] = \"ALREADY_EXISTS\", wt[wt.PERMISSION_DENIED = 7] = \"PERMISSION_DENIED\", \nwt[wt.UNAUTHENTICATED = 16] = \"UNAUTHENTICATED\", wt[wt.RESOURCE_EXHAUSTED = 8] = \"RESOURCE_EXHAUSTED\", \nwt[wt.FAILED_PRECONDITION = 9] = \"FAILED_PRECONDITION\", wt[wt.ABORTED = 10] = \"ABORTED\", \nwt[wt.OUT_OF_RANGE = 11] = \"OUT_OF_RANGE\", wt[wt.UNIMPLEMENTED = 12] = \"UNIMPLEMENTED\", \nwt[wt.INTERNAL = 13] = \"INTERNAL\", wt[wt.UNAVAILABLE = 14] = \"UNAVAILABLE\", wt[wt.DATA_LOSS = 15] = \"DATA_LOSS\";\n\nclass pt extends \n/**\n * Base class for all Rest-based connections to the backend (WebChannel and\n * HTTP).\n */\nclass {\n    constructor(t) {\n        this.databaseInfo = t, this.databaseId = t.databaseId;\n        const e = t.ssl ? \"https\" : \"http\";\n        this.p = e + \"://\" + t.host, this.g = \"projects/\" + this.databaseId.projectId + \"/databases/\" + this.databaseId.database + \"/documents\";\n    }\n    get v() {\n        // Both `invokeRPC()` and `invokeStreamingRPC()` use their `path` arguments to determine\n        // where to run the query, and expect the `request` to NOT specify the \"path\".\n        return !1;\n    }\n    I(t, e, n, r, s) {\n        const i = this.T(t, e);\n        y(\"RestConnection\", \"Sending: \", i, n);\n        const o = {};\n        return this.A(o, r, s), this.R(t, i, o, n).then((t => (y(\"RestConnection\", \"Received: \", t), \n        t)), (e => {\n            throw g(\"RestConnection\", `${t} failed with error: `, e, \"url: \", i, \"request:\", n), \n            e;\n        }));\n    }\n    P(t, e, n, r, s, i) {\n        // The REST API automatically aggregates all of the streamed results, so we\n        // can just use the normal invoke() method.\n        return this.I(t, e, n, r, s);\n    }\n    /**\n     * Modifies the headers for a request, adding any authorization token if\n     * present and any additional headers for the request.\n     */    A(t, e, n) {\n        t[\"X-Goog-Api-Client\"] = \"gl-js/ fire/\" + w, \n        // Content-Type: text/plain will avoid preflight requests which might\n        // mess with CORS and redirects by proxies. If we add custom headers\n        // we will need to change this code to potentially use the $httpOverwrite\n        // parameter supported by ESF to avoid triggering preflight requests.\n        t[\"Content-Type\"] = \"text/plain\", this.databaseInfo.appId && (t[\"X-Firebase-GMPID\"] = this.databaseInfo.appId), \n        e && e.headers.forEach(((e, n) => t[n] = e)), n && n.headers.forEach(((e, n) => t[n] = e));\n    }\n    T(t, e) {\n        const n = ft[t];\n        return `${this.p}/v1/${e}:${n}`;\n    }\n} {\n    /**\n     * @param databaseInfo - The connection info.\n     * @param fetchImpl - `fetch` or a Polyfill that implements the fetch API.\n     */\n    constructor(t, e) {\n        super(t), this.V = e;\n    }\n    N(t, e) {\n        throw new Error(\"Not supported by FetchConnection\");\n    }\n    async R(t, e, n, r) {\n        const s = JSON.stringify(r);\n        let i;\n        try {\n            i = await this.V(e, {\n                method: \"POST\",\n                headers: n,\n                body: s\n            });\n        } catch (t) {\n            throw new U(mt(t.status), \"Request failed with error: \" + t.statusText);\n        }\n        if (!i.ok) throw new U(mt(i.status), \"Request failed with error: \" + i.statusText);\n        return i.json();\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Initializes the HTTP connection for the REST API. */\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Generates `nBytes` of random bytes.\n *\n * If `nBytes < 0` , an error will be thrown.\n */\nfunction yt(t) {\n    // Polyfills for IE and WebWorker by using `self` and `msCrypto` when `crypto` is not available.\n    const e = \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    \"undefined\" != typeof self && (self.crypto || self.msCrypto), n = new Uint8Array(t);\n    if (e && \"function\" == typeof e.getRandomValues) e.getRandomValues(n); else \n    // Falls back to Math.random\n    for (let e = 0; e < t; e++) n[e] = Math.floor(256 * Math.random());\n    return n;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class _t {\n    static D() {\n        // Alphanumeric characters\n        const t = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\", e = Math.floor(256 / t.length) * t.length;\n        // The largest byte value that is a multiple of `char.length`.\n                let n = \"\";\n        for (;n.length < 20; ) {\n            const r = yt(40);\n            for (let s = 0; s < r.length; ++s) \n            // Only accept values that are [0, maxMultiple), this ensures they can\n            // be evenly mapped to indices of `chars` via a modulo operation.\n            n.length < 20 && r[s] < e && (n += t.charAt(r[s] % t.length));\n        }\n        return n;\n    }\n}\n\nfunction gt(t, e) {\n    return t < e ? -1 : t > e ? 1 : 0;\n}\n\n/** Helper to compare arrays using isEqual(). */ function vt(t, e, n) {\n    return t.length === e.length && t.every(((t, r) => n(t, e[r])));\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// The earliest date supported by Firestore timestamps (0001-01-01T00:00:00Z).\n/**\n * A `Timestamp` represents a point in time independent of any time zone or\n * calendar, represented as seconds and fractions of seconds at nanosecond\n * resolution in UTC Epoch time.\n *\n * It is encoded using the Proleptic Gregorian Calendar which extends the\n * Gregorian calendar backwards to year one. It is encoded assuming all minutes\n * are 60 seconds long, i.e. leap seconds are \"smeared\" so that no leap second\n * table is needed for interpretation. Range is from 0001-01-01T00:00:00Z to\n * 9999-12-31T23:59:59.999999999Z.\n *\n * For examples and further specifications, refer to the\n * {@link https://github.com/google/protobuf/blob/master/src/google/protobuf/timestamp.proto | Timestamp definition}.\n */\nclass bt {\n    /**\n     * Creates a new timestamp.\n     *\n     * @param seconds - The number of seconds of UTC time since Unix epoch\n     *     1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n     *     9999-12-31T23:59:59Z inclusive.\n     * @param nanoseconds - The non-negative fractions of a second at nanosecond\n     *     resolution. Negative second values with fractions must still have\n     *     non-negative nanoseconds values that count forward in time. Must be\n     *     from 0 to 999,999,999 inclusive.\n     */\n    constructor(\n    /**\n     * The number of seconds of UTC time since Unix epoch 1970-01-01T00:00:00Z.\n     */\n    t, \n    /**\n     * The fractions of a second at nanosecond resolution.*\n     */\n    e) {\n        if (this.seconds = t, this.nanoseconds = e, e < 0) throw new U(P, \"Timestamp nanoseconds out of range: \" + e);\n        if (e >= 1e9) throw new U(P, \"Timestamp nanoseconds out of range: \" + e);\n        if (t < -62135596800) throw new U(P, \"Timestamp seconds out of range: \" + t);\n        // This will break in the year 10,000.\n                if (t >= 253402300800) throw new U(P, \"Timestamp seconds out of range: \" + t);\n    }\n    /**\n     * Creates a new timestamp with the current date, with millisecond precision.\n     *\n     * @returns a new timestamp representing the current date.\n     */    static now() {\n        return bt.fromMillis(Date.now());\n    }\n    /**\n     * Creates a new timestamp from the given date.\n     *\n     * @param date - The date to initialize the `Timestamp` from.\n     * @returns A new `Timestamp` representing the same point in time as the given\n     *     date.\n     */    static fromDate(t) {\n        return bt.fromMillis(t.getTime());\n    }\n    /**\n     * Creates a new timestamp from the given number of milliseconds.\n     *\n     * @param milliseconds - Number of milliseconds since Unix epoch\n     *     1970-01-01T00:00:00Z.\n     * @returns A new `Timestamp` representing the same point in time as the given\n     *     number of milliseconds.\n     */    static fromMillis(t) {\n        const e = Math.floor(t / 1e3), n = Math.floor(1e6 * (t - 1e3 * e));\n        return new bt(e, n);\n    }\n    /**\n     * Converts a `Timestamp` to a JavaScript `Date` object. This conversion\n     * causes a loss of precision since `Date` objects only support millisecond\n     * precision.\n     *\n     * @returns JavaScript `Date` object representing the same point in time as\n     *     this `Timestamp`, with millisecond precision.\n     */    toDate() {\n        return new Date(this.toMillis());\n    }\n    /**\n     * Converts a `Timestamp` to a numeric timestamp (in milliseconds since\n     * epoch). This operation causes a loss of precision.\n     *\n     * @returns The point in time corresponding to this timestamp, represented as\n     *     the number of milliseconds since Unix epoch 1970-01-01T00:00:00Z.\n     */    toMillis() {\n        return 1e3 * this.seconds + this.nanoseconds / 1e6;\n    }\n    _compareTo(t) {\n        return this.seconds === t.seconds ? gt(this.nanoseconds, t.nanoseconds) : gt(this.seconds, t.seconds);\n    }\n    /**\n     * Returns true if this `Timestamp` is equal to the provided one.\n     *\n     * @param other - The `Timestamp` to compare against.\n     * @returns true if this `Timestamp` is equal to the provided one.\n     */    isEqual(t) {\n        return t.seconds === this.seconds && t.nanoseconds === this.nanoseconds;\n    }\n    /** Returns a textual representation of this `Timestamp`. */    toString() {\n        return \"Timestamp(seconds=\" + this.seconds + \", nanoseconds=\" + this.nanoseconds + \")\";\n    }\n    /** Returns a JSON-serializable representation of this `Timestamp`. */    toJSON() {\n        return {\n            seconds: this.seconds,\n            nanoseconds: this.nanoseconds\n        };\n    }\n    /**\n     * Converts this object to a primitive string, which allows `Timestamp` objects\n     * to be compared using the `>`, `<=`, `>=` and `>` operators.\n     */    valueOf() {\n        // This method returns a string of the form <seconds>.<nanoseconds> where\n        // <seconds> is translated to have a non-negative value and both <seconds>\n        // and <nanoseconds> are left-padded with zeroes to be a consistent length.\n        // Strings with this format then have a lexiographical ordering that matches\n        // the expected ordering. The <seconds> translation is done to avoid having\n        // a leading negative sign (i.e. a leading '-' character) in its string\n        // representation, which would affect its lexiographical ordering.\n        const t = this.seconds - -62135596800;\n        // Note: Up to 12 decimal digits are required to represent all valid\n        // 'seconds' values.\n                return String(t).padStart(12, \"0\") + \".\" + String(this.nanoseconds).padStart(9, \"0\");\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A version of a document in Firestore. This corresponds to the version\n * timestamp, such as update_time or read_time.\n */ class Et {\n    constructor(t) {\n        this.timestamp = t;\n    }\n    static fromTimestamp(t) {\n        return new Et(t);\n    }\n    static min() {\n        return new Et(new bt(0, 0));\n    }\n    static max() {\n        return new Et(new bt(253402300799, 999999999));\n    }\n    compareTo(t) {\n        return this.timestamp._compareTo(t.timestamp);\n    }\n    isEqual(t) {\n        return this.timestamp.isEqual(t.timestamp);\n    }\n    /** Returns a number representation of the version for use in spec tests. */    toMicroseconds() {\n        // Convert to microseconds.\n        return 1e6 * this.timestamp.seconds + this.timestamp.nanoseconds / 1e3;\n    }\n    toString() {\n        return \"SnapshotVersion(\" + this.timestamp.toString() + \")\";\n    }\n    toTimestamp() {\n        return this.timestamp;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ function It(t) {\n    let e = 0;\n    for (const n in t) Object.prototype.hasOwnProperty.call(t, n) && e++;\n    return e;\n}\n\nfunction Tt(t, e) {\n    for (const n in t) Object.prototype.hasOwnProperty.call(t, n) && e(n, t[n]);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// An immutable sorted map implementation, based on a Left-leaning Red-Black\n// tree.\nclass At {\n    constructor(t, e) {\n        this.comparator = t, this.root = e || Pt.EMPTY;\n    }\n    // Returns a copy of the map, with the specified key/value added or replaced.\n    insert(t, e) {\n        return new At(this.comparator, this.root.insert(t, e, this.comparator).copy(null, null, Pt.BLACK, null, null));\n    }\n    // Returns a copy of the map, with the specified key removed.\n    remove(t) {\n        return new At(this.comparator, this.root.remove(t, this.comparator).copy(null, null, Pt.BLACK, null, null));\n    }\n    // Returns the value of the node with the given key, or null.\n    get(t) {\n        let e = this.root;\n        for (;!e.isEmpty(); ) {\n            const n = this.comparator(t, e.key);\n            if (0 === n) return e.value;\n            n < 0 ? e = e.left : n > 0 && (e = e.right);\n        }\n        return null;\n    }\n    // Returns the index of the element in this sorted map, or -1 if it doesn't\n    // exist.\n    indexOf(t) {\n        // Number of nodes that were pruned when descending right\n        let e = 0, n = this.root;\n        for (;!n.isEmpty(); ) {\n            const r = this.comparator(t, n.key);\n            if (0 === r) return e + n.left.size;\n            r < 0 ? n = n.left : (\n            // Count all nodes left of the node plus the node itself\n            e += n.left.size + 1, n = n.right);\n        }\n        // Node not found\n                return -1;\n    }\n    isEmpty() {\n        return this.root.isEmpty();\n    }\n    // Returns the total number of nodes in the map.\n    get size() {\n        return this.root.size;\n    }\n    // Returns the minimum key in the map.\n    minKey() {\n        return this.root.minKey();\n    }\n    // Returns the maximum key in the map.\n    maxKey() {\n        return this.root.maxKey();\n    }\n    // Traverses the map in key order and calls the specified action function\n    // for each key/value pair. If action returns true, traversal is aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    inorderTraversal(t) {\n        return this.root.inorderTraversal(t);\n    }\n    forEach(t) {\n        this.inorderTraversal(((e, n) => (t(e, n), !1)));\n    }\n    toString() {\n        const t = [];\n        return this.inorderTraversal(((e, n) => (t.push(`${e}:${n}`), !1))), `{${t.join(\", \")}}`;\n    }\n    // Traverses the map in reverse key order and calls the specified action\n    // function for each key/value pair. If action returns true, traversal is\n    // aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    reverseTraversal(t) {\n        return this.root.reverseTraversal(t);\n    }\n    // Returns an iterator over the SortedMap.\n    getIterator() {\n        return new Rt(this.root, null, this.comparator, !1);\n    }\n    getIteratorFrom(t) {\n        return new Rt(this.root, t, this.comparator, !1);\n    }\n    getReverseIterator() {\n        return new Rt(this.root, null, this.comparator, !0);\n    }\n    getReverseIteratorFrom(t) {\n        return new Rt(this.root, t, this.comparator, !0);\n    }\n}\n\n // end SortedMap\n// An iterator over an LLRBNode.\nclass Rt {\n    constructor(t, e, n, r) {\n        this.isReverse = r, this.nodeStack = [];\n        let s = 1;\n        for (;!t.isEmpty(); ) if (s = e ? n(t.key, e) : 1, \n        // flip the comparison if we're going in reverse\n        e && r && (s *= -1), s < 0) \n        // This node is less than our start key. ignore it\n        t = this.isReverse ? t.left : t.right; else {\n            if (0 === s) {\n                // This node is exactly equal to our start key. Push it on the stack,\n                // but stop iterating;\n                this.nodeStack.push(t);\n                break;\n            }\n            // This node is greater than our start key, add it to the stack and move\n            // to the next one\n            this.nodeStack.push(t), t = this.isReverse ? t.right : t.left;\n        }\n    }\n    getNext() {\n        let t = this.nodeStack.pop();\n        const e = {\n            key: t.key,\n            value: t.value\n        };\n        if (this.isReverse) for (t = t.left; !t.isEmpty(); ) this.nodeStack.push(t), t = t.right; else for (t = t.right; !t.isEmpty(); ) this.nodeStack.push(t), \n        t = t.left;\n        return e;\n    }\n    hasNext() {\n        return this.nodeStack.length > 0;\n    }\n    peek() {\n        if (0 === this.nodeStack.length) return null;\n        const t = this.nodeStack[this.nodeStack.length - 1];\n        return {\n            key: t.key,\n            value: t.value\n        };\n    }\n}\n\n // end SortedMapIterator\n// Represents a node in a Left-leaning Red-Black tree.\nclass Pt {\n    constructor(t, e, n, r, s) {\n        this.key = t, this.value = e, this.color = null != n ? n : Pt.RED, this.left = null != r ? r : Pt.EMPTY, \n        this.right = null != s ? s : Pt.EMPTY, this.size = this.left.size + 1 + this.right.size;\n    }\n    // Returns a copy of the current node, optionally replacing pieces of it.\n    copy(t, e, n, r, s) {\n        return new Pt(null != t ? t : this.key, null != e ? e : this.value, null != n ? n : this.color, null != r ? r : this.left, null != s ? s : this.right);\n    }\n    isEmpty() {\n        return !1;\n    }\n    // Traverses the tree in key order and calls the specified action function\n    // for each node. If action returns true, traversal is aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    inorderTraversal(t) {\n        return this.left.inorderTraversal(t) || t(this.key, this.value) || this.right.inorderTraversal(t);\n    }\n    // Traverses the tree in reverse key order and calls the specified action\n    // function for each node. If action returns true, traversal is aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    reverseTraversal(t) {\n        return this.right.reverseTraversal(t) || t(this.key, this.value) || this.left.reverseTraversal(t);\n    }\n    // Returns the minimum node in the tree.\n    min() {\n        return this.left.isEmpty() ? this : this.left.min();\n    }\n    // Returns the maximum key in the tree.\n    minKey() {\n        return this.min().key;\n    }\n    // Returns the maximum key in the tree.\n    maxKey() {\n        return this.right.isEmpty() ? this.key : this.right.maxKey();\n    }\n    // Returns new tree, with the key/value added.\n    insert(t, e, n) {\n        let r = this;\n        const s = n(t, r.key);\n        return r = s < 0 ? r.copy(null, null, null, r.left.insert(t, e, n), null) : 0 === s ? r.copy(null, e, null, null, null) : r.copy(null, null, null, null, r.right.insert(t, e, n)), \n        r.fixUp();\n    }\n    removeMin() {\n        if (this.left.isEmpty()) return Pt.EMPTY;\n        let t = this;\n        return t.left.isRed() || t.left.left.isRed() || (t = t.moveRedLeft()), t = t.copy(null, null, null, t.left.removeMin(), null), \n        t.fixUp();\n    }\n    // Returns new tree, with the specified item removed.\n    remove(t, e) {\n        let n, r = this;\n        if (e(t, r.key) < 0) r.left.isEmpty() || r.left.isRed() || r.left.left.isRed() || (r = r.moveRedLeft()), \n        r = r.copy(null, null, null, r.left.remove(t, e), null); else {\n            if (r.left.isRed() && (r = r.rotateRight()), r.right.isEmpty() || r.right.isRed() || r.right.left.isRed() || (r = r.moveRedRight()), \n            0 === e(t, r.key)) {\n                if (r.right.isEmpty()) return Pt.EMPTY;\n                n = r.right.min(), r = r.copy(n.key, n.value, null, null, r.right.removeMin());\n            }\n            r = r.copy(null, null, null, null, r.right.remove(t, e));\n        }\n        return r.fixUp();\n    }\n    isRed() {\n        return this.color;\n    }\n    // Returns new tree after performing any needed rotations.\n    fixUp() {\n        let t = this;\n        return t.right.isRed() && !t.left.isRed() && (t = t.rotateLeft()), t.left.isRed() && t.left.left.isRed() && (t = t.rotateRight()), \n        t.left.isRed() && t.right.isRed() && (t = t.colorFlip()), t;\n    }\n    moveRedLeft() {\n        let t = this.colorFlip();\n        return t.right.left.isRed() && (t = t.copy(null, null, null, null, t.right.rotateRight()), \n        t = t.rotateLeft(), t = t.colorFlip()), t;\n    }\n    moveRedRight() {\n        let t = this.colorFlip();\n        return t.left.left.isRed() && (t = t.rotateRight(), t = t.colorFlip()), t;\n    }\n    rotateLeft() {\n        const t = this.copy(null, null, Pt.RED, null, this.right.left);\n        return this.right.copy(null, null, this.color, t, null);\n    }\n    rotateRight() {\n        const t = this.copy(null, null, Pt.RED, this.left.right, null);\n        return this.left.copy(null, null, this.color, null, t);\n    }\n    colorFlip() {\n        const t = this.left.copy(null, null, !this.left.color, null, null), e = this.right.copy(null, null, !this.right.color, null, null);\n        return this.copy(null, null, !this.color, t, e);\n    }\n    // For testing.\n    checkMaxDepth() {\n        const t = this.check();\n        return Math.pow(2, t) <= this.size + 1;\n    }\n    // In a balanced RB tree, the black-depth (number of black nodes) from root to\n    // leaves is equal on both sides.  This function verifies that or asserts.\n    check() {\n        if (this.isRed() && this.left.isRed()) throw b();\n        if (this.right.isRed()) throw b();\n        const t = this.left.check();\n        if (t !== this.right.check()) throw b();\n        return t + (this.isRed() ? 0 : 1);\n    }\n}\n\n // end LLRBNode\n// Empty node is shared between all LLRB trees.\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nPt.EMPTY = null, Pt.RED = !0, Pt.BLACK = !1;\n\n// end LLRBEmptyNode\nPt.EMPTY = new \n// Represents an empty node (a leaf node in the Red-Black Tree).\nclass {\n    constructor() {\n        this.size = 0;\n    }\n    get key() {\n        throw b();\n    }\n    get value() {\n        throw b();\n    }\n    get color() {\n        throw b();\n    }\n    get left() {\n        throw b();\n    }\n    get right() {\n        throw b();\n    }\n    // Returns a copy of the current node.\n    copy(t, e, n, r, s) {\n        return this;\n    }\n    // Returns a copy of the tree, with the specified key/value added.\n    insert(t, e, n) {\n        return new Pt(t, e);\n    }\n    // Returns a copy of the tree, with the specified key removed.\n    remove(t, e) {\n        return this;\n    }\n    isEmpty() {\n        return !0;\n    }\n    inorderTraversal(t) {\n        return !1;\n    }\n    reverseTraversal(t) {\n        return !1;\n    }\n    minKey() {\n        return null;\n    }\n    maxKey() {\n        return null;\n    }\n    isRed() {\n        return !1;\n    }\n    // For testing.\n    checkMaxDepth() {\n        return !0;\n    }\n    check() {\n        return 0;\n    }\n};\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * SortedSet is an immutable (copy-on-write) collection that holds elements\n * in order specified by the provided comparator.\n *\n * NOTE: if provided comparator returns 0 for two elements, we consider them to\n * be equal!\n */\nclass Vt {\n    constructor(t) {\n        this.comparator = t, this.data = new At(this.comparator);\n    }\n    has(t) {\n        return null !== this.data.get(t);\n    }\n    first() {\n        return this.data.minKey();\n    }\n    last() {\n        return this.data.maxKey();\n    }\n    get size() {\n        return this.data.size;\n    }\n    indexOf(t) {\n        return this.data.indexOf(t);\n    }\n    /** Iterates elements in order defined by \"comparator\" */    forEach(t) {\n        this.data.inorderTraversal(((e, n) => (t(e), !1)));\n    }\n    /** Iterates over `elem`s such that: range[0] &lt;= elem &lt; range[1]. */    forEachInRange(t, e) {\n        const n = this.data.getIteratorFrom(t[0]);\n        for (;n.hasNext(); ) {\n            const r = n.getNext();\n            if (this.comparator(r.key, t[1]) >= 0) return;\n            e(r.key);\n        }\n    }\n    /**\n     * Iterates over `elem`s such that: start &lt;= elem until false is returned.\n     */    forEachWhile(t, e) {\n        let n;\n        for (n = void 0 !== e ? this.data.getIteratorFrom(e) : this.data.getIterator(); n.hasNext(); ) {\n            if (!t(n.getNext().key)) return;\n        }\n    }\n    /** Finds the least element greater than or equal to `elem`. */    firstAfterOrEqual(t) {\n        const e = this.data.getIteratorFrom(t);\n        return e.hasNext() ? e.getNext().key : null;\n    }\n    getIterator() {\n        return new Nt(this.data.getIterator());\n    }\n    getIteratorFrom(t) {\n        return new Nt(this.data.getIteratorFrom(t));\n    }\n    /** Inserts or updates an element */    add(t) {\n        return this.copy(this.data.remove(t).insert(t, !0));\n    }\n    /** Deletes an element */    delete(t) {\n        return this.has(t) ? this.copy(this.data.remove(t)) : this;\n    }\n    isEmpty() {\n        return this.data.isEmpty();\n    }\n    unionWith(t) {\n        let e = this;\n        // Make sure `result` always refers to the larger one of the two sets.\n                return e.size < t.size && (e = t, t = this), t.forEach((t => {\n            e = e.add(t);\n        })), e;\n    }\n    isEqual(t) {\n        if (!(t instanceof Vt)) return !1;\n        if (this.size !== t.size) return !1;\n        const e = this.data.getIterator(), n = t.data.getIterator();\n        for (;e.hasNext(); ) {\n            const t = e.getNext().key, r = n.getNext().key;\n            if (0 !== this.comparator(t, r)) return !1;\n        }\n        return !0;\n    }\n    toArray() {\n        const t = [];\n        return this.forEach((e => {\n            t.push(e);\n        })), t;\n    }\n    toString() {\n        const t = [];\n        return this.forEach((e => t.push(e))), \"SortedSet(\" + t.toString() + \")\";\n    }\n    copy(t) {\n        const e = new Vt(this.comparator);\n        return e.data = t, e;\n    }\n}\n\nclass Nt {\n    constructor(t) {\n        this.iter = t;\n    }\n    getNext() {\n        return this.iter.getNext().key;\n    }\n    hasNext() {\n        return this.iter.hasNext();\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Provides a set of fields that can be used to partially patch a document.\n * FieldMask is used in conjunction with ObjectValue.\n * Examples:\n *   foo - Overwrites foo entirely with the provided value. If foo is not\n *         present in the companion ObjectValue, the field is deleted.\n *   foo.bar - Overwrites only the field bar of the object foo.\n *             If foo is not an object, foo is replaced with an object\n *             containing foo\n */ class Dt {\n    constructor(t) {\n        this.fields = t, \n        // TODO(dimond): validation of FieldMask\n        // Sort the field mask to support `FieldMask.isEqual()` and assert below.\n        t.sort(nt.comparator);\n    }\n    static empty() {\n        return new Dt([]);\n    }\n    /**\n     * Returns a new FieldMask object that is the result of adding all the given\n     * fields paths to this field mask.\n     */    unionWith(t) {\n        let e = new Vt(nt.comparator);\n        for (const t of this.fields) e = e.add(t);\n        for (const n of t) e = e.add(n);\n        return new Dt(e.toArray());\n    }\n    /**\n     * Verifies that `fieldPath` is included by at least one field in this field\n     * mask.\n     *\n     * This is an O(n) operation, where `n` is the size of the field mask.\n     */    covers(t) {\n        for (const e of this.fields) if (e.isPrefixOf(t)) return !0;\n        return !1;\n    }\n    isEqual(t) {\n        return vt(this.fields, t.fields, ((t, e) => t.isEqual(e)));\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Converts a Base64 encoded string to a binary string. */\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Immutable class that represents a \"proto\" byte string.\n *\n * Proto byte strings can either be Base64-encoded strings or Uint8Arrays when\n * sent on the wire. This class abstracts away this differentiation by holding\n * the proto byte string in a common class that must be converted into a string\n * before being sent as a proto.\n * @internal\n */\nclass $t {\n    constructor(t) {\n        this.binaryString = t;\n    }\n    static fromBase64String(t) {\n        const e = atob(t);\n        return new $t(e);\n    }\n    static fromUint8Array(t) {\n        // TODO(indexing); Remove the copy of the byte string here as this method\n        // is frequently called during indexing.\n        const e = \n        /**\n * Helper function to convert an Uint8array to a binary string.\n */\n        function(t) {\n            let e = \"\";\n            for (let n = 0; n < t.length; ++n) e += String.fromCharCode(t[n]);\n            return e;\n        }\n        /**\n * Helper function to convert a binary string to an Uint8Array.\n */ (t);\n        return new $t(e);\n    }\n    [Symbol.iterator]() {\n        let t = 0;\n        return {\n            next: () => t < this.binaryString.length ? {\n                value: this.binaryString.charCodeAt(t++),\n                done: !1\n            } : {\n                value: void 0,\n                done: !0\n            }\n        };\n    }\n    toBase64() {\n        return t = this.binaryString, btoa(t);\n        /** Converts a binary string to a Base64 encoded string. */\n        var t;\n    }\n    toUint8Array() {\n        return function(t) {\n            const e = new Uint8Array(t.length);\n            for (let n = 0; n < t.length; n++) e[n] = t.charCodeAt(n);\n            return e;\n        }\n        /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n        // A RegExp matching ISO 8601 UTC timestamps with optional fraction.\n        (this.binaryString);\n    }\n    approximateByteSize() {\n        return 2 * this.binaryString.length;\n    }\n    compareTo(t) {\n        return gt(this.binaryString, t.binaryString);\n    }\n    isEqual(t) {\n        return this.binaryString === t.binaryString;\n    }\n}\n\n$t.EMPTY_BYTE_STRING = new $t(\"\");\n\nconst xt = new RegExp(/^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(?:\\.(\\d+))?Z$/);\n\n/**\n * Converts the possible Proto values for a timestamp value into a \"seconds and\n * nanos\" representation.\n */ function Ft(t) {\n    // The json interface (for the browser) will return an iso timestamp string,\n    // while the proto js library (for node) will return a\n    // google.protobuf.Timestamp instance.\n    if (E(!!t), \"string\" == typeof t) {\n        // The date string can have higher precision (nanos) than the Date class\n        // (millis), so we do some custom parsing here.\n        // Parse the nanos right out of the string.\n        let e = 0;\n        const n = xt.exec(t);\n        if (E(!!n), n[1]) {\n            // Pad the fraction out to 9 digits (nanos).\n            let t = n[1];\n            t = (t + \"000000000\").substr(0, 9), e = Number(t);\n        }\n        // Parse the date to get the seconds.\n                const r = new Date(t);\n        return {\n            seconds: Math.floor(r.getTime() / 1e3),\n            nanos: e\n        };\n    }\n    return {\n        seconds: St(t.seconds),\n        nanos: St(t.nanos)\n    };\n}\n\n/**\n * Converts the possible Proto types for numbers into a JavaScript number.\n * Returns 0 if the value is not numeric.\n */ function St(t) {\n    // TODO(bjornick): Handle int64 greater than 53 bits.\n    return \"number\" == typeof t ? t : \"string\" == typeof t ? Number(t) : 0;\n}\n\n/** Converts the possible Proto types for Blobs into a ByteString. */ function qt(t) {\n    return \"string\" == typeof t ? $t.fromBase64String(t) : $t.fromUint8Array(t);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents a locally-applied ServerTimestamp.\n *\n * Server Timestamps are backed by MapValues that contain an internal field\n * `__type__` with a value of `server_timestamp`. The previous value and local\n * write time are stored in its `__previous_value__` and `__local_write_time__`\n * fields respectively.\n *\n * Notes:\n * - ServerTimestampValue instances are created as the result of applying a\n *   transform. They can only exist in the local view of a document. Therefore\n *   they do not need to be parsed or serialized.\n * - When evaluated locally (e.g. for snapshot.data()), they by default\n *   evaluate to `null`. This behavior can be configured by passing custom\n *   FieldValueOptions to value().\n * - With respect to other ServerTimestampValues, they sort by their\n *   localWriteTime.\n */ function Ot(t) {\n    var e, n;\n    return \"server_timestamp\" === (null === (n = ((null === (e = null == t ? void 0 : t.mapValue) || void 0 === e ? void 0 : e.fields) || {}).__type__) || void 0 === n ? void 0 : n.stringValue);\n}\n\n/**\n * Returns the value of the field before this ServerTimestamp was set.\n *\n * Preserving the previous values allows the user to display the last resoled\n * value until the backend responds with the timestamp.\n */ function kt(t) {\n    const e = t.mapValue.fields.__previous_value__;\n    return Ot(e) ? kt(e) : e;\n}\n\n/**\n * Returns the local time at which this timestamp was first set.\n */ function Ct(t) {\n    const e = Ft(t.mapValue.fields.__local_write_time__.timestampValue);\n    return new bt(e.seconds, e.nanos);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const Lt = {\n    fields: {\n        __type__: {\n            stringValue: \"__max__\"\n        }\n    }\n};\n\n/** Extracts the backend's type order for the provided value. */\nfunction Mt(t) {\n    return \"nullValue\" in t ? 0 /* NullValue */ : \"booleanValue\" in t ? 1 /* BooleanValue */ : \"integerValue\" in t || \"doubleValue\" in t ? 2 /* NumberValue */ : \"timestampValue\" in t ? 3 /* TimestampValue */ : \"stringValue\" in t ? 5 /* StringValue */ : \"bytesValue\" in t ? 6 /* BlobValue */ : \"referenceValue\" in t ? 7 /* RefValue */ : \"geoPointValue\" in t ? 8 /* GeoPointValue */ : \"arrayValue\" in t ? 9 /* ArrayValue */ : \"mapValue\" in t ? Ot(t) ? 4 /* ServerTimestampValue */ : \n    /** Returns true if the Value represents the canonical {@link #MAX_VALUE} . */\n    function(t) {\n        return \"__max__\" === (((t.mapValue || {}).fields || {}).__type__ || {}).stringValue;\n    }\n    /**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n    /**\n * An ObjectValue represents a MapValue in the Firestore Proto and offers the\n * ability to add and remove fields (via the ObjectValueBuilder).\n */ (t) ? 9007199254740991 /* MaxValue */ : 10 /* ObjectValue */ : b();\n}\n\n/** Tests `left` and `right` for equality based on the backend semantics. */ function Ut(t, e) {\n    if (t === e) return !0;\n    const n = Mt(t);\n    if (n !== Mt(e)) return !1;\n    switch (n) {\n      case 0 /* NullValue */ :\n      case 9007199254740991 /* MaxValue */ :\n        return !0;\n\n      case 1 /* BooleanValue */ :\n        return t.booleanValue === e.booleanValue;\n\n      case 4 /* ServerTimestampValue */ :\n        return Ct(t).isEqual(Ct(e));\n\n      case 3 /* TimestampValue */ :\n        return function(t, e) {\n            if (\"string\" == typeof t.timestampValue && \"string\" == typeof e.timestampValue && t.timestampValue.length === e.timestampValue.length) \n            // Use string equality for ISO 8601 timestamps\n            return t.timestampValue === e.timestampValue;\n            const n = Ft(t.timestampValue), r = Ft(e.timestampValue);\n            return n.seconds === r.seconds && n.nanos === r.nanos;\n        }(t, e);\n\n      case 5 /* StringValue */ :\n        return t.stringValue === e.stringValue;\n\n      case 6 /* BlobValue */ :\n        return function(t, e) {\n            return qt(t.bytesValue).isEqual(qt(e.bytesValue));\n        }(t, e);\n\n      case 7 /* RefValue */ :\n        return t.referenceValue === e.referenceValue;\n\n      case 8 /* GeoPointValue */ :\n        return function(t, e) {\n            return St(t.geoPointValue.latitude) === St(e.geoPointValue.latitude) && St(t.geoPointValue.longitude) === St(e.geoPointValue.longitude);\n        }(t, e);\n\n      case 2 /* NumberValue */ :\n        return function(t, e) {\n            if (\"integerValue\" in t && \"integerValue\" in e) return St(t.integerValue) === St(e.integerValue);\n            if (\"doubleValue\" in t && \"doubleValue\" in e) {\n                const n = St(t.doubleValue), r = St(e.doubleValue);\n                return n === r ? lt(n) === lt(r) : isNaN(n) && isNaN(r);\n            }\n            return !1;\n        }(t, e);\n\n      case 9 /* ArrayValue */ :\n        return vt(t.arrayValue.values || [], e.arrayValue.values || [], Ut);\n\n      case 10 /* ObjectValue */ :\n        return function(t, e) {\n            const n = t.mapValue.fields || {}, r = e.mapValue.fields || {};\n            if (It(n) !== It(r)) return !1;\n            for (const t in n) if (n.hasOwnProperty(t) && (void 0 === r[t] || !Ut(n[t], r[t]))) return !1;\n            return !0;\n        }\n        /** Returns true if the ArrayValue contains the specified element. */ (t, e);\n\n      default:\n        return b();\n    }\n}\n\nfunction jt(t, e) {\n    return void 0 !== (t.values || []).find((t => Ut(t, e)));\n}\n\nfunction Bt(t, e) {\n    if (t === e) return 0;\n    const n = Mt(t), r = Mt(e);\n    if (n !== r) return gt(n, r);\n    switch (n) {\n      case 0 /* NullValue */ :\n      case 9007199254740991 /* MaxValue */ :\n        return 0;\n\n      case 1 /* BooleanValue */ :\n        return gt(t.booleanValue, e.booleanValue);\n\n      case 2 /* NumberValue */ :\n        return function(t, e) {\n            const n = St(t.integerValue || t.doubleValue), r = St(e.integerValue || e.doubleValue);\n            return n < r ? -1 : n > r ? 1 : n === r ? 0 : \n            // one or both are NaN.\n            isNaN(n) ? isNaN(r) ? 0 : -1 : 1;\n        }(t, e);\n\n      case 3 /* TimestampValue */ :\n        return Qt(t.timestampValue, e.timestampValue);\n\n      case 4 /* ServerTimestampValue */ :\n        return Qt(Ct(t), Ct(e));\n\n      case 5 /* StringValue */ :\n        return gt(t.stringValue, e.stringValue);\n\n      case 6 /* BlobValue */ :\n        return function(t, e) {\n            const n = qt(t), r = qt(e);\n            return n.compareTo(r);\n        }(t.bytesValue, e.bytesValue);\n\n      case 7 /* RefValue */ :\n        return function(t, e) {\n            const n = t.split(\"/\"), r = e.split(\"/\");\n            for (let t = 0; t < n.length && t < r.length; t++) {\n                const e = gt(n[t], r[t]);\n                if (0 !== e) return e;\n            }\n            return gt(n.length, r.length);\n        }(t.referenceValue, e.referenceValue);\n\n      case 8 /* GeoPointValue */ :\n        return function(t, e) {\n            const n = gt(St(t.latitude), St(e.latitude));\n            if (0 !== n) return n;\n            return gt(St(t.longitude), St(e.longitude));\n        }(t.geoPointValue, e.geoPointValue);\n\n      case 9 /* ArrayValue */ :\n        return function(t, e) {\n            const n = t.values || [], r = e.values || [];\n            for (let t = 0; t < n.length && t < r.length; ++t) {\n                const e = Bt(n[t], r[t]);\n                if (e) return e;\n            }\n            return gt(n.length, r.length);\n        }(t.arrayValue, e.arrayValue);\n\n      case 10 /* ObjectValue */ :\n        return function(t, e) {\n            if (t === Lt && e === Lt) return 0;\n            if (t === Lt) return 1;\n            if (e === Lt) return -1;\n            const n = t.fields || {}, r = Object.keys(n), s = e.fields || {}, i = Object.keys(s);\n            // Even though MapValues are likely sorted correctly based on their insertion\n            // order (e.g. when received from the backend), local modifications can bring\n            // elements out of order. We need to re-sort the elements to ensure that\n            // canonical IDs are independent of insertion order.\n            r.sort(), i.sort();\n            for (let t = 0; t < r.length && t < i.length; ++t) {\n                const e = gt(r[t], i[t]);\n                if (0 !== e) return e;\n                const o = Bt(n[r[t]], s[i[t]]);\n                if (0 !== o) return o;\n            }\n            return gt(r.length, i.length);\n        }\n        /** Returns a reference value for the provided database and key. */ (t.mapValue, e.mapValue);\n\n      default:\n        throw b();\n    }\n}\n\nfunction Qt(t, e) {\n    if (\"string\" == typeof t && \"string\" == typeof e && t.length === e.length) return gt(t, e);\n    const n = Ft(t), r = Ft(e), s = gt(n.seconds, r.seconds);\n    return 0 !== s ? s : gt(n.nanos, r.nanos);\n}\n\nfunction zt(t, e) {\n    return {\n        referenceValue: `projects/${t.projectId}/databases/${t.database}/documents/${e.path.canonicalString()}`\n    };\n}\n\n/** Returns true if `value` is an ArrayValue. */ function Gt(t) {\n    return !!t && \"arrayValue\" in t;\n}\n\n/** Returns true if `value` is a NullValue. */ function Wt(t) {\n    return !!t && \"nullValue\" in t;\n}\n\n/** Returns true if `value` is NaN. */ function Kt(t) {\n    return !!t && \"doubleValue\" in t && isNaN(Number(t.doubleValue));\n}\n\n/** Returns true if `value` is a MapValue. */ function Yt(t) {\n    return !!t && \"mapValue\" in t;\n}\n\n/** Creates a deep copy of `source`. */ function Ht(t) {\n    if (t.geoPointValue) return {\n        geoPointValue: Object.assign({}, t.geoPointValue)\n    };\n    if (t.timestampValue && \"object\" == typeof t.timestampValue) return {\n        timestampValue: Object.assign({}, t.timestampValue)\n    };\n    if (t.mapValue) {\n        const e = {\n            mapValue: {\n                fields: {}\n            }\n        };\n        return Tt(t.mapValue.fields, ((t, n) => e.mapValue.fields[t] = Ht(n))), e;\n    }\n    if (t.arrayValue) {\n        const e = {\n            arrayValue: {\n                values: []\n            }\n        };\n        for (let n = 0; n < (t.arrayValue.values || []).length; ++n) e.arrayValue.values[n] = Ht(t.arrayValue.values[n]);\n        return e;\n    }\n    return Object.assign({}, t);\n}\n\nclass Jt {\n    constructor(t) {\n        this.value = t;\n    }\n    static empty() {\n        return new Jt({\n            mapValue: {}\n        });\n    }\n    /**\n     * Returns the value at the given path or null.\n     *\n     * @param path - the path to search\n     * @returns The value at the path or null if the path is not set.\n     */    field(t) {\n        if (t.isEmpty()) return this.value;\n        {\n            let e = this.value;\n            for (let n = 0; n < t.length - 1; ++n) if (e = (e.mapValue.fields || {})[t.get(n)], \n            !Yt(e)) return null;\n            return e = (e.mapValue.fields || {})[t.lastSegment()], e || null;\n        }\n    }\n    /**\n     * Sets the field to the provided value.\n     *\n     * @param path - The field path to set.\n     * @param value - The value to set.\n     */    set(t, e) {\n        this.getFieldsMap(t.popLast())[t.lastSegment()] = Ht(e);\n    }\n    /**\n     * Sets the provided fields to the provided values.\n     *\n     * @param data - A map of fields to values (or null for deletes).\n     */    setAll(t) {\n        let e = nt.emptyPath(), n = {}, r = [];\n        t.forEach(((t, s) => {\n            if (!e.isImmediateParentOf(s)) {\n                // Insert the accumulated changes at this parent location\n                const t = this.getFieldsMap(e);\n                this.applyChanges(t, n, r), n = {}, r = [], e = s.popLast();\n            }\n            t ? n[s.lastSegment()] = Ht(t) : r.push(s.lastSegment());\n        }));\n        const s = this.getFieldsMap(e);\n        this.applyChanges(s, n, r);\n    }\n    /**\n     * Removes the field at the specified path. If there is no field at the\n     * specified path, nothing is changed.\n     *\n     * @param path - The field path to remove.\n     */    delete(t) {\n        const e = this.field(t.popLast());\n        Yt(e) && e.mapValue.fields && delete e.mapValue.fields[t.lastSegment()];\n    }\n    isEqual(t) {\n        return Ut(this.value, t.value);\n    }\n    /**\n     * Returns the map that contains the leaf element of `path`. If the parent\n     * entry does not yet exist, or if it is not a map, a new map will be created.\n     */    getFieldsMap(t) {\n        let e = this.value;\n        e.mapValue.fields || (e.mapValue = {\n            fields: {}\n        });\n        for (let n = 0; n < t.length; ++n) {\n            let r = e.mapValue.fields[t.get(n)];\n            Yt(r) && r.mapValue.fields || (r = {\n                mapValue: {\n                    fields: {}\n                }\n            }, e.mapValue.fields[t.get(n)] = r), e = r;\n        }\n        return e.mapValue.fields;\n    }\n    /**\n     * Modifies `fieldsMap` by adding, replacing or deleting the specified\n     * entries.\n     */    applyChanges(t, e, n) {\n        Tt(e, ((e, n) => t[e] = n));\n        for (const e of n) delete t[e];\n    }\n    clone() {\n        return new Jt(Ht(this.value));\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents a document in Firestore with a key, version, data and whether it\n * has local mutations applied to it.\n *\n * Documents can transition between states via `convertToFoundDocument()`,\n * `convertToNoDocument()` and `convertToUnknownDocument()`. If a document does\n * not transition to one of these states even after all mutations have been\n * applied, `isValidDocument()` returns false and the document should be removed\n * from all views.\n */ class Xt {\n    constructor(t, e, n, r, s, i) {\n        this.key = t, this.documentType = e, this.version = n, this.readTime = r, this.data = s, \n        this.documentState = i;\n    }\n    /**\n     * Creates a document with no known version or data, but which can serve as\n     * base document for mutations.\n     */    static newInvalidDocument(t) {\n        return new Xt(t, 0 /* INVALID */ , Et.min(), Et.min(), Jt.empty(), 0 /* SYNCED */);\n    }\n    /**\n     * Creates a new document that is known to exist with the given data at the\n     * given version.\n     */    static newFoundDocument(t, e, n) {\n        return new Xt(t, 1 /* FOUND_DOCUMENT */ , e, Et.min(), n, 0 /* SYNCED */);\n    }\n    /** Creates a new document that is known to not exist at the given version. */    static newNoDocument(t, e) {\n        return new Xt(t, 2 /* NO_DOCUMENT */ , e, Et.min(), Jt.empty(), 0 /* SYNCED */);\n    }\n    /**\n     * Creates a new document that is known to exist at the given version but\n     * whose data is not known (e.g. a document that was updated without a known\n     * base document).\n     */    static newUnknownDocument(t, e) {\n        return new Xt(t, 3 /* UNKNOWN_DOCUMENT */ , e, Et.min(), Jt.empty(), 2 /* HAS_COMMITTED_MUTATIONS */);\n    }\n    /**\n     * Changes the document type to indicate that it exists and that its version\n     * and data are known.\n     */    convertToFoundDocument(t, e) {\n        return this.version = t, this.documentType = 1 /* FOUND_DOCUMENT */ , this.data = e, \n        this.documentState = 0 /* SYNCED */ , this;\n    }\n    /**\n     * Changes the document type to indicate that it doesn't exist at the given\n     * version.\n     */    convertToNoDocument(t) {\n        return this.version = t, this.documentType = 2 /* NO_DOCUMENT */ , this.data = Jt.empty(), \n        this.documentState = 0 /* SYNCED */ , this;\n    }\n    /**\n     * Changes the document type to indicate that it exists at a given version but\n     * that its data is not known (e.g. a document that was updated without a known\n     * base document).\n     */    convertToUnknownDocument(t) {\n        return this.version = t, this.documentType = 3 /* UNKNOWN_DOCUMENT */ , this.data = Jt.empty(), \n        this.documentState = 2 /* HAS_COMMITTED_MUTATIONS */ , this;\n    }\n    setHasCommittedMutations() {\n        return this.documentState = 2 /* HAS_COMMITTED_MUTATIONS */ , this;\n    }\n    setHasLocalMutations() {\n        return this.documentState = 1 /* HAS_LOCAL_MUTATIONS */ , this.version = Et.min(), \n        this;\n    }\n    setReadTime(t) {\n        return this.readTime = t, this;\n    }\n    get hasLocalMutations() {\n        return 1 /* HAS_LOCAL_MUTATIONS */ === this.documentState;\n    }\n    get hasCommittedMutations() {\n        return 2 /* HAS_COMMITTED_MUTATIONS */ === this.documentState;\n    }\n    get hasPendingWrites() {\n        return this.hasLocalMutations || this.hasCommittedMutations;\n    }\n    isValidDocument() {\n        return 0 /* INVALID */ !== this.documentType;\n    }\n    isFoundDocument() {\n        return 1 /* FOUND_DOCUMENT */ === this.documentType;\n    }\n    isNoDocument() {\n        return 2 /* NO_DOCUMENT */ === this.documentType;\n    }\n    isUnknownDocument() {\n        return 3 /* UNKNOWN_DOCUMENT */ === this.documentType;\n    }\n    isEqual(t) {\n        return t instanceof Xt && this.key.isEqual(t.key) && this.version.isEqual(t.version) && this.documentType === t.documentType && this.documentState === t.documentState && this.data.isEqual(t.data);\n    }\n    mutableCopy() {\n        return new Xt(this.key, this.documentType, this.version, this.readTime, this.data.clone(), this.documentState);\n    }\n    toString() {\n        return `Document(${this.key}, ${this.version}, ${JSON.stringify(this.data.value)}, {documentType: ${this.documentType}}), {documentState: ${this.documentState}})`;\n    }\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Visible for testing\nclass Zt {\n    constructor(t, e = null, n = [], r = [], s = null, i = null, o = null) {\n        this.path = t, this.collectionGroup = e, this.orderBy = n, this.filters = r, this.limit = s, \n        this.startAt = i, this.endAt = o, this.$ = null;\n    }\n}\n\n/**\n * Initializes a Target with a path and optional additional query constraints.\n * Path must currently be empty if this is a collection group query.\n *\n * NOTE: you should always construct `Target` from `Query.toTarget` instead of\n * using this factory method, because `Query` provides an implicit `orderBy`\n * property.\n */ function te(t, e = null, n = [], r = [], s = null, i = null, o = null) {\n    return new Zt(t, e, n, r, s, i, o);\n}\n\nclass ee extends class {} {\n    constructor(t, e, n) {\n        super(), this.field = t, this.op = e, this.value = n;\n    }\n    /**\n     * Creates a filter based on the provided arguments.\n     */    static create(t, e, n) {\n        return t.isKeyField() ? \"in\" /* IN */ === e || \"not-in\" /* NOT_IN */ === e ? this.F(t, e, n) : new ne(t, e, n) : \"array-contains\" /* ARRAY_CONTAINS */ === e ? new oe(t, n) : \"in\" /* IN */ === e ? new ue(t, n) : \"not-in\" /* NOT_IN */ === e ? new ce(t, n) : \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ === e ? new ae(t, n) : new ee(t, e, n);\n    }\n    static F(t, e, n) {\n        return \"in\" /* IN */ === e ? new re(t, n) : new se(t, n);\n    }\n    matches(t) {\n        const e = t.data.field(this.field);\n        // Types do not have to match in NOT_EQUAL filters.\n                return \"!=\" /* NOT_EQUAL */ === this.op ? null !== e && this.S(Bt(e, this.value)) : null !== e && Mt(this.value) === Mt(e) && this.S(Bt(e, this.value));\n        // Only compare types with matching backend order (such as double and int).\n        }\n    S(t) {\n        switch (this.op) {\n          case \"<\" /* LESS_THAN */ :\n            return t < 0;\n\n          case \"<=\" /* LESS_THAN_OR_EQUAL */ :\n            return t <= 0;\n\n          case \"==\" /* EQUAL */ :\n            return 0 === t;\n\n          case \"!=\" /* NOT_EQUAL */ :\n            return 0 !== t;\n\n          case \">\" /* GREATER_THAN */ :\n            return t > 0;\n\n          case \">=\" /* GREATER_THAN_OR_EQUAL */ :\n            return t >= 0;\n\n          default:\n            return b();\n        }\n    }\n    q() {\n        return [ \"<\" /* LESS_THAN */ , \"<=\" /* LESS_THAN_OR_EQUAL */ , \">\" /* GREATER_THAN */ , \">=\" /* GREATER_THAN_OR_EQUAL */ , \"!=\" /* NOT_EQUAL */ , \"not-in\" /* NOT_IN */ ].indexOf(this.op) >= 0;\n    }\n}\n\n/** Filter that matches on key fields (i.e. '__name__'). */\nclass ne extends ee {\n    constructor(t, e, n) {\n        super(t, e, n), this.key = rt.fromName(n.referenceValue);\n    }\n    matches(t) {\n        const e = rt.comparator(t.key, this.key);\n        return this.S(e);\n    }\n}\n\n/** Filter that matches on key fields within an array. */ class re extends ee {\n    constructor(t, e) {\n        super(t, \"in\" /* IN */ , e), this.keys = ie(\"in\" /* IN */ , e);\n    }\n    matches(t) {\n        return this.keys.some((e => e.isEqual(t.key)));\n    }\n}\n\n/** Filter that matches on key fields not present within an array. */ class se extends ee {\n    constructor(t, e) {\n        super(t, \"not-in\" /* NOT_IN */ , e), this.keys = ie(\"not-in\" /* NOT_IN */ , e);\n    }\n    matches(t) {\n        return !this.keys.some((e => e.isEqual(t.key)));\n    }\n}\n\nfunction ie(t, e) {\n    var n;\n    return ((null === (n = e.arrayValue) || void 0 === n ? void 0 : n.values) || []).map((t => rt.fromName(t.referenceValue)));\n}\n\n/** A Filter that implements the array-contains operator. */ class oe extends ee {\n    constructor(t, e) {\n        super(t, \"array-contains\" /* ARRAY_CONTAINS */ , e);\n    }\n    matches(t) {\n        const e = t.data.field(this.field);\n        return Gt(e) && jt(e.arrayValue, this.value);\n    }\n}\n\n/** A Filter that implements the IN operator. */ class ue extends ee {\n    constructor(t, e) {\n        super(t, \"in\" /* IN */ , e);\n    }\n    matches(t) {\n        const e = t.data.field(this.field);\n        return null !== e && jt(this.value.arrayValue, e);\n    }\n}\n\n/** A Filter that implements the not-in operator. */ class ce extends ee {\n    constructor(t, e) {\n        super(t, \"not-in\" /* NOT_IN */ , e);\n    }\n    matches(t) {\n        if (jt(this.value.arrayValue, {\n            nullValue: \"NULL_VALUE\"\n        })) return !1;\n        const e = t.data.field(this.field);\n        return null !== e && !jt(this.value.arrayValue, e);\n    }\n}\n\n/** A Filter that implements the array-contains-any operator. */ class ae extends ee {\n    constructor(t, e) {\n        super(t, \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ , e);\n    }\n    matches(t) {\n        const e = t.data.field(this.field);\n        return !(!Gt(e) || !e.arrayValue.values) && e.arrayValue.values.some((t => jt(this.value.arrayValue, t)));\n    }\n}\n\n/**\n * Represents a bound of a query.\n *\n * The bound is specified with the given components representing a position and\n * whether it's just before or just after the position (relative to whatever the\n * query order is).\n *\n * The position represents a logical index position for a query. It's a prefix\n * of values for the (potentially implicit) order by clauses of a query.\n *\n * Bound provides a function to determine whether a document comes before or\n * after a bound. This is influenced by whether the position is just before or\n * just after the provided values.\n */ class he {\n    constructor(t, e) {\n        this.position = t, this.inclusive = e;\n    }\n}\n\n/**\n * An ordering on a field, in some Direction. Direction defaults to ASCENDING.\n */ class le {\n    constructor(t, e = \"asc\" /* ASCENDING */) {\n        this.field = t, this.dir = e;\n    }\n}\n\nfunction fe(t, e) {\n    return t.dir === e.dir && t.field.isEqual(e.field);\n}\n\nfunction de(t, e) {\n    if (null === t) return null === e;\n    if (null === e) return !1;\n    if (t.inclusive !== e.inclusive || t.position.length !== e.position.length) return !1;\n    for (let n = 0; n < t.position.length; n++) {\n        if (!Ut(t.position[n], e.position[n])) return !1;\n    }\n    return !0;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Query encapsulates all the query attributes we support in the SDK. It can\n * be run against the LocalStore, as well as be converted to a `Target` to\n * query the RemoteStore results.\n *\n * Visible for testing.\n */ class we {\n    /**\n     * Initializes a Query with a path and optional additional query constraints.\n     * Path must currently be empty if this is a collection group query.\n     */\n    constructor(t, e = null, n = [], r = [], s = null, i = \"F\" /* First */ , o = null, u = null) {\n        this.path = t, this.collectionGroup = e, this.explicitOrderBy = n, this.filters = r, \n        this.limit = s, this.limitType = i, this.startAt = o, this.endAt = u, this.O = null, \n        // The corresponding `Target` of this `Query` instance.\n        this.k = null, this.startAt, this.endAt;\n    }\n}\n\n/** Creates a new Query for a query that matches all documents at `path` */ function me(t) {\n    return t.explicitOrderBy.length > 0 ? t.explicitOrderBy[0].field : null;\n}\n\nfunction pe(t) {\n    for (const e of t.filters) if (e.q()) return e.field;\n    return null;\n}\n\n/**\n * Checks if any of the provided Operators are included in the query and\n * returns the first one that is, or null if none are.\n */\n/**\n * Returns whether the query matches a collection group rather than a specific\n * collection.\n */\nfunction ye(t) {\n    return null !== t.collectionGroup;\n}\n\n/**\n * Returns the implicit order by constraint that is used to execute the Query,\n * which can be different from the order by constraints the user provided (e.g.\n * the SDK and backend always orders by `__name__`).\n */ function _e(t) {\n    const e = I(t);\n    if (null === e.O) {\n        e.O = [];\n        const t = pe(e), n = me(e);\n        if (null !== t && null === n) \n        // In order to implicitly add key ordering, we must also add the\n        // inequality filter field for it to be a valid query.\n        // Note that the default inequality field and key ordering is ascending.\n        t.isKeyField() || e.O.push(new le(t)), e.O.push(new le(nt.keyField(), \"asc\" /* ASCENDING */)); else {\n            let t = !1;\n            for (const n of e.explicitOrderBy) e.O.push(n), n.field.isKeyField() && (t = !0);\n            if (!t) {\n                // The order of the implicit key ordering always matches the last\n                // explicit order by\n                const t = e.explicitOrderBy.length > 0 ? e.explicitOrderBy[e.explicitOrderBy.length - 1].dir : \"asc\" /* ASCENDING */;\n                e.O.push(new le(nt.keyField(), t));\n            }\n        }\n    }\n    return e.O;\n}\n\n/**\n * Converts this `Query` instance to it's corresponding `Target` representation.\n */ function ge(t) {\n    const e = I(t);\n    if (!e.k) if (\"F\" /* First */ === e.limitType) e.k = te(e.path, e.collectionGroup, _e(e), e.filters, e.limit, e.startAt, e.endAt); else {\n        // Flip the orderBy directions since we want the last results\n        const t = [];\n        for (const n of _e(e)) {\n            const e = \"desc\" /* DESCENDING */ === n.dir ? \"asc\" /* ASCENDING */ : \"desc\" /* DESCENDING */;\n            t.push(new le(n.field, e));\n        }\n        // We need to swap the cursors to match the now-flipped query ordering.\n                const n = e.endAt ? new he(e.endAt.position, e.endAt.inclusive) : null, r = e.startAt ? new he(e.startAt.position, e.startAt.inclusive) : null;\n        // Now return as a LimitType.First query.\n        e.k = te(e.path, e.collectionGroup, t, e.filters, e.limit, n, r);\n    }\n    return e.k;\n}\n\nfunction ve(t, e) {\n    return function(t, e) {\n        if (t.limit !== e.limit) return !1;\n        if (t.orderBy.length !== e.orderBy.length) return !1;\n        for (let n = 0; n < t.orderBy.length; n++) if (!fe(t.orderBy[n], e.orderBy[n])) return !1;\n        if (t.filters.length !== e.filters.length) return !1;\n        for (let s = 0; s < t.filters.length; s++) if (n = t.filters[s], r = e.filters[s], \n        n.op !== r.op || !n.field.isEqual(r.field) || !Ut(n.value, r.value)) return !1;\n        var n, r;\n        return t.collectionGroup === e.collectionGroup && !!t.path.isEqual(e.path) && !!de(t.startAt, e.startAt) && de(t.endAt, e.endAt);\n    }(ge(t), ge(e)) && t.limitType === e.limitType;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns an DoubleValue for `value` that is encoded based the serializer's\n * `useProto3Json` setting.\n */\n/**\n * Returns a value for a number that's appropriate to put into a proto.\n * The return value is an IntegerValue if it can safely represent the value,\n * otherwise a DoubleValue is returned.\n */\nfunction be(t, e) {\n    return function(t) {\n        return \"number\" == typeof t && Number.isInteger(t) && !lt(t) && t <= Number.MAX_SAFE_INTEGER && t >= Number.MIN_SAFE_INTEGER;\n    }(e) ? \n    /**\n * Returns an IntegerValue for `value`.\n */\n    function(t) {\n        return {\n            integerValue: \"\" + t\n        };\n    }(e) : function(t, e) {\n        if (t.C) {\n            if (isNaN(e)) return {\n                doubleValue: \"NaN\"\n            };\n            if (e === 1 / 0) return {\n                doubleValue: \"Infinity\"\n            };\n            if (e === -1 / 0) return {\n                doubleValue: \"-Infinity\"\n            };\n        }\n        return {\n            doubleValue: lt(e) ? \"-0\" : e\n        };\n    }(t, e);\n}\n\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Used to represent a field transform on a mutation. */ class Ee {\n    constructor() {\n        // Make sure that the structural type of `TransformOperation` is unique.\n        // See https://github.com/microsoft/TypeScript/issues/5451\n        this._ = void 0;\n    }\n}\n\n/** Transforms a value into a server-generated timestamp. */ class Ie extends Ee {}\n\n/** Transforms an array value via a union operation. */ class Te extends Ee {\n    constructor(t) {\n        super(), this.elements = t;\n    }\n}\n\n/** Transforms an array value via a remove operation. */ class Ae extends Ee {\n    constructor(t) {\n        super(), this.elements = t;\n    }\n}\n\n/**\n * Implements the backend semantics for locally computed NUMERIC_ADD (increment)\n * transforms. Converts all field values to integers or doubles, but unlike the\n * backend does not cap integer values at 2^63. Instead, JavaScript number\n * arithmetic is used and precision loss can occur for values greater than 2^53.\n */ class Re extends Ee {\n    constructor(t, e) {\n        super(), this.L = t, this.M = e;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** A field path and the TransformOperation to perform upon it. */ class Pe {\n    constructor(t, e) {\n        this.field = t, this.transform = e;\n    }\n}\n\n/**\n * Encodes a precondition for a mutation. This follows the model that the\n * backend accepts with the special case of an explicit \"empty\" precondition\n * (meaning no precondition).\n */ class Ve {\n    constructor(t, e) {\n        this.updateTime = t, this.exists = e;\n    }\n    /** Creates a new empty Precondition. */    static none() {\n        return new Ve;\n    }\n    /** Creates a new Precondition with an exists flag. */    static exists(t) {\n        return new Ve(void 0, t);\n    }\n    /** Creates a new Precondition based on a version a document exists at. */    static updateTime(t) {\n        return new Ve(t);\n    }\n    /** Returns whether this Precondition is empty. */    get isNone() {\n        return void 0 === this.updateTime && void 0 === this.exists;\n    }\n    isEqual(t) {\n        return this.exists === t.exists && (this.updateTime ? !!t.updateTime && this.updateTime.isEqual(t.updateTime) : !t.updateTime);\n    }\n}\n\n/**\n * A mutation describes a self-contained change to a document. Mutations can\n * create, replace, delete, and update subsets of documents.\n *\n * Mutations not only act on the value of the document but also its version.\n *\n * For local mutations (mutations that haven't been committed yet), we preserve\n * the existing version for Set and Patch mutations. For Delete mutations, we\n * reset the version to 0.\n *\n * Here's the expected transition table.\n *\n * MUTATION           APPLIED TO            RESULTS IN\n *\n * SetMutation        Document(v3)          Document(v3)\n * SetMutation        NoDocument(v3)        Document(v0)\n * SetMutation        InvalidDocument(v0)   Document(v0)\n * PatchMutation      Document(v3)          Document(v3)\n * PatchMutation      NoDocument(v3)        NoDocument(v3)\n * PatchMutation      InvalidDocument(v0)   UnknownDocument(v3)\n * DeleteMutation     Document(v3)          NoDocument(v0)\n * DeleteMutation     NoDocument(v3)        NoDocument(v0)\n * DeleteMutation     InvalidDocument(v0)   NoDocument(v0)\n *\n * For acknowledged mutations, we use the updateTime of the WriteResponse as\n * the resulting version for Set and Patch mutations. As deletes have no\n * explicit update time, we use the commitTime of the WriteResponse for\n * Delete mutations.\n *\n * If a mutation is acknowledged by the backend but fails the precondition check\n * locally, we transition to an `UnknownDocument` and rely on Watch to send us\n * the updated version.\n *\n * Field transforms are used only with Patch and Set Mutations. We use the\n * `updateTransforms` message to store transforms, rather than the `transforms`s\n * messages.\n *\n * ## Subclassing Notes\n *\n * Every type of mutation needs to implement its own applyToRemoteDocument() and\n * applyToLocalView() to implement the actual behavior of applying the mutation\n * to some source document (see `setMutationApplyToRemoteDocument()` for an\n * example).\n */ class Ne {}\n\n/**\n * A mutation that creates or replaces the document at the given key with the\n * object value contents.\n */ class De extends Ne {\n    constructor(t, e, n, r = []) {\n        super(), this.key = t, this.value = e, this.precondition = n, this.fieldTransforms = r, \n        this.type = 0 /* Set */;\n    }\n    getFieldMask() {\n        return null;\n    }\n}\n\n/**\n * A mutation that modifies fields of the document at the given key with the\n * given values. The values are applied through a field mask:\n *\n *  * When a field is in both the mask and the values, the corresponding field\n *    is updated.\n *  * When a field is in neither the mask nor the values, the corresponding\n *    field is unmodified.\n *  * When a field is in the mask but not in the values, the corresponding field\n *    is deleted.\n *  * When a field is not in the mask but is in the values, the values map is\n *    ignored.\n */ class $e extends Ne {\n    constructor(t, e, n, r, s = []) {\n        super(), this.key = t, this.data = e, this.fieldMask = n, this.precondition = r, \n        this.fieldTransforms = s, this.type = 1 /* Patch */;\n    }\n    getFieldMask() {\n        return this.fieldMask;\n    }\n}\n\n/** A mutation that deletes the document at the given key. */ class xe extends Ne {\n    constructor(t, e) {\n        super(), this.key = t, this.precondition = e, this.type = 2 /* Delete */ , this.fieldTransforms = [];\n    }\n    getFieldMask() {\n        return null;\n    }\n}\n\n/**\n * A mutation that verifies the existence of the document at the given key with\n * the provided precondition.\n *\n * The `verify` operation is only used in Transactions, and this class serves\n * primarily to facilitate serialization into protos.\n */ class Fe extends Ne {\n    constructor(t, e) {\n        super(), this.key = t, this.precondition = e, this.type = 3 /* Verify */ , this.fieldTransforms = [];\n    }\n    getFieldMask() {\n        return null;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const Se = (() => {\n    const t = {\n        asc: \"ASCENDING\",\n        desc: \"DESCENDING\"\n    };\n    return t;\n})(), qe = (() => {\n    const t = {\n        \"<\": \"LESS_THAN\",\n        \"<=\": \"LESS_THAN_OR_EQUAL\",\n        \">\": \"GREATER_THAN\",\n        \">=\": \"GREATER_THAN_OR_EQUAL\",\n        \"==\": \"EQUAL\",\n        \"!=\": \"NOT_EQUAL\",\n        \"array-contains\": \"ARRAY_CONTAINS\",\n        in: \"IN\",\n        \"not-in\": \"NOT_IN\",\n        \"array-contains-any\": \"ARRAY_CONTAINS_ANY\"\n    };\n    return t;\n})();\n\n/**\n * This class generates JsonObject values for the Datastore API suitable for\n * sending to either GRPC stub methods or via the JSON/HTTP REST API.\n *\n * The serializer supports both Protobuf.js and Proto3 JSON formats. By\n * setting `useProto3Json` to true, the serializer will use the Proto3 JSON\n * format.\n *\n * For a description of the Proto3 JSON format check\n * https://developers.google.com/protocol-buffers/docs/proto3#json\n *\n * TODO(klimt): We can remove the databaseId argument if we keep the full\n * resource name in documents.\n */\nclass Oe {\n    constructor(t, e) {\n        this.databaseId = t, this.C = e;\n    }\n}\n\n/**\n * Returns a value for a number (or null) that's appropriate to put into\n * a google.protobuf.Int32Value proto.\n * DO NOT USE THIS FOR ANYTHING ELSE.\n * This method cheats. It's typed as returning \"number\" because that's what\n * our generated proto interfaces say Int32Value must be. But GRPC actually\n * expects a { value: <number> } struct.\n */\n/**\n * Returns a value for a Date that's appropriate to put into a proto.\n */\nfunction ke(t, e) {\n    if (t.C) {\n        return `${new Date(1e3 * e.seconds).toISOString().replace(/\\.\\d*/, \"\").replace(\"Z\", \"\")}.${(\"000000000\" + e.nanoseconds).slice(-9)}Z`;\n    }\n    return {\n        seconds: \"\" + e.seconds,\n        nanos: e.nanoseconds\n    };\n}\n\n/**\n * Returns a value for bytes that's appropriate to put in a proto.\n *\n * Visible for testing.\n */\nfunction Ce(t, e) {\n    return t.C ? e.toBase64() : e.toUint8Array();\n}\n\nfunction Le(t, e) {\n    return ke(t, e.toTimestamp());\n}\n\nfunction Me(t) {\n    return E(!!t), Et.fromTimestamp(function(t) {\n        const e = Ft(t);\n        return new bt(e.seconds, e.nanos);\n    }(t));\n}\n\nfunction Ue(t, e) {\n    return function(t) {\n        return new tt([ \"projects\", t.projectId, \"databases\", t.database ]);\n    }(t).child(\"documents\").child(e).canonicalString();\n}\n\nfunction je(t, e) {\n    return Ue(t.databaseId, e.path);\n}\n\nfunction Be(t, e) {\n    const n = function(t) {\n        const e = tt.fromString(t);\n        return E(tn(e)), e;\n    }(e);\n    if (n.get(1) !== t.databaseId.projectId) throw new U(P, \"Tried to deserialize key from different project: \" + n.get(1) + \" vs \" + t.databaseId.projectId);\n    if (n.get(3) !== t.databaseId.database) throw new U(P, \"Tried to deserialize key from different database: \" + n.get(3) + \" vs \" + t.databaseId.database);\n    return new rt((E((r = n).length > 4 && \"documents\" === r.get(4)), r.popFirst(5)));\n    var r;\n    /** Creates a Document proto from key and fields (but no create/update time) */}\n\nfunction Qe(t, e) {\n    return Ue(t.databaseId, e);\n}\n\nfunction ze(t) {\n    return new tt([ \"projects\", t.databaseId.projectId, \"databases\", t.databaseId.database ]).canonicalString();\n}\n\nfunction Ge(t, e, n) {\n    return {\n        name: je(t, e),\n        fields: n.value.mapValue.fields\n    };\n}\n\nfunction We(t, e) {\n    return \"found\" in e ? function(t, e) {\n        E(!!e.found), e.found.name, e.found.updateTime;\n        const n = Be(t, e.found.name), r = Me(e.found.updateTime), s = new Jt({\n            mapValue: {\n                fields: e.found.fields\n            }\n        });\n        return Xt.newFoundDocument(n, r, s);\n    }(t, e) : \"missing\" in e ? function(t, e) {\n        E(!!e.missing), E(!!e.readTime);\n        const n = Be(t, e.missing), r = Me(e.readTime);\n        return Xt.newNoDocument(n, r);\n    }(t, e) : b();\n}\n\nfunction Ke(t, e) {\n    let n;\n    if (e instanceof De) n = {\n        update: Ge(t, e.key, e.value)\n    }; else if (e instanceof xe) n = {\n        delete: je(t, e.key)\n    }; else if (e instanceof $e) n = {\n        update: Ge(t, e.key, e.data),\n        updateMask: Ze(e.fieldMask)\n    }; else {\n        if (!(e instanceof Fe)) return b();\n        n = {\n            verify: je(t, e.key)\n        };\n    }\n    return e.fieldTransforms.length > 0 && (n.updateTransforms = e.fieldTransforms.map((t => function(t, e) {\n        const n = e.transform;\n        if (n instanceof Ie) return {\n            fieldPath: e.field.canonicalString(),\n            setToServerValue: \"REQUEST_TIME\"\n        };\n        if (n instanceof Te) return {\n            fieldPath: e.field.canonicalString(),\n            appendMissingElements: {\n                values: n.elements\n            }\n        };\n        if (n instanceof Ae) return {\n            fieldPath: e.field.canonicalString(),\n            removeAllFromArray: {\n                values: n.elements\n            }\n        };\n        if (n instanceof Re) return {\n            fieldPath: e.field.canonicalString(),\n            increment: n.M\n        };\n        throw b();\n    }(0, t)))), e.precondition.isNone || (n.currentDocument = function(t, e) {\n        return void 0 !== e.updateTime ? {\n            updateTime: Le(t, e.updateTime)\n        } : void 0 !== e.exists ? {\n            exists: e.exists\n        } : b();\n    }(t, e.precondition)), n;\n}\n\nfunction Ye(t, e) {\n    // Dissect the path into parent, collectionId, and optional key filter.\n    const n = {\n        structuredQuery: {}\n    }, r = e.path;\n    null !== e.collectionGroup ? (n.parent = Qe(t, r), n.structuredQuery.from = [ {\n        collectionId: e.collectionGroup,\n        allDescendants: !0\n    } ]) : (n.parent = Qe(t, r.popLast()), n.structuredQuery.from = [ {\n        collectionId: r.lastSegment()\n    } ]);\n    const s = function(t) {\n        if (0 === t.length) return;\n        const e = t.map((t => \n        // visible for testing\n        function(t) {\n            if (\"==\" /* EQUAL */ === t.op) {\n                if (Kt(t.value)) return {\n                    unaryFilter: {\n                        field: Xe(t.field),\n                        op: \"IS_NAN\"\n                    }\n                };\n                if (Wt(t.value)) return {\n                    unaryFilter: {\n                        field: Xe(t.field),\n                        op: \"IS_NULL\"\n                    }\n                };\n            } else if (\"!=\" /* NOT_EQUAL */ === t.op) {\n                if (Kt(t.value)) return {\n                    unaryFilter: {\n                        field: Xe(t.field),\n                        op: \"IS_NOT_NAN\"\n                    }\n                };\n                if (Wt(t.value)) return {\n                    unaryFilter: {\n                        field: Xe(t.field),\n                        op: \"IS_NOT_NULL\"\n                    }\n                };\n            }\n            return {\n                fieldFilter: {\n                    field: Xe(t.field),\n                    op: Je(t.op),\n                    value: t.value\n                }\n            };\n        }(t)));\n        if (1 === e.length) return e[0];\n        return {\n            compositeFilter: {\n                op: \"AND\",\n                filters: e\n            }\n        };\n    }(e.filters);\n    s && (n.structuredQuery.where = s);\n    const i = function(t) {\n        if (0 === t.length) return;\n        return t.map((t => \n        // visible for testing\n        function(t) {\n            return {\n                field: Xe(t.field),\n                direction: He(t.dir)\n            };\n        }(t)));\n    }(e.orderBy);\n    i && (n.structuredQuery.orderBy = i);\n    const o = function(t, e) {\n        return t.C || ht(e) ? e : {\n            value: e\n        };\n    }(t, e.limit);\n    var u;\n    return null !== o && (n.structuredQuery.limit = o), e.startAt && (n.structuredQuery.startAt = {\n        before: (u = e.startAt).inclusive,\n        values: u.position\n    }), e.endAt && (n.structuredQuery.endAt = function(t) {\n        return {\n            before: !t.inclusive,\n            values: t.position\n        };\n    }\n    // visible for testing\n    (e.endAt)), n;\n}\n\nfunction He(t) {\n    return Se[t];\n}\n\n// visible for testing\nfunction Je(t) {\n    return qe[t];\n}\n\nfunction Xe(t) {\n    return {\n        fieldPath: t.canonicalString()\n    };\n}\n\nfunction Ze(t) {\n    const e = [];\n    return t.fields.forEach((t => e.push(t.canonicalString()))), {\n        fieldPaths: e\n    };\n}\n\nfunction tn(t) {\n    // Resource names have at least 4 components (project ID, database ID)\n    return t.length >= 4 && \"projects\" === t.get(0) && \"databases\" === t.get(2);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ function en(t) {\n    return new Oe(t, /* useProto3Json= */ !0);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A helper for running delayed tasks following an exponential backoff curve\n * between attempts.\n *\n * Each delay is made up of a \"base\" delay which follows the exponential\n * backoff curve, and a +/- 50% \"jitter\" that is calculated and added to the\n * base delay. This prevents clients from accidentally synchronizing their\n * delays causing spikes of load to the backend.\n */\nclass nn {\n    constructor(\n    /**\n     * The AsyncQueue to run backoff operations on.\n     */\n    t, \n    /**\n     * The ID to use when scheduling backoff operations on the AsyncQueue.\n     */\n    e, \n    /**\n     * The initial delay (used as the base delay on the first retry attempt).\n     * Note that jitter will still be applied, so the actual delay could be as\n     * little as 0.5*initialDelayMs.\n     */\n    n = 1e3\n    /**\n     * The multiplier to use to determine the extended base delay after each\n     * attempt.\n     */ , r = 1.5\n    /**\n     * The maximum base delay after which no further backoff is performed.\n     * Note that jitter will still be applied, so the actual delay could be as\n     * much as 1.5*maxDelayMs.\n     */ , s = 6e4) {\n        this.U = t, this.timerId = e, this.j = n, this.B = r, this.G = s, this.W = 0, this.K = null, \n        /** The last backoff attempt, as epoch milliseconds. */\n        this.Y = Date.now(), this.reset();\n    }\n    /**\n     * Resets the backoff delay.\n     *\n     * The very next backoffAndWait() will have no delay. If it is called again\n     * (i.e. due to an error), initialDelayMs (plus jitter) will be used, and\n     * subsequent ones will increase according to the backoffFactor.\n     */    reset() {\n        this.W = 0;\n    }\n    /**\n     * Resets the backoff delay to the maximum delay (e.g. for use after a\n     * RESOURCE_EXHAUSTED error).\n     */    H() {\n        this.W = this.G;\n    }\n    /**\n     * Returns a promise that resolves after currentDelayMs, and increases the\n     * delay for any subsequent attempts. If there was a pending backoff operation\n     * already, it will be canceled.\n     */    J(t) {\n        // Cancel any pending backoff operation.\n        this.cancel();\n        // First schedule using the current base (which may be 0 and should be\n        // honored as such).\n        const e = Math.floor(this.W + this.X()), n = Math.max(0, Date.now() - this.Y), r = Math.max(0, e - n);\n        // Guard against lastAttemptTime being in the future due to a clock change.\n                r > 0 && y(\"ExponentialBackoff\", `Backing off for ${r} ms (base delay: ${this.W} ms, delay with jitter: ${e} ms, last attempt: ${n} ms ago)`), \n        this.K = this.U.enqueueAfterDelay(this.timerId, r, (() => (this.Y = Date.now(), \n        t()))), \n        // Apply backoff factor to determine next delay and ensure it is within\n        // bounds.\n        this.W *= this.B, this.W < this.j && (this.W = this.j), this.W > this.G && (this.W = this.G);\n    }\n    Z() {\n        null !== this.K && (this.K.skipDelay(), this.K = null);\n    }\n    cancel() {\n        null !== this.K && (this.K.cancel(), this.K = null);\n    }\n    /** Returns a random value in the range [-currentBaseMs/2, currentBaseMs/2] */    X() {\n        return (Math.random() - .5) * this.W;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Datastore and its related methods are a wrapper around the external Google\n * Cloud Datastore grpc API, which provides an interface that is more convenient\n * for the rest of the client SDK architecture to consume.\n */\n/**\n * An implementation of Datastore that exposes additional state for internal\n * consumption.\n */\nclass rn extends class {} {\n    constructor(t, e, n, r) {\n        super(), this.authCredentials = t, this.appCheckCredentials = e, this.connection = n, \n        this.L = r, this.tt = !1;\n    }\n    et() {\n        if (this.tt) throw new U(S, \"The client has already been terminated.\");\n    }\n    /** Invokes the provided RPC with auth and AppCheck tokens. */    I(t, e, n) {\n        return this.et(), Promise.all([ this.authCredentials.getToken(), this.appCheckCredentials.getToken() ]).then((([r, s]) => this.connection.I(t, e, n, r, s))).catch((t => {\n            throw \"FirebaseError\" === t.name ? (t.code === x && (this.authCredentials.invalidateToken(), \n            this.appCheckCredentials.invalidateToken()), t) : new U(R, t.toString());\n        }));\n    }\n    /** Invokes the provided RPC with streamed results with auth and AppCheck tokens. */    P(t, e, n, r) {\n        return this.et(), Promise.all([ this.authCredentials.getToken(), this.appCheckCredentials.getToken() ]).then((([s, i]) => this.connection.P(t, e, n, s, i, r))).catch((t => {\n            throw \"FirebaseError\" === t.name ? (t.code === x && (this.authCredentials.invalidateToken(), \n            this.appCheckCredentials.invalidateToken()), t) : new U(R, t.toString());\n        }));\n    }\n    terminate() {\n        this.tt = !0;\n    }\n}\n\n// TODO(firestorexp): Make sure there is only one Datastore instance per\n// firestore-exp client.\nasync function sn(t, e) {\n    const n = I(t), r = ze(n.L) + \"/documents\", s = {\n        writes: e.map((t => Ke(n.L, t)))\n    };\n    await n.I(\"Commit\", r, s);\n}\n\nasync function on(t, e) {\n    const n = I(t), r = ze(n.L) + \"/documents\", s = {\n        documents: e.map((t => je(n.L, t)))\n    }, i = await n.P(\"BatchGetDocuments\", r, s, e.length), o = new Map;\n    i.forEach((t => {\n        const e = We(n.L, t);\n        o.set(e.key.toString(), e);\n    }));\n    const u = [];\n    return e.forEach((t => {\n        const e = o.get(t.toString());\n        E(!!e), u.push(e);\n    })), u;\n}\n\nasync function un(t, e) {\n    const n = I(t), r = Ye(n.L, ge(e));\n    return (await n.P(\"RunQuery\", r.parent, {\n        structuredQuery: r.structuredQuery\n    })).filter((t => !!t.document)).map((t => function(t, e, n) {\n        const r = Be(t, e.name), s = Me(e.updateTime), i = new Jt({\n            mapValue: {\n                fields: e.fields\n            }\n        }), o = Xt.newFoundDocument(r, s, i);\n        return n && o.setHasCommittedMutations(), n ? o.setHasCommittedMutations() : o;\n    }(n.L, t.document, void 0)));\n}\n\nasync function cn(t, e) {\n    const n = I(t), r = function(t, e) {\n        const n = Ye(t, e);\n        return {\n            structuredAggregationQuery: {\n                aggregations: [ {\n                    count: {},\n                    alias: \"count_alias\"\n                } ],\n                structuredQuery: n.structuredQuery\n            },\n            parent: n.parent\n        };\n    }(n.L, ge(e)), s = r.parent;\n    n.connection.v || delete r.parent;\n    return (await n.P(\"RunAggregationQuery\", s, r, /*expectedResponseCount=*/ 1)).filter((t => !!t.result)).map((t => t.result.aggregateFields));\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const an = new Map;\n\n/**\n * An instance map that ensures only one Datastore exists per Firestore\n * instance.\n */\n/**\n * Returns an initialized and started Datastore for the given Firestore\n * instance. Callers must invoke removeComponents() when the Firestore\n * instance is terminated.\n */\nfunction hn(t) {\n    if (t._terminated) throw new U(S, \"The client has already been terminated.\");\n    if (!an.has(t)) {\n        y(\"ComponentProvider\", \"Initializing Datastore\");\n        const i = function(t) {\n            return new pt(t, fetch.bind(null));\n        }((e = t._databaseId, n = t.app.options.appId || \"\", r = t._persistenceKey, s = t._freezeSettings(), \n        new J(e, n, r, s.host, s.ssl, s.experimentalForceLongPolling, s.experimentalAutoDetectLongPolling, s.useFetchStreams))), o = en(t._databaseId), u = function(t, e, n, r) {\n            return new rn(t, e, n, r);\n        }(t._authCredentials, t._appCheckCredentials, i, o);\n        an.set(t, u);\n    }\n    var e, n, r, s;\n    /**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */    return an.get(t);\n}\n\n/**\n * Removes all components associated with the provided instance. Must be called\n * when the `Firestore` instance is terminated.\n */\n/**\n * A concrete type describing all the values that can be applied via a\n * user-supplied `FirestoreSettings` object. This is a separate type so that\n * defaults can be supplied and the value can be checked for equality.\n */\nclass ln {\n    constructor(t) {\n        var e;\n        if (void 0 === t.host) {\n            if (void 0 !== t.ssl) throw new U(P, \"Can't provide ssl option if host option is not set\");\n            this.host = \"firestore.googleapis.com\", this.ssl = true;\n        } else this.host = t.host, this.ssl = null === (e = t.ssl) || void 0 === e || e;\n        if (this.credentials = t.credentials, this.ignoreUndefinedProperties = !!t.ignoreUndefinedProperties, \n        void 0 === t.cacheSizeBytes) this.cacheSizeBytes = 41943040; else {\n            if (-1 !== t.cacheSizeBytes && t.cacheSizeBytes < 1048576) throw new U(P, \"cacheSizeBytes must be at least 1048576\");\n            this.cacheSizeBytes = t.cacheSizeBytes;\n        }\n        this.experimentalForceLongPolling = !!t.experimentalForceLongPolling, this.experimentalAutoDetectLongPolling = !!t.experimentalAutoDetectLongPolling, \n        this.useFetchStreams = !!t.useFetchStreams, function(t, e, n, r) {\n            if (!0 === e && !0 === r) throw new U(P, `${t} and ${n} cannot be used together.`);\n        }(\"experimentalForceLongPolling\", t.experimentalForceLongPolling, \"experimentalAutoDetectLongPolling\", t.experimentalAutoDetectLongPolling);\n    }\n    isEqual(t) {\n        return this.host === t.host && this.ssl === t.ssl && this.credentials === t.credentials && this.cacheSizeBytes === t.cacheSizeBytes && this.experimentalForceLongPolling === t.experimentalForceLongPolling && this.experimentalAutoDetectLongPolling === t.experimentalAutoDetectLongPolling && this.ignoreUndefinedProperties === t.ignoreUndefinedProperties && this.useFetchStreams === t.useFetchStreams;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * The Cloud Firestore service interface.\n *\n * Do not call this constructor directly. Instead, use {@link (getFirestore:1)}.\n */ class fn {\n    /** @hideconstructor */\n    constructor(t, e, n, r) {\n        this._authCredentials = t, this._appCheckCredentials = e, this._databaseId = n, \n        this._app = r, \n        /**\n         * Whether it's a Firestore or Firestore Lite instance.\n         */\n        this.type = \"firestore-lite\", this._persistenceKey = \"(lite)\", this._settings = new ln({}), \n        this._settingsFrozen = !1;\n    }\n    /**\n     * The {@link @firebase/app#FirebaseApp} associated with this `Firestore` service\n     * instance.\n     */    get app() {\n        if (!this._app) throw new U(S, \"Firestore was not initialized using the Firebase SDK. 'app' is not available\");\n        return this._app;\n    }\n    get _initialized() {\n        return this._settingsFrozen;\n    }\n    get _terminated() {\n        return void 0 !== this._terminateTask;\n    }\n    _setSettings(t) {\n        if (this._settingsFrozen) throw new U(S, \"Firestore has already been started and its settings can no longer be changed. You can only modify settings before calling any other methods on a Firestore object.\");\n        this._settings = new ln(t), void 0 !== t.credentials && (this._authCredentials = function(t) {\n            if (!t) return new Q;\n            switch (t.type) {\n              case \"gapi\":\n                const e = t.client;\n                return new K(e, t.sessionIndex || \"0\", t.iamToken || null, t.authTokenFactory || null);\n\n              case \"provider\":\n                return t.client;\n\n              default:\n                throw new U(P, \"makeAuthCredentialsProvider failed due to invalid credential type\");\n            }\n        }(t.credentials));\n    }\n    _getSettings() {\n        return this._settings;\n    }\n    _freezeSettings() {\n        return this._settingsFrozen = !0, this._settings;\n    }\n    _delete() {\n        return this._terminateTask || (this._terminateTask = this._terminate()), this._terminateTask;\n    }\n    /** Returns a JSON-serializable representation of this `Firestore` instance. */    toJSON() {\n        return {\n            app: this._app,\n            databaseId: this._databaseId,\n            settings: this._settings\n        };\n    }\n    /**\n     * Terminates all components used by this client. Subclasses can override\n     * this method to clean up their own dependencies, but must also call this\n     * method.\n     *\n     * Only ever called once.\n     */    _terminate() {\n        return function(t) {\n            const e = an.get(t);\n            e && (y(\"ComponentProvider\", \"Removing Datastore\"), an.delete(t), e.terminate());\n        }(this), Promise.resolve();\n    }\n}\n\nfunction dn(t, e, n) {\n    n || (n = \"(default)\");\n    const r = _getProvider(t, \"firestore/lite\");\n    if (r.isInitialized(n)) throw new U(S, \"Firestore can only be initialized once per app.\");\n    return r.initialize({\n        options: e,\n        instanceIdentifier: n\n    });\n}\n\nfunction wn(e, n) {\n    const r = \"object\" == typeof e ? e : t(), s = \"string\" == typeof e ? e : n || \"(default)\", i = _getProvider(r, \"firestore/lite\").getImmediate({\n        identifier: s\n    });\n    if (!i._initialized) {\n        const t = a(\"firestore\");\n        t && mn(i, ...t);\n    }\n    return i;\n}\n\n/**\n * Modify this instance to communicate with the Cloud Firestore emulator.\n *\n * Note: This must be called before this instance has been used to do any\n * operations.\n *\n * @param firestore - The `Firestore` instance to configure to connect to the\n * emulator.\n * @param host - the emulator host (ex: localhost).\n * @param port - the emulator port (ex: 9000).\n * @param options.mockUserToken - the mock auth token to use for unit testing\n * Security Rules.\n */ function mn(t, e, n, r = {}) {\n    var s;\n    const i = (t = ct(t, fn))._getSettings();\n    if (\"firestore.googleapis.com\" !== i.host && i.host !== e && g(\"Host has been set in both settings() and useEmulator(), emulator host will be used\"), \n    t._setSettings(Object.assign(Object.assign({}, i), {\n        host: `${e}:${n}`,\n        ssl: !1\n    })), r.mockUserToken) {\n        let e, n;\n        if (\"string\" == typeof r.mockUserToken) e = r.mockUserToken, n = d.MOCK_USER; else {\n            // Let createMockUserToken validate first (catches common mistakes like\n            // invalid field \"uid\" and missing field \"sub\" / \"user_id\".)\n            e = h(r.mockUserToken, null === (s = t._app) || void 0 === s ? void 0 : s.options.projectId);\n            const i = r.mockUserToken.sub || r.mockUserToken.user_id;\n            if (!i) throw new U(P, \"mockUserToken must contain 'sub' or 'user_id' field!\");\n            n = new d(i);\n        }\n        t._authCredentials = new z(new B(e, n));\n    }\n}\n\n/**\n * Terminates the provided `Firestore` instance.\n *\n * After calling `terminate()` only the `clearIndexedDbPersistence()` functions\n * may be used. Any other function will throw a `FirestoreError`. Termination\n * does not cancel any pending writes, and any promises that are awaiting a\n * response from the server will not be resolved.\n *\n * To restart after termination, create a new instance of `Firestore` with\n * {@link (getFirestore:1)}.\n *\n * Note: Under normal circumstances, calling `terminate()` is not required. This\n * function is useful only when you want to force this instance to release all of\n * its resources or in combination with {@link clearIndexedDbPersistence} to\n * ensure that all local state is destroyed between test runs.\n *\n * @param firestore - The `Firestore` instance to terminate.\n * @returns A `Promise` that is resolved when the instance has been successfully\n * terminated.\n */ function pn(t) {\n    return t = ct(t, fn), e(t.app, \"firestore/lite\"), t._delete();\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents an aggregation that can be performed by Firestore.\n */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nclass yn {\n    constructor() {\n        /** A type string to uniquely identify instances of this class. */\n        this.type = \"AggregateField\";\n    }\n}\n\n/**\n * The results of executing an aggregation query.\n */ class _n {\n    /** @hideconstructor */\n    constructor(t, e) {\n        this._data = e, \n        /** A type string to uniquely identify instances of this class. */\n        this.type = \"AggregateQuerySnapshot\", this.query = t;\n    }\n    /**\n     * Returns the results of the aggregations performed over the underlying\n     * query.\n     *\n     * The keys of the returned object will be the same as those of the\n     * `AggregateSpec` object specified to the aggregation method, and the values\n     * will be the corresponding aggregation result.\n     *\n     * @returns The results of the aggregations performed over the underlying\n     * query.\n     */    data() {\n        return this._data;\n    }\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * CountQueryRunner encapsulates the logic needed to run the count aggregation\n * queries.\n */ class gn {\n    constructor(t, e, n) {\n        this.query = t, this.datastore = e, this.userDataWriter = n;\n    }\n    run() {\n        return cn(this.datastore, this.query._query).then((t => {\n            E(void 0 !== t[0]);\n            const e = Object.entries(t[0]).filter((([t, e]) => \"count_alias\" === t)).map((([t, e]) => this.userDataWriter.convertValue(e)))[0];\n            return E(\"number\" == typeof e), Promise.resolve(new _n(this.query, {\n                count: e\n            }));\n        }));\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `DocumentReference` refers to a document location in a Firestore database\n * and can be used to write, read, or listen to the location. The document at\n * the referenced location may or may not exist.\n */ class vn {\n    /** @hideconstructor */\n    constructor(t, \n    /**\n     * If provided, the `FirestoreDataConverter` associated with this instance.\n     */\n    e, n) {\n        this.converter = e, this._key = n, \n        /** The type of this Firestore reference. */\n        this.type = \"document\", this.firestore = t;\n    }\n    get _path() {\n        return this._key.path;\n    }\n    /**\n     * The document's identifier within its collection.\n     */    get id() {\n        return this._key.path.lastSegment();\n    }\n    /**\n     * A string representing the path of the referenced document (relative\n     * to the root of the database).\n     */    get path() {\n        return this._key.path.canonicalString();\n    }\n    /**\n     * The collection this `DocumentReference` belongs to.\n     */    get parent() {\n        return new En(this.firestore, this.converter, this._key.path.popLast());\n    }\n    withConverter(t) {\n        return new vn(this.firestore, t, this._key);\n    }\n}\n\n/**\n * A `Query` refers to a query which you can read or listen to. You can also\n * construct refined `Query` objects by adding filters and ordering.\n */ class bn {\n    // This is the lite version of the Query class in the main SDK.\n    /** @hideconstructor protected */\n    constructor(t, \n    /**\n     * If provided, the `FirestoreDataConverter` associated with this instance.\n     */\n    e, n) {\n        this.converter = e, this._query = n, \n        /** The type of this Firestore reference. */\n        this.type = \"query\", this.firestore = t;\n    }\n    withConverter(t) {\n        return new bn(this.firestore, t, this._query);\n    }\n}\n\n/**\n * A `CollectionReference` object can be used for adding documents, getting\n * document references, and querying for documents (using {@link query}).\n */ class En extends bn {\n    /** @hideconstructor */\n    constructor(t, e, n) {\n        super(t, e, new we(n)), this._path = n, \n        /** The type of this Firestore reference. */\n        this.type = \"collection\";\n    }\n    /** The collection's identifier. */    get id() {\n        return this._query.path.lastSegment();\n    }\n    /**\n     * A string representing the path of the referenced collection (relative\n     * to the root of the database).\n     */    get path() {\n        return this._query.path.canonicalString();\n    }\n    /**\n     * A reference to the containing `DocumentReference` if this is a\n     * subcollection. If this isn't a subcollection, the reference is null.\n     */    get parent() {\n        const t = this._path.popLast();\n        return t.isEmpty() ? null : new vn(this.firestore, \n        /* converter= */ null, new rt(t));\n    }\n    withConverter(t) {\n        return new En(this.firestore, t, this._path);\n    }\n}\n\nfunction In(t, e, ...n) {\n    if (t = l(t), st(\"collection\", \"path\", e), t instanceof fn) {\n        const r = tt.fromString(e, ...n);\n        return ot(r), new En(t, /* converter= */ null, r);\n    }\n    {\n        if (!(t instanceof vn || t instanceof En)) throw new U(P, \"Expected first argument to collection() to be a CollectionReference, a DocumentReference or FirebaseFirestore\");\n        const r = t._path.child(tt.fromString(e, ...n));\n        return ot(r), new En(t.firestore, \n        /* converter= */ null, r);\n    }\n}\n\n// TODO(firestorelite): Consider using ErrorFactory -\n// https://github.com/firebase/firebase-js-sdk/blob/0131e1f/packages/util/src/errors.ts#L106\n/**\n * Creates and returns a new `Query` instance that includes all documents in the\n * database that are contained in a collection or subcollection with the\n * given `collectionId`.\n *\n * @param firestore - A reference to the root `Firestore` instance.\n * @param collectionId - Identifies the collections to query over. Every\n * collection or subcollection with this ID as the last segment of its path\n * will be included. Cannot contain a slash.\n * @returns The created `Query`.\n */ function Tn(t, e) {\n    if (t = ct(t, fn), st(\"collectionGroup\", \"collection id\", e), e.indexOf(\"/\") >= 0) throw new U(P, `Invalid collection ID '${e}' passed to function collectionGroup(). Collection IDs must not contain '/'.`);\n    return new bn(t, \n    /* converter= */ null, \n    /**\n * Creates a new Query for a collection group query that matches all documents\n * within the provided collection group.\n */\n    function(t) {\n        return new we(tt.emptyPath(), t);\n    }(e));\n}\n\nfunction An(t, e, ...n) {\n    if (t = l(t), \n    // We allow omission of 'pathString' but explicitly prohibit passing in both\n    // 'undefined' and 'null'.\n    1 === arguments.length && (e = _t.D()), st(\"doc\", \"path\", e), t instanceof fn) {\n        const r = tt.fromString(e, ...n);\n        return it(r), new vn(t, \n        /* converter= */ null, new rt(r));\n    }\n    {\n        if (!(t instanceof vn || t instanceof En)) throw new U(P, \"Expected first argument to collection() to be a CollectionReference, a DocumentReference or FirebaseFirestore\");\n        const r = t._path.child(tt.fromString(e, ...n));\n        return it(r), new vn(t.firestore, t instanceof En ? t.converter : null, new rt(r));\n    }\n}\n\n/**\n * Returns true if the provided references are equal.\n *\n * @param left - A reference to compare.\n * @param right - A reference to compare.\n * @returns true if the references point to the same location in the same\n * Firestore database.\n */ function Rn(t, e) {\n    return t = l(t), e = l(e), (t instanceof vn || t instanceof En) && (e instanceof vn || e instanceof En) && (t.firestore === e.firestore && t.path === e.path && t.converter === e.converter);\n}\n\n/**\n * Returns true if the provided queries point to the same collection and apply\n * the same constraints.\n *\n * @param left - A `Query` to compare.\n * @param right - A `Query` to compare.\n * @returns true if the references point to the same location in the same\n * Firestore database.\n */ function Pn(t, e) {\n    return t = l(t), e = l(e), t instanceof bn && e instanceof bn && (t.firestore === e.firestore && ve(t._query, e._query) && t.converter === e.converter);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An immutable object representing an array of bytes.\n */ class Vn {\n    /** @hideconstructor */\n    constructor(t) {\n        this._byteString = t;\n    }\n    /**\n     * Creates a new `Bytes` object from the given Base64 string, converting it to\n     * bytes.\n     *\n     * @param base64 - The Base64 string used to create the `Bytes` object.\n     */    static fromBase64String(t) {\n        try {\n            return new Vn($t.fromBase64String(t));\n        } catch (t) {\n            throw new U(P, \"Failed to construct data from Base64 string: \" + t);\n        }\n    }\n    /**\n     * Creates a new `Bytes` object from the given Uint8Array.\n     *\n     * @param array - The Uint8Array used to create the `Bytes` object.\n     */    static fromUint8Array(t) {\n        return new Vn($t.fromUint8Array(t));\n    }\n    /**\n     * Returns the underlying bytes as a Base64-encoded string.\n     *\n     * @returns The Base64-encoded string created from the `Bytes` object.\n     */    toBase64() {\n        return this._byteString.toBase64();\n    }\n    /**\n     * Returns the underlying bytes in a new `Uint8Array`.\n     *\n     * @returns The Uint8Array created from the `Bytes` object.\n     */    toUint8Array() {\n        return this._byteString.toUint8Array();\n    }\n    /**\n     * Returns a string representation of the `Bytes` object.\n     *\n     * @returns A string representation of the `Bytes` object.\n     */    toString() {\n        return \"Bytes(base64: \" + this.toBase64() + \")\";\n    }\n    /**\n     * Returns true if this `Bytes` object is equal to the provided one.\n     *\n     * @param other - The `Bytes` object to compare against.\n     * @returns true if this `Bytes` object is equal to the provided one.\n     */    isEqual(t) {\n        return this._byteString.isEqual(t._byteString);\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `FieldPath` refers to a field in a document. The path may consist of a\n * single field name (referring to a top-level field in the document), or a\n * list of field names (referring to a nested field in the document).\n *\n * Create a `FieldPath` by providing field names. If more than one field\n * name is provided, the path will point to a nested field in a document.\n */ class Nn {\n    /**\n     * Creates a `FieldPath` from the provided field names. If more than one field\n     * name is provided, the path will point to a nested field in a document.\n     *\n     * @param fieldNames - A list of field names.\n     */\n    constructor(...t) {\n        for (let e = 0; e < t.length; ++e) if (0 === t[e].length) throw new U(P, \"Invalid field name at argument $(i + 1). Field names must not be empty.\");\n        this._internalPath = new nt(t);\n    }\n    /**\n     * Returns true if this `FieldPath` is equal to the provided one.\n     *\n     * @param other - The `FieldPath` to compare against.\n     * @returns true if this `FieldPath` is equal to the provided one.\n     */    isEqual(t) {\n        return this._internalPath.isEqual(t._internalPath);\n    }\n}\n\n/**\n * Returns a special sentinel `FieldPath` to refer to the ID of a document.\n * It can be used in queries to sort or filter by the document ID.\n */ function Dn() {\n    return new Nn(\"__name__\");\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Sentinel values that can be used when writing document fields with `set()`\n * or `update()`.\n */ class $n {\n    /**\n     * @param _methodName - The public API endpoint that returns this class.\n     * @hideconstructor\n     */\n    constructor(t) {\n        this._methodName = t;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An immutable object representing a geographic location in Firestore. The\n * location is represented as latitude/longitude pair.\n *\n * Latitude values are in the range of [-90, 90].\n * Longitude values are in the range of [-180, 180].\n */ class xn {\n    /**\n     * Creates a new immutable `GeoPoint` object with the provided latitude and\n     * longitude values.\n     * @param latitude - The latitude as number between -90 and 90.\n     * @param longitude - The longitude as number between -180 and 180.\n     */\n    constructor(t, e) {\n        if (!isFinite(t) || t < -90 || t > 90) throw new U(P, \"Latitude must be a number between -90 and 90, but was: \" + t);\n        if (!isFinite(e) || e < -180 || e > 180) throw new U(P, \"Longitude must be a number between -180 and 180, but was: \" + e);\n        this._lat = t, this._long = e;\n    }\n    /**\n     * The latitude of this `GeoPoint` instance.\n     */    get latitude() {\n        return this._lat;\n    }\n    /**\n     * The longitude of this `GeoPoint` instance.\n     */    get longitude() {\n        return this._long;\n    }\n    /**\n     * Returns true if this `GeoPoint` is equal to the provided one.\n     *\n     * @param other - The `GeoPoint` to compare against.\n     * @returns true if this `GeoPoint` is equal to the provided one.\n     */    isEqual(t) {\n        return this._lat === t._lat && this._long === t._long;\n    }\n    /** Returns a JSON-serializable representation of this GeoPoint. */    toJSON() {\n        return {\n            latitude: this._lat,\n            longitude: this._long\n        };\n    }\n    /**\n     * Actually private to JS consumers of our API, so this function is prefixed\n     * with an underscore.\n     */    _compareTo(t) {\n        return gt(this._lat, t._lat) || gt(this._long, t._long);\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const Fn = /^__.*__$/;\n\n/** The result of parsing document data (e.g. for a setData call). */ class Sn {\n    constructor(t, e, n) {\n        this.data = t, this.fieldMask = e, this.fieldTransforms = n;\n    }\n    toMutation(t, e) {\n        return null !== this.fieldMask ? new $e(t, this.data, this.fieldMask, e, this.fieldTransforms) : new De(t, this.data, e, this.fieldTransforms);\n    }\n}\n\n/** The result of parsing \"update\" data (i.e. for an updateData call). */ class qn {\n    constructor(t, \n    // The fieldMask does not include document transforms.\n    e, n) {\n        this.data = t, this.fieldMask = e, this.fieldTransforms = n;\n    }\n    toMutation(t, e) {\n        return new $e(t, this.data, this.fieldMask, e, this.fieldTransforms);\n    }\n}\n\nfunction On(t) {\n    switch (t) {\n      case 0 /* Set */ :\n // fall through\n              case 2 /* MergeSet */ :\n // fall through\n              case 1 /* Update */ :\n        return !0;\n\n      case 3 /* Argument */ :\n      case 4 /* ArrayArgument */ :\n        return !1;\n\n      default:\n        throw b();\n    }\n}\n\n/** A \"context\" object passed around while parsing user data. */ class kn {\n    /**\n     * Initializes a ParseContext with the given source and path.\n     *\n     * @param settings - The settings for the parser.\n     * @param databaseId - The database ID of the Firestore instance.\n     * @param serializer - The serializer to use to generate the Value proto.\n     * @param ignoreUndefinedProperties - Whether to ignore undefined properties\n     * rather than throw.\n     * @param fieldTransforms - A mutable list of field transforms encountered\n     * while parsing the data.\n     * @param fieldMask - A mutable list of field paths encountered while parsing\n     * the data.\n     *\n     * TODO(b/34871131): We don't support array paths right now, so path can be\n     * null to indicate the context represents any location within an array (in\n     * which case certain features will not work and errors will be somewhat\n     * compromised).\n     */\n    constructor(t, e, n, r, s, i) {\n        this.settings = t, this.databaseId = e, this.L = n, this.ignoreUndefinedProperties = r, \n        // Minor hack: If fieldTransforms is undefined, we assume this is an\n        // external call and we need to validate the entire path.\n        void 0 === s && this.nt(), this.fieldTransforms = s || [], this.fieldMask = i || [];\n    }\n    get path() {\n        return this.settings.path;\n    }\n    get rt() {\n        return this.settings.rt;\n    }\n    /** Returns a new context with the specified settings overwritten. */    st(t) {\n        return new kn(Object.assign(Object.assign({}, this.settings), t), this.databaseId, this.L, this.ignoreUndefinedProperties, this.fieldTransforms, this.fieldMask);\n    }\n    it(t) {\n        var e;\n        const n = null === (e = this.path) || void 0 === e ? void 0 : e.child(t), r = this.st({\n            path: n,\n            ot: !1\n        });\n        return r.ut(t), r;\n    }\n    ct(t) {\n        var e;\n        const n = null === (e = this.path) || void 0 === e ? void 0 : e.child(t), r = this.st({\n            path: n,\n            ot: !1\n        });\n        return r.nt(), r;\n    }\n    at(t) {\n        // TODO(b/34871131): We don't support array paths right now; so make path\n        // undefined.\n        return this.st({\n            path: void 0,\n            ot: !0\n        });\n    }\n    ht(t) {\n        return rr(t, this.settings.methodName, this.settings.lt || !1, this.path, this.settings.ft);\n    }\n    /** Returns 'true' if 'fieldPath' was traversed when creating this context. */    contains(t) {\n        return void 0 !== this.fieldMask.find((e => t.isPrefixOf(e))) || void 0 !== this.fieldTransforms.find((e => t.isPrefixOf(e.field)));\n    }\n    nt() {\n        // TODO(b/34871131): Remove null check once we have proper paths for fields\n        // within arrays.\n        if (this.path) for (let t = 0; t < this.path.length; t++) this.ut(this.path.get(t));\n    }\n    ut(t) {\n        if (0 === t.length) throw this.ht(\"Document fields must not be empty\");\n        if (On(this.rt) && Fn.test(t)) throw this.ht('Document fields cannot begin and end with \"__\"');\n    }\n}\n\n/**\n * Helper for parsing raw user input (provided via the API) into internal model\n * classes.\n */ class Cn {\n    constructor(t, e, n) {\n        this.databaseId = t, this.ignoreUndefinedProperties = e, this.L = n || en(t);\n    }\n    /** Creates a new top-level parse context. */    dt(t, e, n, r = !1) {\n        return new kn({\n            rt: t,\n            methodName: e,\n            ft: n,\n            path: nt.emptyPath(),\n            ot: !1,\n            lt: r\n        }, this.databaseId, this.L, this.ignoreUndefinedProperties);\n    }\n}\n\nfunction Ln(t) {\n    const e = t._freezeSettings(), n = en(t._databaseId);\n    return new Cn(t._databaseId, !!e.ignoreUndefinedProperties, n);\n}\n\n/** Parse document data from a set() call. */ function Mn(t, e, n, r, s, i = {}) {\n    const o = t.dt(i.merge || i.mergeFields ? 2 /* MergeSet */ : 0 /* Set */ , e, n, s);\n    Zn(\"Data must be an object, but it was:\", o, r);\n    const u = Jn(r, o);\n    let c, a;\n    if (i.merge) c = new Dt(o.fieldMask), a = o.fieldTransforms; else if (i.mergeFields) {\n        const t = [];\n        for (const r of i.mergeFields) {\n            const s = tr(e, r, n);\n            if (!o.contains(s)) throw new U(P, `Field '${s}' is specified in your field mask but missing from your input data.`);\n            sr(t, s) || t.push(s);\n        }\n        c = new Dt(t), a = o.fieldTransforms.filter((t => c.covers(t.field)));\n    } else c = null, a = o.fieldTransforms;\n    return new Sn(new Jt(u), c, a);\n}\n\nclass Un extends $n {\n    _toFieldTransform(t) {\n        if (2 /* MergeSet */ !== t.rt) throw 1 /* Update */ === t.rt ? t.ht(`${this._methodName}() can only appear at the top level of your update data`) : t.ht(`${this._methodName}() cannot be used with set() unless you pass {merge:true}`);\n        // No transform to add for a delete, but we need to add it to our\n        // fieldMask so it gets deleted.\n        return t.fieldMask.push(t.path), null;\n    }\n    isEqual(t) {\n        return t instanceof Un;\n    }\n}\n\n/**\n * Creates a child context for parsing SerializableFieldValues.\n *\n * This is different than calling `ParseContext.contextWith` because it keeps\n * the fieldTransforms and fieldMask separate.\n *\n * The created context has its `dataSource` set to `UserDataSource.Argument`.\n * Although these values are used with writes, any elements in these FieldValues\n * are not considered writes since they cannot contain any FieldValue sentinels,\n * etc.\n *\n * @param fieldValue - The sentinel FieldValue for which to create a child\n *     context.\n * @param context - The parent context.\n * @param arrayElement - Whether or not the FieldValue has an array.\n */ function jn(t, e, n) {\n    return new kn({\n        rt: 3 /* Argument */ ,\n        ft: e.settings.ft,\n        methodName: t._methodName,\n        ot: n\n    }, e.databaseId, e.L, e.ignoreUndefinedProperties);\n}\n\nclass Bn extends $n {\n    _toFieldTransform(t) {\n        return new Pe(t.path, new Ie);\n    }\n    isEqual(t) {\n        return t instanceof Bn;\n    }\n}\n\nclass Qn extends $n {\n    constructor(t, e) {\n        super(t), this.wt = e;\n    }\n    _toFieldTransform(t) {\n        const e = jn(this, t, \n        /*array=*/ !0), n = this.wt.map((t => Hn(t, e))), r = new Te(n);\n        return new Pe(t.path, r);\n    }\n    isEqual(t) {\n        // TODO(mrschmidt): Implement isEquals\n        return this === t;\n    }\n}\n\nclass zn extends $n {\n    constructor(t, e) {\n        super(t), this.wt = e;\n    }\n    _toFieldTransform(t) {\n        const e = jn(this, t, \n        /*array=*/ !0), n = this.wt.map((t => Hn(t, e))), r = new Ae(n);\n        return new Pe(t.path, r);\n    }\n    isEqual(t) {\n        // TODO(mrschmidt): Implement isEquals\n        return this === t;\n    }\n}\n\nclass Gn extends $n {\n    constructor(t, e) {\n        super(t), this.yt = e;\n    }\n    _toFieldTransform(t) {\n        const e = new Re(t.L, be(t.L, this.yt));\n        return new Pe(t.path, e);\n    }\n    isEqual(t) {\n        // TODO(mrschmidt): Implement isEquals\n        return this === t;\n    }\n}\n\n/** Parse update data from an update() call. */ function Wn(t, e, n, r) {\n    const s = t.dt(1 /* Update */ , e, n);\n    Zn(\"Data must be an object, but it was:\", s, r);\n    const i = [], o = Jt.empty();\n    Tt(r, ((t, r) => {\n        const u = nr(e, t, n);\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                r = l(r);\n        const c = s.ct(u);\n        if (r instanceof Un) \n        // Add it to the field mask, but don't add anything to updateData.\n        i.push(u); else {\n            const t = Hn(r, c);\n            null != t && (i.push(u), o.set(u, t));\n        }\n    }));\n    const u = new Dt(i);\n    return new qn(o, u, s.fieldTransforms);\n}\n\n/** Parse update data from a list of field/value arguments. */ function Kn(t, e, n, r, s, i) {\n    const o = t.dt(1 /* Update */ , e, n), u = [ tr(e, r, n) ], c = [ s ];\n    if (i.length % 2 != 0) throw new U(P, `Function ${e}() needs to be called with an even number of arguments that alternate between field names and values.`);\n    for (let t = 0; t < i.length; t += 2) u.push(tr(e, i[t])), c.push(i[t + 1]);\n    const a = [], h = Jt.empty();\n    // We iterate in reverse order to pick the last value for a field if the\n    // user specified the field multiple times.\n    for (let t = u.length - 1; t >= 0; --t) if (!sr(a, u[t])) {\n        const e = u[t];\n        let n = c[t];\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                n = l(n);\n        const r = o.ct(e);\n        if (n instanceof Un) \n        // Add it to the field mask, but don't add anything to updateData.\n        a.push(e); else {\n            const t = Hn(n, r);\n            null != t && (a.push(e), h.set(e, t));\n        }\n    }\n    const f = new Dt(a);\n    return new qn(h, f, o.fieldTransforms);\n}\n\n/**\n * Parse a \"query value\" (e.g. value in a where filter or a value in a cursor\n * bound).\n *\n * @param allowArrays - Whether the query value is an array that may directly\n * contain additional arrays (e.g. the operand of an `in` query).\n */ function Yn(t, e, n, r = !1) {\n    return Hn(n, t.dt(r ? 4 /* ArrayArgument */ : 3 /* Argument */ , e));\n}\n\n/**\n * Parses user data to Protobuf Values.\n *\n * @param input - Data to be parsed.\n * @param context - A context object representing the current path being parsed,\n * the source of the data being parsed, etc.\n * @returns The parsed value, or null if the value was a FieldValue sentinel\n * that should not be included in the resulting parsed data.\n */ function Hn(t, e) {\n    if (Xn(\n    // Unwrap the API type from the Compat SDK. This will return the API type\n    // from firestore-exp.\n    t = l(t))) return Zn(\"Unsupported field value:\", e, t), Jn(t, e);\n    if (t instanceof $n) \n    // FieldValues usually parse into transforms (except deleteField())\n    // in which case we do not want to include this field in our parsed data\n    // (as doing so will overwrite the field directly prior to the transform\n    // trying to transform it). So we don't add this location to\n    // context.fieldMask and we return null as our parsing result.\n    /**\n * \"Parses\" the provided FieldValueImpl, adding any necessary transforms to\n * context.fieldTransforms.\n */\n    return function(t, e) {\n        // Sentinels are only supported with writes, and not within arrays.\n        if (!On(e.rt)) throw e.ht(`${t._methodName}() can only be used with update() and set()`);\n        if (!e.path) throw e.ht(`${t._methodName}() is not currently supported inside arrays`);\n        const n = t._toFieldTransform(e);\n        n && e.fieldTransforms.push(n);\n    }\n    /**\n * Helper to parse a scalar value (i.e. not an Object, Array, or FieldValue)\n *\n * @returns The parsed value\n */ (t, e), null;\n    if (void 0 === t && e.ignoreUndefinedProperties) \n    // If the input is undefined it can never participate in the fieldMask, so\n    // don't handle this below. If `ignoreUndefinedProperties` is false,\n    // `parseScalarValue` will reject an undefined value.\n    return null;\n    if (\n    // If context.path is null we are inside an array and we don't support\n    // field mask paths more granular than the top-level array.\n    e.path && e.fieldMask.push(e.path), t instanceof Array) {\n        // TODO(b/34871131): Include the path containing the array in the error\n        // message.\n        // In the case of IN queries, the parsed data is an array (representing\n        // the set of values to be included for the IN query) that may directly\n        // contain additional arrays (each representing an individual field\n        // value), so we disable this validation.\n        if (e.settings.ot && 4 /* ArrayArgument */ !== e.rt) throw e.ht(\"Nested arrays are not supported\");\n        return function(t, e) {\n            const n = [];\n            let r = 0;\n            for (const s of t) {\n                let t = Hn(s, e.at(r));\n                null == t && (\n                // Just include nulls in the array for fields being replaced with a\n                // sentinel.\n                t = {\n                    nullValue: \"NULL_VALUE\"\n                }), n.push(t), r++;\n            }\n            return {\n                arrayValue: {\n                    values: n\n                }\n            };\n        }(t, e);\n    }\n    return function(t, e) {\n        if (null === (t = l(t))) return {\n            nullValue: \"NULL_VALUE\"\n        };\n        if (\"number\" == typeof t) return be(e.L, t);\n        if (\"boolean\" == typeof t) return {\n            booleanValue: t\n        };\n        if (\"string\" == typeof t) return {\n            stringValue: t\n        };\n        if (t instanceof Date) {\n            const n = bt.fromDate(t);\n            return {\n                timestampValue: ke(e.L, n)\n            };\n        }\n        if (t instanceof bt) {\n            // Firestore backend truncates precision down to microseconds. To ensure\n            // offline mode works the same with regards to truncation, perform the\n            // truncation immediately without waiting for the backend to do that.\n            const n = new bt(t.seconds, 1e3 * Math.floor(t.nanoseconds / 1e3));\n            return {\n                timestampValue: ke(e.L, n)\n            };\n        }\n        if (t instanceof xn) return {\n            geoPointValue: {\n                latitude: t.latitude,\n                longitude: t.longitude\n            }\n        };\n        if (t instanceof Vn) return {\n            bytesValue: Ce(e.L, t._byteString)\n        };\n        if (t instanceof vn) {\n            const n = e.databaseId, r = t.firestore._databaseId;\n            if (!r.isEqual(n)) throw e.ht(`Document reference is for database ${r.projectId}/${r.database} but should be for database ${n.projectId}/${n.database}`);\n            return {\n                referenceValue: Ue(t.firestore._databaseId || e.databaseId, t._key.path)\n            };\n        }\n        throw e.ht(`Unsupported field value: ${ut(t)}`);\n    }\n    /**\n * Checks whether an object looks like a JSON object that should be converted\n * into a struct. Normal class/prototype instances are considered to look like\n * JSON objects since they should be converted to a struct value. Arrays, Dates,\n * GeoPoints, etc. are not considered to look like JSON objects since they map\n * to specific FieldValue types other than ObjectValue.\n */ (t, e);\n}\n\nfunction Jn(t, e) {\n    const n = {};\n    return !function(t) {\n        for (const e in t) if (Object.prototype.hasOwnProperty.call(t, e)) return !1;\n        return !0;\n    }(t) ? Tt(t, ((t, r) => {\n        const s = Hn(r, e.it(t));\n        null != s && (n[t] = s);\n    })) : \n    // If we encounter an empty object, we explicitly add it to the update\n    // mask to ensure that the server creates a map entry.\n    e.path && e.path.length > 0 && e.fieldMask.push(e.path), {\n        mapValue: {\n            fields: n\n        }\n    };\n}\n\nfunction Xn(t) {\n    return !(\"object\" != typeof t || null === t || t instanceof Array || t instanceof Date || t instanceof bt || t instanceof xn || t instanceof Vn || t instanceof vn || t instanceof $n);\n}\n\nfunction Zn(t, e, n) {\n    if (!Xn(n) || !function(t) {\n        return \"object\" == typeof t && null !== t && (Object.getPrototypeOf(t) === Object.prototype || null === Object.getPrototypeOf(t));\n    }(n)) {\n        const r = ut(n);\n        throw \"an object\" === r ? e.ht(t + \" a custom object\") : e.ht(t + \" \" + r);\n    }\n}\n\n/**\n * Helper that calls fromDotSeparatedString() but wraps any error thrown.\n */ function tr(t, e, n) {\n    if ((\n    // If required, replace the FieldPath Compat class with with the firestore-exp\n    // FieldPath.\n    e = l(e)) instanceof Nn) return e._internalPath;\n    if (\"string\" == typeof e) return nr(t, e);\n    throw rr(\"Field path arguments must be of type string or \", t, \n    /* hasConverter= */ !1, \n    /* path= */ void 0, n);\n}\n\n/**\n * Matches any characters in a field path string that are reserved.\n */ const er = new RegExp(\"[~\\\\*/\\\\[\\\\]]\");\n\n/**\n * Wraps fromDotSeparatedString with an error message about the method that\n * was thrown.\n * @param methodName - The publicly visible method name\n * @param path - The dot-separated string form of a field path which will be\n * split on dots.\n * @param targetDoc - The document against which the field path will be\n * evaluated.\n */ function nr(t, e, n) {\n    if (e.search(er) >= 0) throw rr(`Invalid field path (${e}). Paths must not contain '~', '*', '/', '[', or ']'`, t, \n    /* hasConverter= */ !1, \n    /* path= */ void 0, n);\n    try {\n        return new Nn(...e.split(\".\"))._internalPath;\n    } catch (r) {\n        throw rr(`Invalid field path (${e}). Paths must not be empty, begin with '.', end with '.', or contain '..'`, t, \n        /* hasConverter= */ !1, \n        /* path= */ void 0, n);\n    }\n}\n\nfunction rr(t, e, n, r, s) {\n    const i = r && !r.isEmpty(), o = void 0 !== s;\n    let u = `Function ${e}() called with invalid data`;\n    n && (u += \" (via `toFirestore()`)\"), u += \". \";\n    let c = \"\";\n    return (i || o) && (c += \" (found\", i && (c += ` in field ${r}`), o && (c += ` in document ${s}`), \n    c += \")\"), new U(P, u + t + c);\n}\n\n/** Checks `haystack` if FieldPath `needle` is present. Runs in O(n). */ function sr(t, e) {\n    return t.some((t => t.isEqual(e)));\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `DocumentSnapshot` contains data read from a document in your Firestore\n * database. The data can be extracted with `.data()` or `.get(<field>)` to\n * get a specific field.\n *\n * For a `DocumentSnapshot` that points to a non-existing document, any data\n * access will return 'undefined'. You can use the `exists()` method to\n * explicitly verify a document's existence.\n */ class ir {\n    // Note: This class is stripped down version of the DocumentSnapshot in\n    // the legacy SDK. The changes are:\n    // - No support for SnapshotMetadata.\n    // - No support for SnapshotOptions.\n    /** @hideconstructor protected */\n    constructor(t, e, n, r, s) {\n        this._firestore = t, this._userDataWriter = e, this._key = n, this._document = r, \n        this._converter = s;\n    }\n    /** Property of the `DocumentSnapshot` that provides the document's ID. */    get id() {\n        return this._key.path.lastSegment();\n    }\n    /**\n     * The `DocumentReference` for the document included in the `DocumentSnapshot`.\n     */    get ref() {\n        return new vn(this._firestore, this._converter, this._key);\n    }\n    /**\n     * Signals whether or not the document at the snapshot's location exists.\n     *\n     * @returns true if the document exists.\n     */    exists() {\n        return null !== this._document;\n    }\n    /**\n     * Retrieves all fields in the document as an `Object`. Returns `undefined` if\n     * the document doesn't exist.\n     *\n     * @returns An `Object` containing all fields in the document or `undefined`\n     * if the document doesn't exist.\n     */    data() {\n        if (this._document) {\n            if (this._converter) {\n                // We only want to use the converter and create a new DocumentSnapshot\n                // if a converter has been provided.\n                const t = new or(this._firestore, this._userDataWriter, this._key, this._document, \n                /* converter= */ null);\n                return this._converter.fromFirestore(t);\n            }\n            return this._userDataWriter.convertValue(this._document.data.value);\n        }\n    }\n    /**\n     * Retrieves the field specified by `fieldPath`. Returns `undefined` if the\n     * document or field doesn't exist.\n     *\n     * @param fieldPath - The path (for example 'foo' or 'foo.bar') to a specific\n     * field.\n     * @returns The data at the specified field location or undefined if no such\n     * field exists in the document.\n     */\n    // We are using `any` here to avoid an explicit cast by our users.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    get(t) {\n        if (this._document) {\n            const e = this._document.data.field(ar(\"DocumentSnapshot.get\", t));\n            if (null !== e) return this._userDataWriter.convertValue(e);\n        }\n    }\n}\n\n/**\n * A `QueryDocumentSnapshot` contains data read from a document in your\n * Firestore database as part of a query. The document is guaranteed to exist\n * and its data can be extracted with `.data()` or `.get(<field>)` to get a\n * specific field.\n *\n * A `QueryDocumentSnapshot` offers the same API surface as a\n * `DocumentSnapshot`. Since query results contain only existing documents, the\n * `exists` property will always be true and `data()` will never return\n * 'undefined'.\n */ class or extends ir {\n    /**\n     * Retrieves all fields in the document as an `Object`.\n     *\n     * @override\n     * @returns An `Object` containing all fields in the document.\n     */\n    data() {\n        return super.data();\n    }\n}\n\n/**\n * A `QuerySnapshot` contains zero or more `DocumentSnapshot` objects\n * representing the results of a query. The documents can be accessed as an\n * array via the `docs` property or enumerated using the `forEach` method. The\n * number of documents can be determined via the `empty` and `size`\n * properties.\n */ class ur {\n    /** @hideconstructor */\n    constructor(t, e) {\n        this._docs = e, this.query = t;\n    }\n    /** An array of all the documents in the `QuerySnapshot`. */    get docs() {\n        return [ ...this._docs ];\n    }\n    /** The number of documents in the `QuerySnapshot`. */    get size() {\n        return this.docs.length;\n    }\n    /** True if there are no documents in the `QuerySnapshot`. */    get empty() {\n        return 0 === this.docs.length;\n    }\n    /**\n     * Enumerates all of the documents in the `QuerySnapshot`.\n     *\n     * @param callback - A callback to be called with a `QueryDocumentSnapshot` for\n     * each document in the snapshot.\n     * @param thisArg - The `this` binding for the callback.\n     */    forEach(t, e) {\n        this._docs.forEach(t, e);\n    }\n}\n\n/**\n * Returns true if the provided snapshots are equal.\n *\n * @param left - A snapshot to compare.\n * @param right - A snapshot to compare.\n * @returns true if the snapshots are equal.\n */ function cr(t, e) {\n    return t = l(t), e = l(e), t instanceof ir && e instanceof ir ? t._firestore === e._firestore && t._key.isEqual(e._key) && (null === t._document ? null === e._document : t._document.isEqual(e._document)) && t._converter === e._converter : t instanceof ur && e instanceof ur && (Pn(t.query, e.query) && vt(t.docs, e.docs, cr));\n}\n\n/**\n * Helper that calls `fromDotSeparatedString()` but wraps any error thrown.\n */ function ar(t, e) {\n    return \"string\" == typeof e ? nr(t, e) : e instanceof Nn ? e._internalPath : e._delegate._internalPath;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `QueryConstraint` is used to narrow the set of documents returned by a\n * Firestore query. `QueryConstraint`s are created by invoking {@link where},\n * {@link orderBy}, {@link (startAt:1)}, {@link (startAfter:1)}, {@link\n * endBefore:1}, {@link (endAt:1)}, {@link limit} or {@link limitToLast} and\n * can then be passed to {@link query} to create a new query instance that\n * also contains this `QueryConstraint`.\n */\nclass hr {}\n\n/**\n * Creates a new immutable instance of {@link Query} that is extended to also include\n * additional query constraints.\n *\n * @param query - The {@link Query} instance to use as a base for the new constraints.\n * @param queryConstraints - The list of {@link QueryConstraint}s to apply.\n * @throws if any of the provided query constraints cannot be combined with the\n * existing or new constraints.\n */ function lr(t, ...e) {\n    for (const n of e) t = n._apply(t);\n    return t;\n}\n\nclass fr extends hr {\n    constructor(t, e, n) {\n        super(), this._t = t, this.gt = e, this.vt = n, this.type = \"where\";\n    }\n    _apply(t) {\n        const e = Ln(t.firestore), n = function(t, e, n, r, s, i, o) {\n            let u;\n            if (s.isKeyField()) {\n                if (\"array-contains\" /* ARRAY_CONTAINS */ === i || \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ === i) throw new U(P, `Invalid Query. You can't perform '${i}' queries on documentId().`);\n                if (\"in\" /* IN */ === i || \"not-in\" /* NOT_IN */ === i) {\n                    Pr(o, i);\n                    const e = [];\n                    for (const n of o) e.push(Rr(r, t, n));\n                    u = {\n                        arrayValue: {\n                            values: e\n                        }\n                    };\n                } else u = Rr(r, t, o);\n            } else \"in\" /* IN */ !== i && \"not-in\" /* NOT_IN */ !== i && \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ !== i || Pr(o, i), \n            u = Yn(n, e, o, \n            /* allowArrays= */ \"in\" /* IN */ === i || \"not-in\" /* NOT_IN */ === i);\n            const c = ee.create(s, i, u);\n            return function(t, e) {\n                if (e.q()) {\n                    const n = pe(t);\n                    if (null !== n && !n.isEqual(e.field)) throw new U(P, `Invalid query. All where filters with an inequality (<, <=, !=, not-in, >, or >=) must be on the same field. But you have inequality filters on '${n.toString()}' and '${e.field.toString()}'`);\n                    const r = me(t);\n                    null !== r && Vr(t, e.field, r);\n                }\n                const n = function(t, e) {\n                    for (const n of t.filters) if (e.indexOf(n.op) >= 0) return n.op;\n                    return null;\n                }(t, \n                /**\n * Given an operator, returns the set of operators that cannot be used with it.\n *\n * Operators in a query must adhere to the following set of rules:\n * 1. Only one array operator is allowed.\n * 2. Only one disjunctive operator is allowed.\n * 3. `NOT_EQUAL` cannot be used with another `NOT_EQUAL` operator.\n * 4. `NOT_IN` cannot be used with array, disjunctive, or `NOT_EQUAL` operators.\n *\n * Array operators: `ARRAY_CONTAINS`, `ARRAY_CONTAINS_ANY`\n * Disjunctive operators: `IN`, `ARRAY_CONTAINS_ANY`, `NOT_IN`\n */\n                function(t) {\n                    switch (t) {\n                      case \"!=\" /* NOT_EQUAL */ :\n                        return [ \"!=\" /* NOT_EQUAL */ , \"not-in\" /* NOT_IN */ ];\n\n                      case \"array-contains\" /* ARRAY_CONTAINS */ :\n                        return [ \"array-contains\" /* ARRAY_CONTAINS */ , \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ , \"not-in\" /* NOT_IN */ ];\n\n                      case \"in\" /* IN */ :\n                        return [ \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ , \"in\" /* IN */ , \"not-in\" /* NOT_IN */ ];\n\n                      case \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ :\n                        return [ \"array-contains\" /* ARRAY_CONTAINS */ , \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ , \"in\" /* IN */ , \"not-in\" /* NOT_IN */ ];\n\n                      case \"not-in\" /* NOT_IN */ :\n                        return [ \"array-contains\" /* ARRAY_CONTAINS */ , \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ , \"in\" /* IN */ , \"not-in\" /* NOT_IN */ , \"!=\" /* NOT_EQUAL */ ];\n\n                      default:\n                        return [];\n                    }\n                }(e.op));\n                if (null !== n) \n                // Special case when it's a duplicate op to give a slightly clearer error message.\n                throw n === e.op ? new U(P, `Invalid query. You cannot use more than one '${e.op.toString()}' filter.`) : new U(P, `Invalid query. You cannot use '${e.op.toString()}' filters with '${n.toString()}' filters.`);\n            }(t, c), c;\n        }(t._query, \"where\", e, t.firestore._databaseId, this._t, this.gt, this.vt);\n        return new bn(t.firestore, t.converter, function(t, e) {\n            const n = t.filters.concat([ e ]);\n            return new we(t.path, t.collectionGroup, t.explicitOrderBy.slice(), n, t.limit, t.limitType, t.startAt, t.endAt);\n        }(t._query, n));\n    }\n}\n\n/**\n * Creates a {@link QueryConstraint} that enforces that documents must contain the\n * specified field and that the value should satisfy the relation constraint\n * provided.\n *\n * @param fieldPath - The path to compare\n * @param opStr - The operation string (e.g \"&lt;\", \"&lt;=\", \"==\", \"&lt;\",\n *   \"&lt;=\", \"!=\").\n * @param value - The value for comparison\n * @returns The created {@link Query}.\n */ function dr(t, e, n) {\n    const r = e, s = ar(\"where\", t);\n    return new fr(s, r, n);\n}\n\nclass wr extends hr {\n    constructor(t, e) {\n        super(), this._t = t, this.bt = e, this.type = \"orderBy\";\n    }\n    _apply(t) {\n        const e = function(t, e, n) {\n            if (null !== t.startAt) throw new U(P, \"Invalid query. You must not call startAt() or startAfter() before calling orderBy().\");\n            if (null !== t.endAt) throw new U(P, \"Invalid query. You must not call endAt() or endBefore() before calling orderBy().\");\n            const r = new le(e, n);\n            return function(t, e) {\n                if (null === me(t)) {\n                    // This is the first order by. It must match any inequality.\n                    const n = pe(t);\n                    null !== n && Vr(t, n, e.field);\n                }\n            }(t, r), r;\n        }\n        /**\n * Create a `Bound` from a query and a document.\n *\n * Note that the `Bound` will always include the key of the document\n * and so only the provided document will compare equal to the returned\n * position.\n *\n * Will throw if the document does not contain all fields of the order by\n * of the query or if any of the fields in the order by are an uncommitted\n * server timestamp.\n */ (t._query, this._t, this.bt);\n        return new bn(t.firestore, t.converter, function(t, e) {\n            // TODO(dimond): validate that orderBy does not list the same key twice.\n            const n = t.explicitOrderBy.concat([ e ]);\n            return new we(t.path, t.collectionGroup, n, t.filters.slice(), t.limit, t.limitType, t.startAt, t.endAt);\n        }(t._query, e));\n    }\n}\n\n/**\n * Creates a {@link QueryConstraint} that sorts the query result by the\n * specified field, optionally in descending order instead of ascending.\n *\n * @param fieldPath - The field to sort by.\n * @param directionStr - Optional direction to sort by ('asc' or 'desc'). If\n * not specified, order will be ascending.\n * @returns The created {@link Query}.\n */ function mr(t, e = \"asc\") {\n    const n = e, r = ar(\"orderBy\", t);\n    return new wr(r, n);\n}\n\nclass pr extends hr {\n    constructor(t, e, n) {\n        super(), this.type = t, this.Et = e, this.It = n;\n    }\n    _apply(t) {\n        return new bn(t.firestore, t.converter, function(t, e, n) {\n            return new we(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), e, n, t.startAt, t.endAt);\n        }(t._query, this.Et, this.It));\n    }\n}\n\n/**\n * Creates a {@link QueryConstraint} that only returns the first matching documents.\n *\n * @param limit - The maximum number of items to return.\n * @returns The created {@link Query}.\n */ function yr(t) {\n    return at(\"limit\", t), new pr(\"limit\", t, \"F\" /* First */);\n}\n\n/**\n * Creates a {@link QueryConstraint} that only returns the last matching documents.\n *\n * You must specify at least one `orderBy` clause for `limitToLast` queries,\n * otherwise an exception will be thrown during execution.\n *\n * @param limit - The maximum number of items to return.\n * @returns The created {@link Query}.\n */ function _r(t) {\n    return at(\"limitToLast\", t), new pr(\"limitToLast\", t, \"L\" /* Last */);\n}\n\nclass gr extends hr {\n    constructor(t, e, n) {\n        super(), this.type = t, this.Tt = e, this.At = n;\n    }\n    _apply(t) {\n        const e = Ar(t, this.type, this.Tt, this.At);\n        return new bn(t.firestore, t.converter, function(t, e) {\n            return new we(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), t.limit, t.limitType, e, t.endAt);\n        }(t._query, e));\n    }\n}\n\nfunction vr(...t) {\n    return new gr(\"startAt\", t, \n    /*inclusive=*/ !0);\n}\n\nfunction br(...t) {\n    return new gr(\"startAfter\", t, \n    /*inclusive=*/ !1);\n}\n\nclass Er extends hr {\n    constructor(t, e, n) {\n        super(), this.type = t, this.Tt = e, this.At = n;\n    }\n    _apply(t) {\n        const e = Ar(t, this.type, this.Tt, this.At);\n        return new bn(t.firestore, t.converter, function(t, e) {\n            return new we(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), t.limit, t.limitType, t.startAt, e);\n        }(t._query, e));\n    }\n}\n\nfunction Ir(...t) {\n    return new Er(\"endBefore\", t, \n    /*inclusive=*/ !1);\n}\n\nfunction Tr(...t) {\n    return new Er(\"endAt\", t, /*inclusive=*/ !0);\n}\n\n/** Helper function to create a bound from a document or fields */ function Ar(t, e, n, r) {\n    if (n[0] = l(n[0]), n[0] instanceof ir) return function(t, e, n, r, s) {\n        if (!r) throw new U(N, `Can't use a DocumentSnapshot that doesn't exist for ${n}().`);\n        const i = [];\n        // Because people expect to continue/end a query at the exact document\n        // provided, we need to use the implicit sort order rather than the explicit\n        // sort order, because it's guaranteed to contain the document key. That way\n        // the position becomes unambiguous and the query continues/ends exactly at\n        // the provided document. Without the key (by using the explicit sort\n        // orders), multiple documents could match the position, yielding duplicate\n        // results.\n                for (const n of _e(t)) if (n.field.isKeyField()) i.push(zt(e, r.key)); else {\n            const t = r.data.field(n.field);\n            if (Ot(t)) throw new U(P, 'Invalid query. You are trying to start or end a query using a document for which the field \"' + n.field + '\" is an uncommitted server timestamp. (Since the value of this field is unknown, you cannot start/end a query with it.)');\n            if (null === t) {\n                const t = n.field.canonicalString();\n                throw new U(P, `Invalid query. You are trying to start or end a query using a document for which the field '${t}' (used as the orderBy) does not exist.`);\n            }\n            i.push(t);\n        }\n        return new he(i, s);\n    }\n    /**\n * Converts a list of field values to a `Bound` for the given query.\n */ (t._query, t.firestore._databaseId, e, n[0]._document, r);\n    {\n        const s = Ln(t.firestore);\n        return function(t, e, n, r, s, i) {\n            // Use explicit order by's because it has to match the query the user made\n            const o = t.explicitOrderBy;\n            if (s.length > o.length) throw new U(P, `Too many arguments provided to ${r}(). The number of arguments must be less than or equal to the number of orderBy() clauses`);\n            const u = [];\n            for (let i = 0; i < s.length; i++) {\n                const c = s[i];\n                if (o[i].field.isKeyField()) {\n                    if (\"string\" != typeof c) throw new U(P, `Invalid query. Expected a string for document ID in ${r}(), but got a ${typeof c}`);\n                    if (!ye(t) && -1 !== c.indexOf(\"/\")) throw new U(P, `Invalid query. When querying a collection and ordering by documentId(), the value passed to ${r}() must be a plain document ID, but '${c}' contains a slash.`);\n                    const n = t.path.child(tt.fromString(c));\n                    if (!rt.isDocumentKey(n)) throw new U(P, `Invalid query. When querying a collection group and ordering by documentId(), the value passed to ${r}() must result in a valid document path, but '${n}' is not because it contains an odd number of segments.`);\n                    const s = new rt(n);\n                    u.push(zt(e, s));\n                } else {\n                    const t = Yn(n, r, c);\n                    u.push(t);\n                }\n            }\n            return new he(u, i);\n        }\n        /**\n * Parses the given `documentIdValue` into a `ReferenceValue`, throwing\n * appropriate errors if the value is anything other than a `DocumentReference`\n * or `string`, or if the string is malformed.\n */ (t._query, t.firestore._databaseId, s, e, n, r);\n    }\n}\n\nfunction Rr(t, e, n) {\n    if (\"string\" == typeof (n = l(n))) {\n        if (\"\" === n) throw new U(P, \"Invalid query. When querying with documentId(), you must provide a valid document ID, but it was an empty string.\");\n        if (!ye(e) && -1 !== n.indexOf(\"/\")) throw new U(P, `Invalid query. When querying a collection by documentId(), you must provide a plain document ID, but '${n}' contains a '/' character.`);\n        const r = e.path.child(tt.fromString(n));\n        if (!rt.isDocumentKey(r)) throw new U(P, `Invalid query. When querying a collection group by documentId(), the value provided must result in a valid document path, but '${r}' is not because it has an odd number of segments (${r.length}).`);\n        return zt(t, new rt(r));\n    }\n    if (n instanceof vn) return zt(t, n._key);\n    throw new U(P, `Invalid query. When querying with documentId(), you must provide a valid string or a DocumentReference, but it was: ${ut(n)}.`);\n}\n\n/**\n * Validates that the value passed into a disjunctive filter satisfies all\n * array requirements.\n */ function Pr(t, e) {\n    if (!Array.isArray(t) || 0 === t.length) throw new U(P, `Invalid Query. A non-empty array is required for '${e.toString()}' filters.`);\n    if (t.length > 10) throw new U(P, `Invalid Query. '${e.toString()}' filters support a maximum of 10 elements in the value array.`);\n}\n\nfunction Vr(t, e, n) {\n    if (!n.isEqual(e)) throw new U(P, `Invalid query. You have a where filter with an inequality (<, <=, !=, not-in, >, or >=) on field '${e.toString()}' and so you must also use '${e.toString()}' as your first argument to orderBy(), but your first orderBy() is on field '${n.toString()}' instead.`);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Converts Firestore's internal types to the JavaScript types that we expose\n * to the user.\n *\n * @internal\n */\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Converts custom model object of type T into `DocumentData` by applying the\n * converter if it exists.\n *\n * This function is used when converting user objects to `DocumentData`\n * because we want to provide the user with a more specific error message if\n * their `set()` or fails due to invalid data originating from a `toFirestore()`\n * call.\n */\nfunction Nr(t, e, n) {\n    let r;\n    // Cast to `any` in order to satisfy the union type constraint on\n    // toFirestore().\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return r = t ? n && (n.merge || n.mergeFields) ? t.toFirestore(e, n) : t.toFirestore(e) : e, \n    r;\n}\n\nclass Dr extends class {\n    convertValue(t, e = \"none\") {\n        switch (Mt(t)) {\n          case 0 /* NullValue */ :\n            return null;\n\n          case 1 /* BooleanValue */ :\n            return t.booleanValue;\n\n          case 2 /* NumberValue */ :\n            return St(t.integerValue || t.doubleValue);\n\n          case 3 /* TimestampValue */ :\n            return this.convertTimestamp(t.timestampValue);\n\n          case 4 /* ServerTimestampValue */ :\n            return this.convertServerTimestamp(t, e);\n\n          case 5 /* StringValue */ :\n            return t.stringValue;\n\n          case 6 /* BlobValue */ :\n            return this.convertBytes(qt(t.bytesValue));\n\n          case 7 /* RefValue */ :\n            return this.convertReference(t.referenceValue);\n\n          case 8 /* GeoPointValue */ :\n            return this.convertGeoPoint(t.geoPointValue);\n\n          case 9 /* ArrayValue */ :\n            return this.convertArray(t.arrayValue, e);\n\n          case 10 /* ObjectValue */ :\n            return this.convertObject(t.mapValue, e);\n\n          default:\n            throw b();\n        }\n    }\n    convertObject(t, e) {\n        const n = {};\n        return Tt(t.fields, ((t, r) => {\n            n[t] = this.convertValue(r, e);\n        })), n;\n    }\n    convertGeoPoint(t) {\n        return new xn(St(t.latitude), St(t.longitude));\n    }\n    convertArray(t, e) {\n        return (t.values || []).map((t => this.convertValue(t, e)));\n    }\n    convertServerTimestamp(t, e) {\n        switch (e) {\n          case \"previous\":\n            const n = kt(t);\n            return null == n ? null : this.convertValue(n, e);\n\n          case \"estimate\":\n            return this.convertTimestamp(Ct(t));\n\n          default:\n            return null;\n        }\n    }\n    convertTimestamp(t) {\n        const e = Ft(t);\n        return new bt(e.seconds, e.nanos);\n    }\n    convertDocumentKey(t, e) {\n        const n = tt.fromString(t);\n        E(tn(n));\n        const r = new X(n.get(1), n.get(3)), s = new rt(n.popFirst(5));\n        return r.isEqual(e) || \n        // TODO(b/64130202): Somehow support foreign references.\n        _(`Document ${s} contains a document reference within a different database (${r.projectId}/${r.database}) which is not supported. It will be treated as a reference in the current database (${e.projectId}/${e.database}) instead.`), \n        s;\n    }\n} {\n    constructor(t) {\n        super(), this.firestore = t;\n    }\n    convertBytes(t) {\n        return new Vn(t);\n    }\n    convertReference(t) {\n        const e = this.convertDocumentKey(t, this.firestore._databaseId);\n        return new vn(this.firestore, /* converter= */ null, e);\n    }\n}\n\n/**\n * Reads the document referred to by the specified document reference.\n *\n * All documents are directly fetched from the server, even if the document was\n * previously read or modified. Recent modifications are only reflected in the\n * retrieved `DocumentSnapshot` if they have already been applied by the\n * backend. If the client is offline, the read fails. If you like to use\n * caching or see local modifications, please use the full Firestore SDK.\n *\n * @param reference - The reference of the document to fetch.\n * @returns A Promise resolved with a `DocumentSnapshot` containing the current\n * document contents.\n */ function $r(t) {\n    const e = hn((t = ct(t, vn)).firestore), n = new Dr(t.firestore);\n    return on(e, [ t._key ]).then((e => {\n        E(1 === e.length);\n        const r = e[0];\n        return new ir(t.firestore, n, t._key, r.isFoundDocument() ? r : null, t.converter);\n    }));\n}\n\n/**\n * Executes the query and returns the results as a {@link QuerySnapshot}.\n *\n * All queries are executed directly by the server, even if the the query was\n * previously executed. Recent modifications are only reflected in the retrieved\n * results if they have already been applied by the backend. If the client is\n * offline, the operation fails. To see previously cached result and local\n * modifications, use the full Firestore SDK.\n *\n * @param query - The `Query` to execute.\n * @returns A Promise that will be resolved with the results of the query.\n */ function xr(t) {\n    !function(t) {\n        if (\"L\" /* Last */ === t.limitType && 0 === t.explicitOrderBy.length) throw new U(k, \"limitToLast() queries require specifying at least one orderBy() clause\");\n    }((t = ct(t, bn))._query);\n    const e = hn(t.firestore), n = new Dr(t.firestore);\n    return un(e, t._query).then((e => {\n        const r = e.map((e => new or(t.firestore, n, e.key, e, t.converter)));\n        return \"L\" /* Last */ === t._query.limitType && \n        // Limit to last queries reverse the orderBy constraint that was\n        // specified by the user. As such, we need to reverse the order of the\n        // results to return the documents in the expected order.\n        r.reverse(), new ur(t, r);\n    }));\n}\n\nfunction Fr(t, e, n) {\n    const r = Nr((t = ct(t, vn)).converter, e, n), s = Mn(Ln(t.firestore), \"setDoc\", t._key, r, null !== t.converter, n);\n    return sn(hn(t.firestore), [ s.toMutation(t._key, Ve.none()) ]);\n}\n\nfunction Sr(t, e, n, ...r) {\n    const s = Ln((t = ct(t, vn)).firestore);\n    // For Compat types, we have to \"extract\" the underlying types before\n    // performing validation.\n        let i;\n    i = \"string\" == typeof (e = l(e)) || e instanceof Nn ? Kn(s, \"updateDoc\", t._key, e, n, r) : Wn(s, \"updateDoc\", t._key, e);\n    return sn(hn(t.firestore), [ i.toMutation(t._key, Ve.exists(!0)) ]);\n}\n\n/**\n * Deletes the document referred to by the specified `DocumentReference`.\n *\n * The deletion will only be reflected in document reads that occur after the\n * returned promise resolves. If the client is offline, the\n * delete fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @param reference - A reference to the document to delete.\n * @returns A `Promise` resolved once the document has been successfully\n * deleted from the backend.\n */ function qr(t) {\n    return sn(hn((t = ct(t, vn)).firestore), [ new xe(t._key, Ve.none()) ]);\n}\n\n/**\n * Add a new document to specified `CollectionReference` with the given data,\n * assigning it a document ID automatically.\n *\n * The result of this write will only be reflected in document reads that occur\n * after the returned promise resolves. If the client is offline, the\n * write fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @param reference - A reference to the collection to add this document to.\n * @param data - An Object containing the data for the new document.\n * @throws Error - If the provided input is not a valid Firestore document.\n * @returns A `Promise` resolved with a `DocumentReference` pointing to the\n * newly created document after it has been written to the backend.\n */ function Or(t, e) {\n    const n = An(t = ct(t, En)), r = Nr(t.converter, e), s = Mn(Ln(t.firestore), \"addDoc\", n._key, r, null !== n.converter, {});\n    return sn(hn(t.firestore), [ s.toMutation(n._key, Ve.exists(!1)) ]).then((() => n));\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Calculates the number of documents in the result set of the given query,\n * without actually downloading the documents.\n *\n * Using this function to count the documents is efficient because only the\n * final count, not the documents' data, is downloaded. This function can even\n * count the documents if the result set would be prohibitively large to\n * download entirely (e.g. thousands of documents).\n *\n * @param query - The query whose result set size to calculate.\n * @returns A Promise that will be resolved with the count; the count can be\n * retrieved from `snapshot.data().count`, where `snapshot` is the\n * `AggregateQuerySnapshot` to which the returned Promise resolves.\n */ function kr(t) {\n    const e = ct(t.firestore, fn), n = hn(e), r = new Dr(e);\n    return new gn(t, n, r).run();\n}\n\n/**\n * Compares two `AggregateQuerySnapshot` instances for equality.\n *\n * Two `AggregateQuerySnapshot` instances are considered \"equal\" if they have\n * underlying queries that compare equal, and the same data.\n *\n * @param left - The first `AggregateQuerySnapshot` to compare.\n * @param right - The second `AggregateQuerySnapshot` to compare.\n *\n * @returns `true` if the objects are \"equal\", as defined above, or `false`\n * otherwise.\n */ function Cr(t, e) {\n    return Pn(t.query, e.query) && f(t.data(), e.data());\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns a sentinel for use with {@link @firebase/firestore/lite#(updateDoc:1)} or\n * {@link @firebase/firestore/lite#(setDoc:1)} with `{merge: true}` to mark a field for deletion.\n */ function Lr() {\n    return new Un(\"deleteField\");\n}\n\n/**\n * Returns a sentinel used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link @firebase/firestore/lite#(updateDoc:1)} to\n * include a server-generated timestamp in the written data.\n */ function Mr() {\n    return new Bn(\"serverTimestamp\");\n}\n\n/**\n * Returns a special value that can be used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link\n * @firebase/firestore/lite#(updateDoc:1)} that tells the server to union the given elements with any array\n * value that already exists on the server. Each specified element that doesn't\n * already exist in the array will be added to the end. If the field being\n * modified is not already an array it will be overwritten with an array\n * containing exactly the specified elements.\n *\n * @param elements - The elements to union into the array.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`.\n */ function Ur(...t) {\n    // NOTE: We don't actually parse the data until it's used in set() or\n    // update() since we'd need the Firestore instance to do this.\n    return new Qn(\"arrayUnion\", t);\n}\n\n/**\n * Returns a special value that can be used with {@link (setDoc:1)} or {@link\n * updateDoc:1} that tells the server to remove the given elements from any\n * array value that already exists on the server. All instances of each element\n * specified will be removed from the array. If the field being modified is not\n * already an array it will be overwritten with an empty array.\n *\n * @param elements - The elements to remove from the array.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`\n */ function jr(...t) {\n    // NOTE: We don't actually parse the data until it's used in set() or\n    // update() since we'd need the Firestore instance to do this.\n    return new zn(\"arrayRemove\", t);\n}\n\n/**\n * Returns a special value that can be used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link\n * @firebase/firestore/lite#(updateDoc:1)} that tells the server to increment the field's current value by\n * the given value.\n *\n * If either the operand or the current field value uses floating point\n * precision, all arithmetic follows IEEE 754 semantics. If both values are\n * integers, values outside of JavaScript's safe number range\n * (`Number.MIN_SAFE_INTEGER` to `Number.MAX_SAFE_INTEGER`) are also subject to\n * precision loss. Furthermore, once processed by the Firestore backend, all\n * integer operations are capped between -2^63 and 2^63-1.\n *\n * If the current field value is not of type `number`, or if the field does not\n * yet exist, the transformation sets the field to the given value.\n *\n * @param n - The value to increment by.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`\n */ function Br(t) {\n    return new Gn(\"increment\", t);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A write batch, used to perform multiple writes as a single atomic unit.\n *\n * A `WriteBatch` object can be acquired by calling {@link writeBatch}. It\n * provides methods for adding writes to the write batch. None of the writes\n * will be committed (or visible locally) until {@link WriteBatch.commit} is\n * called.\n */ class Qr {\n    /** @hideconstructor */\n    constructor(t, e) {\n        this._firestore = t, this._commitHandler = e, this._mutations = [], this._committed = !1, \n        this._dataReader = Ln(t);\n    }\n    set(t, e, n) {\n        this._verifyNotCommitted();\n        const r = zr(t, this._firestore), s = Nr(r.converter, e, n), i = Mn(this._dataReader, \"WriteBatch.set\", r._key, s, null !== r.converter, n);\n        return this._mutations.push(i.toMutation(r._key, Ve.none())), this;\n    }\n    update(t, e, n, ...r) {\n        this._verifyNotCommitted();\n        const s = zr(t, this._firestore);\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                let i;\n        return i = \"string\" == typeof (e = l(e)) || e instanceof Nn ? Kn(this._dataReader, \"WriteBatch.update\", s._key, e, n, r) : Wn(this._dataReader, \"WriteBatch.update\", s._key, e), \n        this._mutations.push(i.toMutation(s._key, Ve.exists(!0))), this;\n    }\n    /**\n     * Deletes the document referred to by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be deleted.\n     * @returns This `WriteBatch` instance. Used for chaining method calls.\n     */    delete(t) {\n        this._verifyNotCommitted();\n        const e = zr(t, this._firestore);\n        return this._mutations = this._mutations.concat(new xe(e._key, Ve.none())), this;\n    }\n    /**\n     * Commits all of the writes in this write batch as a single atomic unit.\n     *\n     * The result of these writes will only be reflected in document reads that\n     * occur after the returned promise resolves. If the client is offline, the\n     * write fails. If you would like to see local modifications or buffer writes\n     * until the client is online, use the full Firestore SDK.\n     *\n     * @returns A `Promise` resolved once all of the writes in the batch have been\n     * successfully written to the backend as an atomic unit (note that it won't\n     * resolve while you're offline).\n     */    commit() {\n        return this._verifyNotCommitted(), this._committed = !0, this._mutations.length > 0 ? this._commitHandler(this._mutations) : Promise.resolve();\n    }\n    _verifyNotCommitted() {\n        if (this._committed) throw new U(S, \"A write batch can no longer be used after commit() has been called.\");\n    }\n}\n\nfunction zr(t, e) {\n    if ((t = l(t)).firestore !== e) throw new U(P, \"Provided document reference is from a different Firestore instance.\");\n    return t;\n}\n\n/**\n * Creates a write batch, used for performing multiple writes as a single\n * atomic operation. The maximum number of writes allowed in a single WriteBatch\n * is 500.\n *\n * The result of these writes will only be reflected in document reads that\n * occur after the returned promise resolves. If the client is offline, the\n * write fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @returns A `WriteBatch` that can be used to atomically execute multiple\n * writes.\n */ function Gr(t) {\n    const e = hn(t = ct(t, fn));\n    return new Qr(t, (t => sn(e, t)));\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Internal transaction object responsible for accumulating the mutations to\n * perform and the base versions for any documents read.\n */ class Wr {\n    constructor(t) {\n        this.datastore = t, \n        // The version of each document that was read during this transaction.\n        this.readVersions = new Map, this.mutations = [], this.committed = !1, \n        /**\n         * A deferred usage error that occurred previously in this transaction that\n         * will cause the transaction to fail once it actually commits.\n         */\n        this.lastWriteError = null, \n        /**\n         * Set of documents that have been written in the transaction.\n         *\n         * When there's more than one write to the same key in a transaction, any\n         * writes after the first are handled differently.\n         */\n        this.writtenDocs = new Set;\n    }\n    async lookup(t) {\n        if (this.ensureCommitNotCalled(), this.mutations.length > 0) throw new U(P, \"Firestore transactions require all reads to be executed before all writes.\");\n        const e = await on(this.datastore, t);\n        return e.forEach((t => this.recordVersion(t))), e;\n    }\n    set(t, e) {\n        this.write(e.toMutation(t, this.precondition(t))), this.writtenDocs.add(t.toString());\n    }\n    update(t, e) {\n        try {\n            this.write(e.toMutation(t, this.preconditionForUpdate(t)));\n        } catch (t) {\n            this.lastWriteError = t;\n        }\n        this.writtenDocs.add(t.toString());\n    }\n    delete(t) {\n        this.write(new xe(t, this.precondition(t))), this.writtenDocs.add(t.toString());\n    }\n    async commit() {\n        if (this.ensureCommitNotCalled(), this.lastWriteError) throw this.lastWriteError;\n        const t = this.readVersions;\n        // For each mutation, note that the doc was written.\n                this.mutations.forEach((e => {\n            t.delete(e.key.toString());\n        })), \n        // For each document that was read but not written to, we want to perform\n        // a `verify` operation.\n        t.forEach(((t, e) => {\n            const n = rt.fromPath(e);\n            this.mutations.push(new Fe(n, this.precondition(n)));\n        })), await sn(this.datastore, this.mutations), this.committed = !0;\n    }\n    recordVersion(t) {\n        let e;\n        if (t.isFoundDocument()) e = t.version; else {\n            if (!t.isNoDocument()) throw b();\n            // Represent a deleted doc using SnapshotVersion.min().\n            e = Et.min();\n        }\n        const n = this.readVersions.get(t.key.toString());\n        if (n) {\n            if (!e.isEqual(n)) \n            // This transaction will fail no matter what.\n            throw new U(q, \"Document version changed between two reads.\");\n        } else this.readVersions.set(t.key.toString(), e);\n    }\n    /**\n     * Returns the version of this document when it was read in this transaction,\n     * as a precondition, or no precondition if it was not read.\n     */    precondition(t) {\n        const e = this.readVersions.get(t.toString());\n        return !this.writtenDocs.has(t.toString()) && e ? e.isEqual(Et.min()) ? Ve.exists(!1) : Ve.updateTime(e) : Ve.none();\n    }\n    /**\n     * Returns the precondition for a document if the operation is an update.\n     */    preconditionForUpdate(t) {\n        const e = this.readVersions.get(t.toString());\n        // The first time a document is written, we want to take into account the\n        // read time and existence\n                if (!this.writtenDocs.has(t.toString()) && e) {\n            if (e.isEqual(Et.min())) \n            // The document doesn't exist, so fail the transaction.\n            // This has to be validated locally because you can't send a\n            // precondition that a document does not exist without changing the\n            // semantics of the backend write to be an insert. This is the reverse\n            // of what we want, since we want to assert that the document doesn't\n            // exist but then send the update and have it fail. Since we can't\n            // express that to the backend, we have to validate locally.\n            // Note: this can change once we can send separate verify writes in the\n            // transaction.\n            throw new U(P, \"Can't update a document that doesn't exist.\");\n            // Document exists, base precondition on document update time.\n                        return Ve.updateTime(e);\n        }\n        // Document was not read, so we just use the preconditions for a blind\n        // update.\n        return Ve.exists(!0);\n    }\n    write(t) {\n        this.ensureCommitNotCalled(), this.mutations.push(t);\n    }\n    ensureCommitNotCalled() {}\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const Kr = {\n    maxAttempts: 5\n};\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * TransactionRunner encapsulates the logic needed to run and retry transactions\n * with backoff.\n */\nclass Yr {\n    constructor(t, e, n, r, s) {\n        this.asyncQueue = t, this.datastore = e, this.options = n, this.updateFunction = r, \n        this.deferred = s, this.Rt = n.maxAttempts, this.Pt = new nn(this.asyncQueue, \"transaction_retry\" /* TransactionRetry */);\n    }\n    /** Runs the transaction and sets the result on deferred. */    run() {\n        this.Rt -= 1, this.Vt();\n    }\n    Vt() {\n        this.Pt.J((async () => {\n            const t = new Wr(this.datastore), e = this.Nt(t);\n            e && e.then((e => {\n                this.asyncQueue.enqueueAndForget((() => t.commit().then((() => {\n                    this.deferred.resolve(e);\n                })).catch((t => {\n                    this.Dt(t);\n                }))));\n            })).catch((t => {\n                this.Dt(t);\n            }));\n        }));\n    }\n    Nt(t) {\n        try {\n            const e = this.updateFunction(t);\n            return !ht(e) && e.catch && e.then ? e : (this.deferred.reject(Error(\"Transaction callback must return a Promise\")), \n            null);\n        } catch (t) {\n            // Do not retry errors thrown by user provided updateFunction.\n            return this.deferred.reject(t), null;\n        }\n    }\n    Dt(t) {\n        this.Rt > 0 && this.$t(t) ? (this.Rt -= 1, this.asyncQueue.enqueueAndForget((() => (this.Vt(), \n        Promise.resolve())))) : this.deferred.reject(t);\n    }\n    $t(t) {\n        if (\"FirebaseError\" === t.name) {\n            // In transactions, the backend will fail outdated reads with FAILED_PRECONDITION and\n            // non-matching document versions with ABORTED. These errors should be retried.\n            const e = t.code;\n            return \"aborted\" === e || \"failed-precondition\" === e || !\n            /**\n * Determines whether an error code represents a permanent error when received\n * in response to a non-write operation.\n *\n * See isPermanentWriteError for classifying write errors.\n */\n            function(t) {\n                switch (t) {\n                  default:\n                    return b();\n\n                  case A:\n                  case R:\n                  case V:\n                  case F:\n                  case C:\n                  case L:\n // Unauthenticated means something went wrong with our token and we need\n                    // to retry with new credentials which will happen automatically.\n                                      case x:\n                    return !1;\n\n                  case P:\n                  case N:\n                  case D:\n                  case $:\n                  case S:\n // Aborted might be retried in some scenarios, but that is dependant on\n                    // the context and should handled individually by the calling code.\n                    // See https://cloud.google.com/apis/design/errors.\n                                      case q:\n                  case O:\n                  case k:\n                  case M:\n                    return !0;\n                }\n            }(e);\n        }\n        return !1;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** The Platform's 'document' implementation or null if not available. */ function Hr() {\n    // `document` is not always available, e.g. in ReactNative and WebWorkers.\n    // eslint-disable-next-line no-restricted-globals\n    return \"undefined\" != typeof document ? document : null;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents an operation scheduled to be run in the future on an AsyncQueue.\n *\n * It is created via DelayedOperation.createAndSchedule().\n *\n * Supports cancellation (via cancel()) and early execution (via skipDelay()).\n *\n * Note: We implement `PromiseLike` instead of `Promise`, as the `Promise` type\n * in newer versions of TypeScript defines `finally`, which is not available in\n * IE.\n */ class Jr {\n    constructor(t, e, n, r, s) {\n        this.asyncQueue = t, this.timerId = e, this.targetTimeMs = n, this.op = r, this.removalCallback = s, \n        this.deferred = new j, this.then = this.deferred.promise.then.bind(this.deferred.promise), \n        // It's normal for the deferred promise to be canceled (due to cancellation)\n        // and so we attach a dummy catch callback to avoid\n        // 'UnhandledPromiseRejectionWarning' log spam.\n        this.deferred.promise.catch((t => {}));\n    }\n    /**\n     * Creates and returns a DelayedOperation that has been scheduled to be\n     * executed on the provided asyncQueue after the provided delayMs.\n     *\n     * @param asyncQueue - The queue to schedule the operation on.\n     * @param id - A Timer ID identifying the type of operation this is.\n     * @param delayMs - The delay (ms) before the operation should be scheduled.\n     * @param op - The operation to run.\n     * @param removalCallback - A callback to be called synchronously once the\n     *   operation is executed or canceled, notifying the AsyncQueue to remove it\n     *   from its delayedOperations list.\n     *   PORTING NOTE: This exists to prevent making removeDelayedOperation() and\n     *   the DelayedOperation class public.\n     */    static createAndSchedule(t, e, n, r, s) {\n        const i = Date.now() + n, o = new Jr(t, e, i, r, s);\n        return o.start(n), o;\n    }\n    /**\n     * Starts the timer. This is called immediately after construction by\n     * createAndSchedule().\n     */    start(t) {\n        this.timerHandle = setTimeout((() => this.handleDelayElapsed()), t);\n    }\n    /**\n     * Queues the operation to run immediately (if it hasn't already been run or\n     * canceled).\n     */    skipDelay() {\n        return this.handleDelayElapsed();\n    }\n    /**\n     * Cancels the operation if it hasn't already been executed or canceled. The\n     * promise will be rejected.\n     *\n     * As long as the operation has not yet been run, calling cancel() provides a\n     * guarantee that the operation will not be run.\n     */    cancel(t) {\n        null !== this.timerHandle && (this.clearTimeout(), this.deferred.reject(new U(A, \"Operation cancelled\" + (t ? \": \" + t : \"\"))));\n    }\n    handleDelayElapsed() {\n        this.asyncQueue.enqueueAndForget((() => null !== this.timerHandle ? (this.clearTimeout(), \n        this.op().then((t => this.deferred.resolve(t)))) : Promise.resolve()));\n    }\n    clearTimeout() {\n        null !== this.timerHandle && (this.removalCallback(this), clearTimeout(this.timerHandle), \n        this.timerHandle = null);\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class Xr {\n    constructor() {\n        // The last promise in the queue.\n        this.xt = Promise.resolve(), \n        // A list of retryable operations. Retryable operations are run in order and\n        // retried with backoff.\n        this.Ft = [], \n        // Is this AsyncQueue being shut down? Once it is set to true, it will not\n        // be changed again.\n        this.St = !1, \n        // Operations scheduled to be queued in the future. Operations are\n        // automatically removed after they are run or canceled.\n        this.qt = [], \n        // visible for testing\n        this.Ot = null, \n        // Flag set while there's an outstanding AsyncQueue operation, used for\n        // assertion sanity-checks.\n        this.kt = !1, \n        // Enabled during shutdown on Safari to prevent future access to IndexedDB.\n        this.Ct = !1, \n        // List of TimerIds to fast-forward delays for.\n        this.Lt = [], \n        // Backoff timer used to schedule retries for retryable operations\n        this.Pt = new nn(this, \"async_queue_retry\" /* AsyncQueueRetry */), \n        // Visibility handler that triggers an immediate retry of all retryable\n        // operations. Meant to speed up recovery when we regain file system access\n        // after page comes into foreground.\n        this.Mt = () => {\n            const t = Hr();\n            t && y(\"AsyncQueue\", \"Visibility state changed to \" + t.visibilityState), this.Pt.Z();\n        };\n        const t = Hr();\n        t && \"function\" == typeof t.addEventListener && t.addEventListener(\"visibilitychange\", this.Mt);\n    }\n    get isShuttingDown() {\n        return this.St;\n    }\n    /**\n     * Adds a new operation to the queue without waiting for it to complete (i.e.\n     * we ignore the Promise result).\n     */    enqueueAndForget(t) {\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        this.enqueue(t);\n    }\n    enqueueAndForgetEvenWhileRestricted(t) {\n        this.Ut(), \n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        this.jt(t);\n    }\n    enterRestrictedMode(t) {\n        if (!this.St) {\n            this.St = !0, this.Ct = t || !1;\n            const e = Hr();\n            e && \"function\" == typeof e.removeEventListener && e.removeEventListener(\"visibilitychange\", this.Mt);\n        }\n    }\n    enqueue(t) {\n        if (this.Ut(), this.St) \n        // Return a Promise which never resolves.\n        return new Promise((() => {}));\n        // Create a deferred Promise that we can return to the callee. This\n        // allows us to return a \"hanging Promise\" only to the callee and still\n        // advance the queue even when the operation is not run.\n                const e = new j;\n        return this.jt((() => this.St && this.Ct ? Promise.resolve() : (t().then(e.resolve, e.reject), \n        e.promise))).then((() => e.promise));\n    }\n    enqueueRetryable(t) {\n        this.enqueueAndForget((() => (this.Ft.push(t), this.Bt())));\n    }\n    /**\n     * Runs the next operation from the retryable queue. If the operation fails,\n     * reschedules with backoff.\n     */    async Bt() {\n        if (0 !== this.Ft.length) {\n            try {\n                await this.Ft[0](), this.Ft.shift(), this.Pt.reset();\n            } catch (t) {\n                if (!\n                /**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n                /** Verifies whether `e` is an IndexedDbTransactionError. */\n                function(t) {\n                    // Use name equality, as instanceof checks on errors don't work with errors\n                    // that wrap other errors.\n                    return \"IndexedDbTransactionError\" === t.name;\n                }\n                /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ (t)) throw t;\n // Failure will be handled by AsyncQueue\n                                y(\"AsyncQueue\", \"Operation failed with retryable error: \" + t);\n            }\n            this.Ft.length > 0 && \n            // If there are additional operations, we re-schedule `retryNextOp()`.\n            // This is necessary to run retryable operations that failed during\n            // their initial attempt since we don't know whether they are already\n            // enqueued. If, for example, `op1`, `op2`, `op3` are enqueued and `op1`\n            // needs to  be re-run, we will run `op1`, `op1`, `op2` using the\n            // already enqueued calls to `retryNextOp()`. `op3()` will then run in the\n            // call scheduled here.\n            // Since `backoffAndRun()` cancels an existing backoff and schedules a\n            // new backoff on every call, there is only ever a single additional\n            // operation in the queue.\n            this.Pt.J((() => this.Bt()));\n        }\n    }\n    jt(t) {\n        const e = this.xt.then((() => (this.kt = !0, t().catch((t => {\n            this.Ot = t, this.kt = !1;\n            const e = \n            /**\n * Chrome includes Error.message in Error.stack. Other browsers do not.\n * This returns expected output of message + stack when available.\n * @param error - Error or FirestoreError\n */\n            function(t) {\n                let e = t.message || \"\";\n                t.stack && (e = t.stack.includes(t.message) ? t.stack : t.message + \"\\n\" + t.stack);\n                return e;\n            }\n            /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n            // TODO(mrschmidt) Consider using `BaseTransaction` as the base class in the\n            // legacy SDK.\n            /**\n * A reference to a transaction.\n *\n * The `Transaction` object passed to a transaction's `updateFunction` provides\n * the methods to read and write data within the transaction context. See\n * {@link runTransaction}.\n */ (t);\n            // Re-throw the error so that this.tail becomes a rejected Promise and\n            // all further attempts to chain (via .then) will just short-circuit\n            // and return the rejected Promise.\n            throw _(\"INTERNAL UNHANDLED ERROR: \", e), t;\n        })).then((t => (this.kt = !1, t))))));\n        return this.xt = e, e;\n    }\n    enqueueAfterDelay(t, e, n) {\n        this.Ut(), \n        // Fast-forward delays for timerIds that have been overriden.\n        this.Lt.indexOf(t) > -1 && (e = 0);\n        const r = Jr.createAndSchedule(this, t, e, n, (t => this.Qt(t)));\n        return this.qt.push(r), r;\n    }\n    Ut() {\n        this.Ot && b();\n    }\n    verifyOperationInProgress() {}\n    /**\n     * Waits until all currently queued tasks are finished executing. Delayed\n     * operations are not run.\n     */    async zt() {\n        // Operations in the queue prior to draining may have enqueued additional\n        // operations. Keep draining the queue until the tail is no longer advanced,\n        // which indicates that no more new operations were enqueued and that all\n        // operations were executed.\n        let t;\n        do {\n            t = this.xt, await t;\n        } while (t !== this.xt);\n    }\n    /**\n     * For Tests: Determine if a delayed operation with a particular TimerId\n     * exists.\n     */    Gt(t) {\n        for (const e of this.qt) if (e.timerId === t) return !0;\n        return !1;\n    }\n    /**\n     * For Tests: Runs some or all delayed operations early.\n     *\n     * @param lastTimerId - Delayed operations up to and including this TimerId\n     * will be drained. Pass TimerId.All to run all delayed operations.\n     * @returns a Promise that resolves once all operations have been run.\n     */    Wt(t) {\n        // Note that draining may generate more delayed ops, so we do that first.\n        return this.zt().then((() => {\n            // Run ops in the same order they'd run if they ran naturally.\n            this.qt.sort(((t, e) => t.targetTimeMs - e.targetTimeMs));\n            for (const e of this.qt) if (e.skipDelay(), \"all\" /* All */ !== t && e.timerId === t) break;\n            return this.zt();\n        }));\n    }\n    /**\n     * For Tests: Skip all subsequent delays for a timer id.\n     */    Kt(t) {\n        this.Lt.push(t);\n    }\n    /** Called once a DelayedOperation is run or canceled. */    Qt(t) {\n        // NOTE: indexOf / slice are O(n), but delayedOperations is expected to be small.\n        const e = this.qt.indexOf(t);\n        this.qt.splice(e, 1);\n    }\n}\n\nclass Zr {\n    /** @hideconstructor */\n    constructor(t, e) {\n        this._firestore = t, this._transaction = e, this._dataReader = Ln(t);\n    }\n    /**\n     * Reads the document referenced by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be read.\n     * @returns A `DocumentSnapshot` with the read data.\n     */    get(t) {\n        const e = zr(t, this._firestore), n = new Dr(this._firestore);\n        return this._transaction.lookup([ e._key ]).then((t => {\n            if (!t || 1 !== t.length) return b();\n            const r = t[0];\n            if (r.isFoundDocument()) return new ir(this._firestore, n, r.key, r, e.converter);\n            if (r.isNoDocument()) return new ir(this._firestore, n, e._key, null, e.converter);\n            throw b();\n        }));\n    }\n    set(t, e, n) {\n        const r = zr(t, this._firestore), s = Nr(r.converter, e, n), i = Mn(this._dataReader, \"Transaction.set\", r._key, s, null !== r.converter, n);\n        return this._transaction.set(r._key, i), this;\n    }\n    update(t, e, n, ...r) {\n        const s = zr(t, this._firestore);\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                let i;\n        return i = \"string\" == typeof (e = l(e)) || e instanceof Nn ? Kn(this._dataReader, \"Transaction.update\", s._key, e, n, r) : Wn(this._dataReader, \"Transaction.update\", s._key, e), \n        this._transaction.update(s._key, i), this;\n    }\n    /**\n     * Deletes the document referred to by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be deleted.\n     * @returns This `Transaction` instance. Used for chaining method calls.\n     */    delete(t) {\n        const e = zr(t, this._firestore);\n        return this._transaction.delete(e._key), this;\n    }\n}\n\n/**\n * Executes the given `updateFunction` and then attempts to commit the changes\n * applied within the transaction. If any document read within the transaction\n * has changed, Cloud Firestore retries the `updateFunction`. If it fails to\n * commit after 5 attempts, the transaction fails.\n *\n * The maximum number of writes allowed in a single transaction is 500.\n *\n * @param firestore - A reference to the Firestore database to run this\n * transaction against.\n * @param updateFunction - The function to execute within the transaction\n * context.\n * @param options - An options object to configure maximum number of attempts to\n * commit.\n * @returns If the transaction completed successfully or was explicitly aborted\n * (the `updateFunction` returned a failed promise), the promise returned by the\n * `updateFunction `is returned here. Otherwise, if the transaction failed, a\n * rejected promise with the corresponding failure error is returned.\n */ function ts(t, e, n) {\n    const r = hn(t = ct(t, fn)), s = Object.assign(Object.assign({}, Kr), n);\n    !function(t) {\n        if (t.maxAttempts < 1) throw new U(P, \"Max attempts must be at least 1\");\n    }(s);\n    const i = new j;\n    return new Yr(new Xr, r, s, (n => e(new Zr(t, n))), i).run(), i.promise;\n}\n\n/**\n * Firestore Lite\n *\n * @remarks Firestore Lite is a small online-only SDK that allows read\n * and write access to your Firestore database. All operations connect\n * directly to the backend, and `onSnapshot()` APIs are not supported.\n * @packageDocumentation\n */ !function(t) {\n    w = t;\n}(`${s}_lite`), n(new i(\"firestore/lite\", ((t, {instanceIdentifier: e, options: n}) => {\n    const r = t.getProvider(\"app\").getImmediate(), s = new fn(new G(t.getProvider(\"auth-internal\")), new H(t.getProvider(\"app-check-internal\")), function(t, e) {\n        if (!Object.prototype.hasOwnProperty.apply(t.options, [ \"projectId\" ])) throw new U(P, '\"projectId\" not provided in firebase.initializeApp.');\n        return new X(t.options.projectId, e);\n    }\n    /**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ (r, e), r);\n    return n && s._setSettings(n), s;\n}), \"PUBLIC\").setMultipleInstances(!0)), \n// RUNTIME_ENV and BUILD_TARGET are replaced by real values during the compilation\nr(\"firestore-lite\", \"3.7.2\", \"\"), r(\"firestore-lite\", \"3.7.2\", \"__BUILD_TARGET__\");\n\nexport { yn as AggregateField, _n as AggregateQuerySnapshot, Vn as Bytes, En as CollectionReference, vn as DocumentReference, ir as DocumentSnapshot, Nn as FieldPath, $n as FieldValue, fn as Firestore, U as FirestoreError, xn as GeoPoint, bn as Query, hr as QueryConstraint, or as QueryDocumentSnapshot, ur as QuerySnapshot, bt as Timestamp, Zr as Transaction, Qr as WriteBatch, Or as addDoc, Cr as aggregateQuerySnapshotEqual, jr as arrayRemove, Ur as arrayUnion, In as collection, Tn as collectionGroup, mn as connectFirestoreEmulator, qr as deleteDoc, Lr as deleteField, An as doc, Dn as documentId, Tr as endAt, Ir as endBefore, kr as getCount, $r as getDoc, xr as getDocs, wn as getFirestore, Br as increment, dn as initializeFirestore, yr as limit, _r as limitToLast, mr as orderBy, lr as query, Pn as queryEqual, Rn as refEqual, ts as runTransaction, Mr as serverTimestamp, Fr as setDoc, p as setLogLevel, cr as snapshotEqual, br as startAfter, vr as startAt, pn as terminate, Sr as updateDoc, dr as where, Gr as writeBatch };\n//# sourceMappingURL=index.browser.esm2017.js.map\n","/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AuthErrorMap, User } from '../model/public_types';\nimport { ErrorFactory, ErrorMap } from '@firebase/util';\n\nimport { IdTokenMfaResponse } from '../api/authentication/mfa';\nimport { AppName } from '../model/auth';\nimport { AuthCredential } from './credentials';\n\n/**\n * Enumeration of Firebase Auth error codes.\n *\n * @internal\n */\nexport const enum AuthErrorCode {\n  ADMIN_ONLY_OPERATION = 'admin-restricted-operation',\n  ARGUMENT_ERROR = 'argument-error',\n  APP_NOT_AUTHORIZED = 'app-not-authorized',\n  APP_NOT_INSTALLED = 'app-not-installed',\n  CAPTCHA_CHECK_FAILED = 'captcha-check-failed',\n  CODE_EXPIRED = 'code-expired',\n  CORDOVA_NOT_READY = 'cordova-not-ready',\n  CORS_UNSUPPORTED = 'cors-unsupported',\n  CREDENTIAL_ALREADY_IN_USE = 'credential-already-in-use',\n  CREDENTIAL_MISMATCH = 'custom-token-mismatch',\n  CREDENTIAL_TOO_OLD_LOGIN_AGAIN = 'requires-recent-login',\n  DEPENDENT_SDK_INIT_BEFORE_AUTH = 'dependent-sdk-initialized-before-auth',\n  DYNAMIC_LINK_NOT_ACTIVATED = 'dynamic-link-not-activated',\n  EMAIL_CHANGE_NEEDS_VERIFICATION = 'email-change-needs-verification',\n  EMAIL_EXISTS = 'email-already-in-use',\n  EMULATOR_CONFIG_FAILED = 'emulator-config-failed',\n  EXPIRED_OOB_CODE = 'expired-action-code',\n  EXPIRED_POPUP_REQUEST = 'cancelled-popup-request',\n  INTERNAL_ERROR = 'internal-error',\n  INVALID_API_KEY = 'invalid-api-key',\n  INVALID_APP_CREDENTIAL = 'invalid-app-credential',\n  INVALID_APP_ID = 'invalid-app-id',\n  INVALID_AUTH = 'invalid-user-token',\n  INVALID_AUTH_EVENT = 'invalid-auth-event',\n  INVALID_CERT_HASH = 'invalid-cert-hash',\n  INVALID_CODE = 'invalid-verification-code',\n  INVALID_CONTINUE_URI = 'invalid-continue-uri',\n  INVALID_CORDOVA_CONFIGURATION = 'invalid-cordova-configuration',\n  INVALID_CUSTOM_TOKEN = 'invalid-custom-token',\n  INVALID_DYNAMIC_LINK_DOMAIN = 'invalid-dynamic-link-domain',\n  INVALID_EMAIL = 'invalid-email',\n  INVALID_EMULATOR_SCHEME = 'invalid-emulator-scheme',\n  INVALID_IDP_RESPONSE = 'invalid-credential',\n  INVALID_MESSAGE_PAYLOAD = 'invalid-message-payload',\n  INVALID_MFA_SESSION = 'invalid-multi-factor-session',\n  INVALID_OAUTH_CLIENT_ID = 'invalid-oauth-client-id',\n  INVALID_OAUTH_PROVIDER = 'invalid-oauth-provider',\n  INVALID_OOB_CODE = 'invalid-action-code',\n  INVALID_ORIGIN = 'unauthorized-domain',\n  INVALID_PASSWORD = 'wrong-password',\n  INVALID_PERSISTENCE = 'invalid-persistence-type',\n  INVALID_PHONE_NUMBER = 'invalid-phone-number',\n  INVALID_PROVIDER_ID = 'invalid-provider-id',\n  INVALID_RECIPIENT_EMAIL = 'invalid-recipient-email',\n  INVALID_SENDER = 'invalid-sender',\n  INVALID_SESSION_INFO = 'invalid-verification-id',\n  INVALID_TENANT_ID = 'invalid-tenant-id',\n  LOGIN_BLOCKED = 'login-blocked',\n  MFA_INFO_NOT_FOUND = 'multi-factor-info-not-found',\n  MFA_REQUIRED = 'multi-factor-auth-required',\n  MISSING_ANDROID_PACKAGE_NAME = 'missing-android-pkg-name',\n  MISSING_APP_CREDENTIAL = 'missing-app-credential',\n  MISSING_AUTH_DOMAIN = 'auth-domain-config-required',\n  MISSING_CODE = 'missing-verification-code',\n  MISSING_CONTINUE_URI = 'missing-continue-uri',\n  MISSING_IFRAME_START = 'missing-iframe-start',\n  MISSING_IOS_BUNDLE_ID = 'missing-ios-bundle-id',\n  MISSING_OR_INVALID_NONCE = 'missing-or-invalid-nonce',\n  MISSING_MFA_INFO = 'missing-multi-factor-info',\n  MISSING_MFA_SESSION = 'missing-multi-factor-session',\n  MISSING_PHONE_NUMBER = 'missing-phone-number',\n  MISSING_SESSION_INFO = 'missing-verification-id',\n  MODULE_DESTROYED = 'app-deleted',\n  NEED_CONFIRMATION = 'account-exists-with-different-credential',\n  NETWORK_REQUEST_FAILED = 'network-request-failed',\n  NULL_USER = 'null-user',\n  NO_AUTH_EVENT = 'no-auth-event',\n  NO_SUCH_PROVIDER = 'no-such-provider',\n  OPERATION_NOT_ALLOWED = 'operation-not-allowed',\n  OPERATION_NOT_SUPPORTED = 'operation-not-supported-in-this-environment',\n  POPUP_BLOCKED = 'popup-blocked',\n  POPUP_CLOSED_BY_USER = 'popup-closed-by-user',\n  PROVIDER_ALREADY_LINKED = 'provider-already-linked',\n  QUOTA_EXCEEDED = 'quota-exceeded',\n  REDIRECT_CANCELLED_BY_USER = 'redirect-cancelled-by-user',\n  REDIRECT_OPERATION_PENDING = 'redirect-operation-pending',\n  REJECTED_CREDENTIAL = 'rejected-credential',\n  SECOND_FACTOR_ALREADY_ENROLLED = 'second-factor-already-in-use',\n  SECOND_FACTOR_LIMIT_EXCEEDED = 'maximum-second-factor-count-exceeded',\n  TENANT_ID_MISMATCH = 'tenant-id-mismatch',\n  TIMEOUT = 'timeout',\n  TOKEN_EXPIRED = 'user-token-expired',\n  TOO_MANY_ATTEMPTS_TRY_LATER = 'too-many-requests',\n  UNAUTHORIZED_DOMAIN = 'unauthorized-continue-uri',\n  UNSUPPORTED_FIRST_FACTOR = 'unsupported-first-factor',\n  UNSUPPORTED_PERSISTENCE = 'unsupported-persistence-type',\n  UNSUPPORTED_TENANT_OPERATION = 'unsupported-tenant-operation',\n  UNVERIFIED_EMAIL = 'unverified-email',\n  USER_CANCELLED = 'user-cancelled',\n  USER_DELETED = 'user-not-found',\n  USER_DISABLED = 'user-disabled',\n  USER_MISMATCH = 'user-mismatch',\n  USER_SIGNED_OUT = 'user-signed-out',\n  WEAK_PASSWORD = 'weak-password',\n  WEB_STORAGE_UNSUPPORTED = 'web-storage-unsupported',\n  ALREADY_INITIALIZED = 'already-initialized'\n}\n\nfunction _debugErrorMap(): ErrorMap<AuthErrorCode> {\n  return {\n    [AuthErrorCode.ADMIN_ONLY_OPERATION]:\n      'This operation is restricted to administrators only.',\n    [AuthErrorCode.ARGUMENT_ERROR]: '',\n    [AuthErrorCode.APP_NOT_AUTHORIZED]:\n      \"This app, identified by the domain where it's hosted, is not \" +\n      'authorized to use Firebase Authentication with the provided API key. ' +\n      'Review your key configuration in the Google API console.',\n    [AuthErrorCode.APP_NOT_INSTALLED]:\n      'The requested mobile application corresponding to the identifier (' +\n      'Android package name or iOS bundle ID) provided is not installed on ' +\n      'this device.',\n    [AuthErrorCode.CAPTCHA_CHECK_FAILED]:\n      'The reCAPTCHA response token provided is either invalid, expired, ' +\n      'already used or the domain associated with it does not match the list ' +\n      'of whitelisted domains.',\n    [AuthErrorCode.CODE_EXPIRED]:\n      'The SMS code has expired. Please re-send the verification code to try ' +\n      'again.',\n    [AuthErrorCode.CORDOVA_NOT_READY]: 'Cordova framework is not ready.',\n    [AuthErrorCode.CORS_UNSUPPORTED]: 'This browser is not supported.',\n    [AuthErrorCode.CREDENTIAL_ALREADY_IN_USE]:\n      'This credential is already associated with a different user account.',\n    [AuthErrorCode.CREDENTIAL_MISMATCH]:\n      'The custom token corresponds to a different audience.',\n    [AuthErrorCode.CREDENTIAL_TOO_OLD_LOGIN_AGAIN]:\n      'This operation is sensitive and requires recent authentication. Log in ' +\n      'again before retrying this request.',\n    [AuthErrorCode.DEPENDENT_SDK_INIT_BEFORE_AUTH]:\n      'Another Firebase SDK was initialized and is trying to use Auth before Auth is ' +\n      'initialized. Please be sure to call `initializeAuth` or `getAuth` before ' +\n      'starting any other Firebase SDK.',\n    [AuthErrorCode.DYNAMIC_LINK_NOT_ACTIVATED]:\n      'Please activate Dynamic Links in the Firebase Console and agree to the terms and ' +\n      'conditions.',\n    [AuthErrorCode.EMAIL_CHANGE_NEEDS_VERIFICATION]:\n      'Multi-factor users must always have a verified email.',\n    [AuthErrorCode.EMAIL_EXISTS]:\n      'The email address is already in use by another account.',\n    [AuthErrorCode.EMULATOR_CONFIG_FAILED]:\n      'Auth instance has already been used to make a network call. Auth can ' +\n      'no longer be configured to use the emulator. Try calling ' +\n      '\"connectAuthEmulator()\" sooner.',\n    [AuthErrorCode.EXPIRED_OOB_CODE]: 'The action code has expired.',\n    [AuthErrorCode.EXPIRED_POPUP_REQUEST]:\n      'This operation has been cancelled due to another conflicting popup being opened.',\n    [AuthErrorCode.INTERNAL_ERROR]: 'An internal AuthError has occurred.',\n    [AuthErrorCode.INVALID_APP_CREDENTIAL]:\n      'The phone verification request contains an invalid application verifier.' +\n      ' The reCAPTCHA token response is either invalid or expired.',\n    [AuthErrorCode.INVALID_APP_ID]:\n      'The mobile app identifier is not registed for the current project.',\n    [AuthErrorCode.INVALID_AUTH]:\n      \"This user's credential isn't valid for this project. This can happen \" +\n      \"if the user's token has been tampered with, or if the user isn't for \" +\n      'the project associated with this API key.',\n    [AuthErrorCode.INVALID_AUTH_EVENT]: 'An internal AuthError has occurred.',\n    [AuthErrorCode.INVALID_CODE]:\n      'The SMS verification code used to create the phone auth credential is ' +\n      'invalid. Please resend the verification code sms and be sure to use the ' +\n      'verification code provided by the user.',\n    [AuthErrorCode.INVALID_CONTINUE_URI]:\n      'The continue URL provided in the request is invalid.',\n    [AuthErrorCode.INVALID_CORDOVA_CONFIGURATION]:\n      'The following Cordova plugins must be installed to enable OAuth sign-in: ' +\n      'cordova-plugin-buildinfo, cordova-universal-links-plugin, ' +\n      'cordova-plugin-browsertab, cordova-plugin-inappbrowser and ' +\n      'cordova-plugin-customurlscheme.',\n    [AuthErrorCode.INVALID_CUSTOM_TOKEN]:\n      'The custom token format is incorrect. Please check the documentation.',\n    [AuthErrorCode.INVALID_DYNAMIC_LINK_DOMAIN]:\n      'The provided dynamic link domain is not configured or authorized for the current project.',\n    [AuthErrorCode.INVALID_EMAIL]: 'The email address is badly formatted.',\n    [AuthErrorCode.INVALID_EMULATOR_SCHEME]:\n      'Emulator URL must start with a valid scheme (http:// or https://).',\n    [AuthErrorCode.INVALID_API_KEY]:\n      'Your API key is invalid, please check you have copied it correctly.',\n    [AuthErrorCode.INVALID_CERT_HASH]:\n      'The SHA-1 certificate hash provided is invalid.',\n    [AuthErrorCode.INVALID_IDP_RESPONSE]:\n      'The supplied auth credential is malformed or has expired.',\n    [AuthErrorCode.INVALID_MESSAGE_PAYLOAD]:\n      'The email template corresponding to this action contains invalid characters in its message. ' +\n      'Please fix by going to the Auth email templates section in the Firebase Console.',\n    [AuthErrorCode.INVALID_MFA_SESSION]:\n      'The request does not contain a valid proof of first factor successful sign-in.',\n    [AuthErrorCode.INVALID_OAUTH_PROVIDER]:\n      'EmailAuthProvider is not supported for this operation. This operation ' +\n      'only supports OAuth providers.',\n    [AuthErrorCode.INVALID_OAUTH_CLIENT_ID]:\n      'The OAuth client ID provided is either invalid or does not match the ' +\n      'specified API key.',\n    [AuthErrorCode.INVALID_ORIGIN]:\n      'This domain is not authorized for OAuth operations for your Firebase ' +\n      'project. Edit the list of authorized domains from the Firebase console.',\n    [AuthErrorCode.INVALID_OOB_CODE]:\n      'The action code is invalid. This can happen if the code is malformed, ' +\n      'expired, or has already been used.',\n    [AuthErrorCode.INVALID_PASSWORD]:\n      'The password is invalid or the user does not have a password.',\n    [AuthErrorCode.INVALID_PERSISTENCE]:\n      'The specified persistence type is invalid. It can only be local, session or none.',\n    [AuthErrorCode.INVALID_PHONE_NUMBER]:\n      'The format of the phone number provided is incorrect. Please enter the ' +\n      'phone number in a format that can be parsed into E.164 format. E.164 ' +\n      'phone numbers are written in the format [+][country code][subscriber ' +\n      'number including area code].',\n    [AuthErrorCode.INVALID_PROVIDER_ID]:\n      'The specified provider ID is invalid.',\n    [AuthErrorCode.INVALID_RECIPIENT_EMAIL]:\n      'The email corresponding to this action failed to send as the provided ' +\n      'recipient email address is invalid.',\n    [AuthErrorCode.INVALID_SENDER]:\n      'The email template corresponding to this action contains an invalid sender email or name. ' +\n      'Please fix by going to the Auth email templates section in the Firebase Console.',\n    [AuthErrorCode.INVALID_SESSION_INFO]:\n      'The verification ID used to create the phone auth credential is invalid.',\n    [AuthErrorCode.INVALID_TENANT_ID]:\n      \"The Auth instance's tenant ID is invalid.\",\n    [AuthErrorCode.LOGIN_BLOCKED]:\n      'Login blocked by user-provided method: {$originalMessage}',\n    [AuthErrorCode.MISSING_ANDROID_PACKAGE_NAME]:\n      'An Android Package Name must be provided if the Android App is required to be installed.',\n    [AuthErrorCode.MISSING_AUTH_DOMAIN]:\n      'Be sure to include authDomain when calling firebase.initializeApp(), ' +\n      'by following the instructions in the Firebase console.',\n    [AuthErrorCode.MISSING_APP_CREDENTIAL]:\n      'The phone verification request is missing an application verifier ' +\n      'assertion. A reCAPTCHA response token needs to be provided.',\n    [AuthErrorCode.MISSING_CODE]:\n      'The phone auth credential was created with an empty SMS verification code.',\n    [AuthErrorCode.MISSING_CONTINUE_URI]:\n      'A continue URL must be provided in the request.',\n    [AuthErrorCode.MISSING_IFRAME_START]: 'An internal AuthError has occurred.',\n    [AuthErrorCode.MISSING_IOS_BUNDLE_ID]:\n      'An iOS Bundle ID must be provided if an App Store ID is provided.',\n    [AuthErrorCode.MISSING_OR_INVALID_NONCE]:\n      'The request does not contain a valid nonce. This can occur if the ' +\n      'SHA-256 hash of the provided raw nonce does not match the hashed nonce ' +\n      'in the ID token payload.',\n    [AuthErrorCode.MISSING_MFA_INFO]:\n      'No second factor identifier is provided.',\n    [AuthErrorCode.MISSING_MFA_SESSION]:\n      'The request is missing proof of first factor successful sign-in.',\n    [AuthErrorCode.MISSING_PHONE_NUMBER]:\n      'To send verification codes, provide a phone number for the recipient.',\n    [AuthErrorCode.MISSING_SESSION_INFO]:\n      'The phone auth credential was created with an empty verification ID.',\n    [AuthErrorCode.MODULE_DESTROYED]:\n      'This instance of FirebaseApp has been deleted.',\n    [AuthErrorCode.MFA_INFO_NOT_FOUND]:\n      'The user does not have a second factor matching the identifier provided.',\n    [AuthErrorCode.MFA_REQUIRED]:\n      'Proof of ownership of a second factor is required to complete sign-in.',\n    [AuthErrorCode.NEED_CONFIRMATION]:\n      'An account already exists with the same email address but different ' +\n      'sign-in credentials. Sign in using a provider associated with this ' +\n      'email address.',\n    [AuthErrorCode.NETWORK_REQUEST_FAILED]:\n      'A network AuthError (such as timeout, interrupted connection or unreachable host) has occurred.',\n    [AuthErrorCode.NO_AUTH_EVENT]: 'An internal AuthError has occurred.',\n    [AuthErrorCode.NO_SUCH_PROVIDER]:\n      'User was not linked to an account with the given provider.',\n    [AuthErrorCode.NULL_USER]:\n      'A null user object was provided as the argument for an operation which ' +\n      'requires a non-null user object.',\n    [AuthErrorCode.OPERATION_NOT_ALLOWED]:\n      'The given sign-in provider is disabled for this Firebase project. ' +\n      'Enable it in the Firebase console, under the sign-in method tab of the ' +\n      'Auth section.',\n    [AuthErrorCode.OPERATION_NOT_SUPPORTED]:\n      'This operation is not supported in the environment this application is ' +\n      'running on. \"location.protocol\" must be http, https or chrome-extension' +\n      ' and web storage must be enabled.',\n    [AuthErrorCode.POPUP_BLOCKED]:\n      'Unable to establish a connection with the popup. It may have been blocked by the browser.',\n    [AuthErrorCode.POPUP_CLOSED_BY_USER]:\n      'The popup has been closed by the user before finalizing the operation.',\n    [AuthErrorCode.PROVIDER_ALREADY_LINKED]:\n      'User can only be linked to one identity for the given provider.',\n    [AuthErrorCode.QUOTA_EXCEEDED]:\n      \"The project's quota for this operation has been exceeded.\",\n    [AuthErrorCode.REDIRECT_CANCELLED_BY_USER]:\n      'The redirect operation has been cancelled by the user before finalizing.',\n    [AuthErrorCode.REDIRECT_OPERATION_PENDING]:\n      'A redirect sign-in operation is already pending.',\n    [AuthErrorCode.REJECTED_CREDENTIAL]:\n      'The request contains malformed or mismatching credentials.',\n    [AuthErrorCode.SECOND_FACTOR_ALREADY_ENROLLED]:\n      'The second factor is already enrolled on this account.',\n    [AuthErrorCode.SECOND_FACTOR_LIMIT_EXCEEDED]:\n      'The maximum allowed number of second factors on a user has been exceeded.',\n    [AuthErrorCode.TENANT_ID_MISMATCH]:\n      \"The provided tenant ID does not match the Auth instance's tenant ID\",\n    [AuthErrorCode.TIMEOUT]: 'The operation has timed out.',\n    [AuthErrorCode.TOKEN_EXPIRED]:\n      \"The user's credential is no longer valid. The user must sign in again.\",\n    [AuthErrorCode.TOO_MANY_ATTEMPTS_TRY_LATER]:\n      'We have blocked all requests from this device due to unusual activity. ' +\n      'Try again later.',\n    [AuthErrorCode.UNAUTHORIZED_DOMAIN]:\n      'The domain of the continue URL is not whitelisted.  Please whitelist ' +\n      'the domain in the Firebase console.',\n    [AuthErrorCode.UNSUPPORTED_FIRST_FACTOR]:\n      'Enrolling a second factor or signing in with a multi-factor account requires sign-in with a supported first factor.',\n    [AuthErrorCode.UNSUPPORTED_PERSISTENCE]:\n      'The current environment does not support the specified persistence type.',\n    [AuthErrorCode.UNSUPPORTED_TENANT_OPERATION]:\n      'This operation is not supported in a multi-tenant context.',\n    [AuthErrorCode.UNVERIFIED_EMAIL]:\n      'The operation requires a verified email.',\n    [AuthErrorCode.USER_CANCELLED]:\n      'The user did not grant your application the permissions it requested.',\n    [AuthErrorCode.USER_DELETED]:\n      'There is no user record corresponding to this identifier. The user may ' +\n      'have been deleted.',\n    [AuthErrorCode.USER_DISABLED]:\n      'The user account has been disabled by an administrator.',\n    [AuthErrorCode.USER_MISMATCH]:\n      'The supplied credentials do not correspond to the previously signed in user.',\n    [AuthErrorCode.USER_SIGNED_OUT]: '',\n    [AuthErrorCode.WEAK_PASSWORD]:\n      'The password must be 6 characters long or more.',\n    [AuthErrorCode.WEB_STORAGE_UNSUPPORTED]:\n      'This browser is not supported or 3rd party cookies and data may be disabled.',\n    [AuthErrorCode.ALREADY_INITIALIZED]:\n      'initializeAuth() has already been called with ' +\n      'different options. To avoid this error, call initializeAuth() with the ' +\n      'same options as when it was originally called, or call getAuth() to return the' +\n      ' already initialized instance.'\n  };\n}\n\nexport interface ErrorMapRetriever extends AuthErrorMap {\n  (): ErrorMap<AuthErrorCode>;\n}\n\nfunction _prodErrorMap(): ErrorMap<AuthErrorCode> {\n  // We will include this one message in the prod error map since by the very\n  // nature of this error, developers will never be able to see the message\n  // using the debugErrorMap (which is installed during auth initialization).\n  return {\n    [AuthErrorCode.DEPENDENT_SDK_INIT_BEFORE_AUTH]:\n      'Another Firebase SDK was initialized and is trying to use Auth before Auth is ' +\n      'initialized. Please be sure to call `initializeAuth` or `getAuth` before ' +\n      'starting any other Firebase SDK.'\n  } as ErrorMap<AuthErrorCode>;\n}\n\n/**\n * A verbose error map with detailed descriptions for most error codes.\n *\n * See discussion at {@link AuthErrorMap}\n *\n * @public\n */\nexport const debugErrorMap: AuthErrorMap = _debugErrorMap;\n\n/**\n * A minimal error map with all verbose error messages stripped.\n *\n * See discussion at {@link AuthErrorMap}\n *\n * @public\n */\nexport const prodErrorMap: AuthErrorMap = _prodErrorMap;\n\nexport interface NamedErrorParams {\n  appName: AppName;\n  credential?: AuthCredential;\n  email?: string;\n  phoneNumber?: string;\n  tenantId?: string;\n  user?: User;\n  _serverResponse?: object;\n}\n\n/**\n * @internal\n */\ntype GenericAuthErrorParams = {\n  [key in Exclude<\n    AuthErrorCode,\n    | AuthErrorCode.ARGUMENT_ERROR\n    | AuthErrorCode.DEPENDENT_SDK_INIT_BEFORE_AUTH\n    | AuthErrorCode.INTERNAL_ERROR\n    | AuthErrorCode.MFA_REQUIRED\n    | AuthErrorCode.NO_AUTH_EVENT\n    | AuthErrorCode.OPERATION_NOT_SUPPORTED\n  >]: {\n    appName?: AppName;\n    email?: string;\n    phoneNumber?: string;\n    message?: string;\n  };\n};\n\n/**\n * @internal\n */\nexport interface AuthErrorParams extends GenericAuthErrorParams {\n  [AuthErrorCode.ARGUMENT_ERROR]: { appName?: AppName };\n  [AuthErrorCode.DEPENDENT_SDK_INIT_BEFORE_AUTH]: { appName?: AppName };\n  [AuthErrorCode.INTERNAL_ERROR]: { appName?: AppName };\n  [AuthErrorCode.LOGIN_BLOCKED]: {\n    appName?: AppName;\n    originalMessage?: string;\n  };\n  [AuthErrorCode.OPERATION_NOT_SUPPORTED]: { appName?: AppName };\n  [AuthErrorCode.NO_AUTH_EVENT]: { appName?: AppName };\n  [AuthErrorCode.MFA_REQUIRED]: {\n    appName: AppName;\n    _serverResponse: IdTokenMfaResponse;\n  };\n  [AuthErrorCode.INVALID_CORDOVA_CONFIGURATION]: {\n    appName: AppName;\n    missingPlugin?: string;\n  };\n}\n\nexport const _DEFAULT_AUTH_ERROR_FACTORY = new ErrorFactory<\n  AuthErrorCode,\n  AuthErrorParams\n>('auth', 'Firebase', _prodErrorMap());\n\n/**\n * A map of potential `Auth` error codes, for easier comparison with errors\n * thrown by the SDK.\n *\n * @remarks\n * Note that you can't tree-shake individual keys\n * in the map, so by using the map you might substantially increase your\n * bundle size.\n *\n * @public\n */\nexport const AUTH_ERROR_CODES_MAP_DO_NOT_USE_INTERNALLY = {\n  ADMIN_ONLY_OPERATION: 'auth/admin-restricted-operation',\n  ARGUMENT_ERROR: 'auth/argument-error',\n  APP_NOT_AUTHORIZED: 'auth/app-not-authorized',\n  APP_NOT_INSTALLED: 'auth/app-not-installed',\n  CAPTCHA_CHECK_FAILED: 'auth/captcha-check-failed',\n  CODE_EXPIRED: 'auth/code-expired',\n  CORDOVA_NOT_READY: 'auth/cordova-not-ready',\n  CORS_UNSUPPORTED: 'auth/cors-unsupported',\n  CREDENTIAL_ALREADY_IN_USE: 'auth/credential-already-in-use',\n  CREDENTIAL_MISMATCH: 'auth/custom-token-mismatch',\n  CREDENTIAL_TOO_OLD_LOGIN_AGAIN: 'auth/requires-recent-login',\n  DEPENDENT_SDK_INIT_BEFORE_AUTH: 'auth/dependent-sdk-initialized-before-auth',\n  DYNAMIC_LINK_NOT_ACTIVATED: 'auth/dynamic-link-not-activated',\n  EMAIL_CHANGE_NEEDS_VERIFICATION: 'auth/email-change-needs-verification',\n  EMAIL_EXISTS: 'auth/email-already-in-use',\n  EMULATOR_CONFIG_FAILED: 'auth/emulator-config-failed',\n  EXPIRED_OOB_CODE: 'auth/expired-action-code',\n  EXPIRED_POPUP_REQUEST: 'auth/cancelled-popup-request',\n  INTERNAL_ERROR: 'auth/internal-error',\n  INVALID_API_KEY: 'auth/invalid-api-key',\n  INVALID_APP_CREDENTIAL: 'auth/invalid-app-credential',\n  INVALID_APP_ID: 'auth/invalid-app-id',\n  INVALID_AUTH: 'auth/invalid-user-token',\n  INVALID_AUTH_EVENT: 'auth/invalid-auth-event',\n  INVALID_CERT_HASH: 'auth/invalid-cert-hash',\n  INVALID_CODE: 'auth/invalid-verification-code',\n  INVALID_CONTINUE_URI: 'auth/invalid-continue-uri',\n  INVALID_CORDOVA_CONFIGURATION: 'auth/invalid-cordova-configuration',\n  INVALID_CUSTOM_TOKEN: 'auth/invalid-custom-token',\n  INVALID_DYNAMIC_LINK_DOMAIN: 'auth/invalid-dynamic-link-domain',\n  INVALID_EMAIL: 'auth/invalid-email',\n  INVALID_EMULATOR_SCHEME: 'auth/invalid-emulator-scheme',\n  INVALID_IDP_RESPONSE: 'auth/invalid-credential',\n  INVALID_MESSAGE_PAYLOAD: 'auth/invalid-message-payload',\n  INVALID_MFA_SESSION: 'auth/invalid-multi-factor-session',\n  INVALID_OAUTH_CLIENT_ID: 'auth/invalid-oauth-client-id',\n  INVALID_OAUTH_PROVIDER: 'auth/invalid-oauth-provider',\n  INVALID_OOB_CODE: 'auth/invalid-action-code',\n  INVALID_ORIGIN: 'auth/unauthorized-domain',\n  INVALID_PASSWORD: 'auth/wrong-password',\n  INVALID_PERSISTENCE: 'auth/invalid-persistence-type',\n  INVALID_PHONE_NUMBER: 'auth/invalid-phone-number',\n  INVALID_PROVIDER_ID: 'auth/invalid-provider-id',\n  INVALID_RECIPIENT_EMAIL: 'auth/invalid-recipient-email',\n  INVALID_SENDER: 'auth/invalid-sender',\n  INVALID_SESSION_INFO: 'auth/invalid-verification-id',\n  INVALID_TENANT_ID: 'auth/invalid-tenant-id',\n  MFA_INFO_NOT_FOUND: 'auth/multi-factor-info-not-found',\n  MFA_REQUIRED: 'auth/multi-factor-auth-required',\n  MISSING_ANDROID_PACKAGE_NAME: 'auth/missing-android-pkg-name',\n  MISSING_APP_CREDENTIAL: 'auth/missing-app-credential',\n  MISSING_AUTH_DOMAIN: 'auth/auth-domain-config-required',\n  MISSING_CODE: 'auth/missing-verification-code',\n  MISSING_CONTINUE_URI: 'auth/missing-continue-uri',\n  MISSING_IFRAME_START: 'auth/missing-iframe-start',\n  MISSING_IOS_BUNDLE_ID: 'auth/missing-ios-bundle-id',\n  MISSING_OR_INVALID_NONCE: 'auth/missing-or-invalid-nonce',\n  MISSING_MFA_INFO: 'auth/missing-multi-factor-info',\n  MISSING_MFA_SESSION: 'auth/missing-multi-factor-session',\n  MISSING_PHONE_NUMBER: 'auth/missing-phone-number',\n  MISSING_SESSION_INFO: 'auth/missing-verification-id',\n  MODULE_DESTROYED: 'auth/app-deleted',\n  NEED_CONFIRMATION: 'auth/account-exists-with-different-credential',\n  NETWORK_REQUEST_FAILED: 'auth/network-request-failed',\n  NULL_USER: 'auth/null-user',\n  NO_AUTH_EVENT: 'auth/no-auth-event',\n  NO_SUCH_PROVIDER: 'auth/no-such-provider',\n  OPERATION_NOT_ALLOWED: 'auth/operation-not-allowed',\n  OPERATION_NOT_SUPPORTED: 'auth/operation-not-supported-in-this-environment',\n  POPUP_BLOCKED: 'auth/popup-blocked',\n  POPUP_CLOSED_BY_USER: 'auth/popup-closed-by-user',\n  PROVIDER_ALREADY_LINKED: 'auth/provider-already-linked',\n  QUOTA_EXCEEDED: 'auth/quota-exceeded',\n  REDIRECT_CANCELLED_BY_USER: 'auth/redirect-cancelled-by-user',\n  REDIRECT_OPERATION_PENDING: 'auth/redirect-operation-pending',\n  REJECTED_CREDENTIAL: 'auth/rejected-credential',\n  SECOND_FACTOR_ALREADY_ENROLLED: 'auth/second-factor-already-in-use',\n  SECOND_FACTOR_LIMIT_EXCEEDED: 'auth/maximum-second-factor-count-exceeded',\n  TENANT_ID_MISMATCH: 'auth/tenant-id-mismatch',\n  TIMEOUT: 'auth/timeout',\n  TOKEN_EXPIRED: 'auth/user-token-expired',\n  TOO_MANY_ATTEMPTS_TRY_LATER: 'auth/too-many-requests',\n  UNAUTHORIZED_DOMAIN: 'auth/unauthorized-continue-uri',\n  UNSUPPORTED_FIRST_FACTOR: 'auth/unsupported-first-factor',\n  UNSUPPORTED_PERSISTENCE: 'auth/unsupported-persistence-type',\n  UNSUPPORTED_TENANT_OPERATION: 'auth/unsupported-tenant-operation',\n  UNVERIFIED_EMAIL: 'auth/unverified-email',\n  USER_CANCELLED: 'auth/user-cancelled',\n  USER_DELETED: 'auth/user-not-found',\n  USER_DISABLED: 'auth/user-disabled',\n  USER_MISMATCH: 'auth/user-mismatch',\n  USER_SIGNED_OUT: 'auth/user-signed-out',\n  WEAK_PASSWORD: 'auth/weak-password',\n  WEB_STORAGE_UNSUPPORTED: 'auth/web-storage-unsupported',\n  ALREADY_INITIALIZED: 'auth/already-initialized'\n} as const;\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { _getProvider, FirebaseApp } from '@firebase/app';\nimport { deepEqual } from '@firebase/util';\nimport { Auth, Dependencies } from '../../model/public_types';\n\nimport { AuthErrorCode } from '../errors';\nimport { PersistenceInternal } from '../persistence';\nimport { _fail } from '../util/assert';\nimport { _getInstance } from '../util/instantiator';\nimport { AuthImpl } from './auth_impl';\n\n/**\n * Initializes an {@link Auth} instance with fine-grained control over\n * {@link Dependencies}.\n *\n * @remarks\n *\n * This function allows more control over the {@link Auth} instance than\n * {@link getAuth}. `getAuth` uses platform-specific defaults to supply\n * the {@link Dependencies}. In general, `getAuth` is the easiest way to\n * initialize Auth and works for most use cases. Use `initializeAuth` if you\n * need control over which persistence layer is used, or to minimize bundle\n * size if you're not using either `signInWithPopup` or `signInWithRedirect`.\n *\n * For example, if your app only uses anonymous accounts and you only want\n * accounts saved for the current session, initialize `Auth` with:\n *\n * ```js\n * const auth = initializeAuth(app, {\n *   persistence: browserSessionPersistence,\n *   popupRedirectResolver: undefined,\n * });\n * ```\n *\n * @public\n */\nexport function initializeAuth(app: FirebaseApp, deps?: Dependencies): Auth {\n  const provider = _getProvider(app, 'auth');\n\n  if (provider.isInitialized()) {\n    const auth = provider.getImmediate() as AuthImpl;\n    const initialOptions = provider.getOptions() as Dependencies;\n    if (deepEqual(initialOptions, deps ?? {})) {\n      return auth;\n    } else {\n      _fail(auth, AuthErrorCode.ALREADY_INITIALIZED);\n    }\n  }\n\n  const auth = provider.initialize({ options: deps }) as AuthImpl;\n\n  return auth;\n}\n\nexport function _initializeAuthInstance(\n  auth: AuthImpl,\n  deps?: Dependencies\n): void {\n  const persistence = deps?.persistence || [];\n  const hierarchy = (\n    Array.isArray(persistence) ? persistence : [persistence]\n  ).map<PersistenceInternal>(_getInstance);\n  if (deps?.errorMap) {\n    auth._updateErrorMap(deps.errorMap);\n  }\n\n  // This promise is intended to float; auth initialization happens in the\n  // background, meanwhile the auth object may be used by the app.\n  // eslint-disable-next-line @typescript-eslint/no-floating-promises\n  auth._initializeWithPersistence(hierarchy, deps?.popupRedirectResolver);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function _getCurrentUrl(): string {\n  return (typeof self !== 'undefined' && self.location?.href) || '';\n}\n\nexport function _isHttpOrHttps(): boolean {\n  return _getCurrentScheme() === 'http:' || _getCurrentScheme() === 'https:';\n}\n\nexport function _getCurrentScheme(): string | null {\n  return (typeof self !== 'undefined' && self.location?.protocol) || null;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { isBrowserExtension } from '@firebase/util';\nimport { _isHttpOrHttps } from './location';\n\n/**\n * Determine whether the browser is working online\n */\nexport function _isOnline(): boolean {\n  if (\n    typeof navigator !== 'undefined' &&\n    navigator &&\n    'onLine' in navigator &&\n    typeof navigator.onLine === 'boolean' &&\n    // Apply only for traditional web apps and Chrome extensions.\n    // This is especially true for Cordova apps which have unreliable\n    // navigator.onLine behavior unless cordova-plugin-network-information is\n    // installed which overwrites the native navigator.onLine value and\n    // defines navigator.connection.\n    (_isHttpOrHttps() || isBrowserExtension() || 'connection' in navigator)\n  ) {\n    return navigator.onLine;\n  }\n  // If we can't determine the state, assume it is online.\n  return true;\n}\n\nexport function _getUserLanguage(): string | null {\n  if (typeof navigator === 'undefined') {\n    return null;\n  }\n  const navigatorLanguage: NavigatorLanguage = navigator;\n  return (\n    // Most reliable, but only supported in Chrome/Firefox.\n    (navigatorLanguage.languages && navigatorLanguage.languages[0]) ||\n    // Supported in most browsers, but returns the language of the browser\n    // UI, not the language set in browser settings.\n    navigatorLanguage.language ||\n    // Couldn't determine language.\n    null\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { isMobileCordova, isReactNative } from '@firebase/util';\nimport { _isOnline } from './navigator';\nimport { debugAssert } from './assert';\n\nexport const enum DelayMin {\n  OFFLINE = 5000\n}\n\n/**\n * A structure to help pick between a range of long and short delay durations\n * depending on the current environment. In general, the long delay is used for\n * mobile environments whereas short delays are used for desktop environments.\n */\nexport class Delay {\n  // The default value for the offline delay timeout in ms.\n\n  private readonly isMobile: boolean;\n  constructor(\n    private readonly shortDelay: number,\n    private readonly longDelay: number\n  ) {\n    // Internal error when improperly initialized.\n    debugAssert(\n      longDelay > shortDelay,\n      'Short delay should be less than long delay!'\n    );\n    this.isMobile = isMobileCordova() || isReactNative();\n  }\n\n  get(): number {\n    if (!_isOnline()) {\n      // Pick the shorter timeout.\n      return Math.min(DelayMin.OFFLINE, this.shortDelay);\n    }\n    // If running in a mobile environment, return the long delay, otherwise\n    // return the short delay.\n    // This could be improved in the future to dynamically change based on other\n    // variables instead of just reading the current environment.\n    return this.isMobile ? this.longDelay : this.shortDelay;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ConfigInternal } from '../../model/auth';\nimport { debugAssert } from './assert';\n\nexport function _emulatorUrl(config: ConfigInternal, path?: string): string {\n  debugAssert(config.emulator, 'Emulator should always be set here');\n  const { url } = config.emulator;\n\n  if (!path) {\n    return url;\n  }\n\n  return `${url}${path.startsWith('/') ? path.slice(1) : path}`;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { debugFail } from './assert';\n\nexport class FetchProvider {\n  private static fetchImpl: typeof fetch | null;\n  private static headersImpl: typeof Headers | null;\n  private static responseImpl: typeof Response | null;\n\n  static initialize(\n    fetchImpl: typeof fetch,\n    headersImpl?: typeof Headers,\n    responseImpl?: typeof Response\n  ): void {\n    this.fetchImpl = fetchImpl;\n    if (headersImpl) {\n      this.headersImpl = headersImpl;\n    }\n    if (responseImpl) {\n      this.responseImpl = responseImpl;\n    }\n  }\n\n  static fetch(): typeof fetch {\n    if (this.fetchImpl) {\n      return this.fetchImpl;\n    }\n    if (typeof self !== 'undefined' && 'fetch' in self) {\n      return self.fetch;\n    }\n    debugFail(\n      'Could not find fetch implementation, make sure you call FetchProvider.initialize() with an appropriate polyfill'\n    );\n  }\n\n  static headers(): typeof Headers {\n    if (this.headersImpl) {\n      return this.headersImpl;\n    }\n    if (typeof self !== 'undefined' && 'Headers' in self) {\n      return self.Headers;\n    }\n    debugFail(\n      'Could not find Headers implementation, make sure you call FetchProvider.initialize() with an appropriate polyfill'\n    );\n  }\n\n  static response(): typeof Response {\n    if (this.responseImpl) {\n      return this.responseImpl;\n    }\n    if (typeof self !== 'undefined' && 'Response' in self) {\n      return self.Response;\n    }\n    debugFail(\n      'Could not find Response implementation, make sure you call FetchProvider.initialize() with an appropriate polyfill'\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AuthErrorCode } from '../core/errors';\n\n/**\n * Errors that can be returned by the backend\n */\nexport const enum ServerError {\n  ADMIN_ONLY_OPERATION = 'ADMIN_ONLY_OPERATION',\n  BLOCKING_FUNCTION_ERROR_RESPONSE = 'BLOCKING_FUNCTION_ERROR_RESPONSE',\n  CAPTCHA_CHECK_FAILED = 'CAPTCHA_CHECK_FAILED',\n  CORS_UNSUPPORTED = 'CORS_UNSUPPORTED',\n  CREDENTIAL_MISMATCH = 'CREDENTIAL_MISMATCH',\n  CREDENTIAL_TOO_OLD_LOGIN_AGAIN = 'CREDENTIAL_TOO_OLD_LOGIN_AGAIN',\n  DYNAMIC_LINK_NOT_ACTIVATED = 'DYNAMIC_LINK_NOT_ACTIVATED',\n  EMAIL_CHANGE_NEEDS_VERIFICATION = 'EMAIL_CHANGE_NEEDS_VERIFICATION',\n  EMAIL_EXISTS = 'EMAIL_EXISTS',\n  EMAIL_NOT_FOUND = 'EMAIL_NOT_FOUND',\n  EXPIRED_OOB_CODE = 'EXPIRED_OOB_CODE',\n  FEDERATED_USER_ID_ALREADY_LINKED = 'FEDERATED_USER_ID_ALREADY_LINKED',\n  INVALID_APP_CREDENTIAL = 'INVALID_APP_CREDENTIAL',\n  INVALID_APP_ID = 'INVALID_APP_ID',\n  INVALID_CERT_HASH = 'INVALID_CERT_HASH',\n  INVALID_CODE = 'INVALID_CODE',\n  INVALID_CONTINUE_URI = 'INVALID_CONTINUE_URI',\n  INVALID_CUSTOM_TOKEN = 'INVALID_CUSTOM_TOKEN',\n  INVALID_DYNAMIC_LINK_DOMAIN = 'INVALID_DYNAMIC_LINK_DOMAIN',\n  INVALID_EMAIL = 'INVALID_EMAIL',\n  INVALID_ID_TOKEN = 'INVALID_ID_TOKEN',\n  INVALID_IDP_RESPONSE = 'INVALID_IDP_RESPONSE',\n  INVALID_IDENTIFIER = 'INVALID_IDENTIFIER',\n  INVALID_MESSAGE_PAYLOAD = 'INVALID_MESSAGE_PAYLOAD',\n  INVALID_MFA_PENDING_CREDENTIAL = 'INVALID_MFA_PENDING_CREDENTIAL',\n  INVALID_OAUTH_CLIENT_ID = 'INVALID_OAUTH_CLIENT_ID',\n  INVALID_OOB_CODE = 'INVALID_OOB_CODE',\n  INVALID_PASSWORD = 'INVALID_PASSWORD',\n  INVALID_PENDING_TOKEN = 'INVALID_PENDING_TOKEN',\n  INVALID_PHONE_NUMBER = 'INVALID_PHONE_NUMBER',\n  INVALID_PROVIDER_ID = 'INVALID_PROVIDER_ID',\n  INVALID_RECIPIENT_EMAIL = 'INVALID_RECIPIENT_EMAIL',\n  INVALID_SENDER = 'INVALID_SENDER',\n  INVALID_SESSION_INFO = 'INVALID_SESSION_INFO',\n  INVALID_TEMPORARY_PROOF = 'INVALID_TEMPORARY_PROOF',\n  INVALID_TENANT_ID = 'INVALID_TENANT_ID',\n  MFA_ENROLLMENT_NOT_FOUND = 'MFA_ENROLLMENT_NOT_FOUND',\n  MISSING_ANDROID_PACKAGE_NAME = 'MISSING_ANDROID_PACKAGE_NAME',\n  MISSING_APP_CREDENTIAL = 'MISSING_APP_CREDENTIAL',\n  MISSING_CODE = 'MISSING_CODE',\n  MISSING_CONTINUE_URI = 'MISSING_CONTINUE_URI',\n  MISSING_CUSTOM_TOKEN = 'MISSING_CUSTOM_TOKEN',\n  MISSING_IOS_BUNDLE_ID = 'MISSING_IOS_BUNDLE_ID',\n  MISSING_MFA_ENROLLMENT_ID = 'MISSING_MFA_ENROLLMENT_ID',\n  MISSING_MFA_PENDING_CREDENTIAL = 'MISSING_MFA_PENDING_CREDENTIAL',\n  MISSING_OOB_CODE = 'MISSING_OOB_CODE',\n  MISSING_OR_INVALID_NONCE = 'MISSING_OR_INVALID_NONCE',\n  MISSING_PASSWORD = 'MISSING_PASSWORD',\n  MISSING_REQ_TYPE = 'MISSING_REQ_TYPE',\n  MISSING_PHONE_NUMBER = 'MISSING_PHONE_NUMBER',\n  MISSING_SESSION_INFO = 'MISSING_SESSION_INFO',\n  OPERATION_NOT_ALLOWED = 'OPERATION_NOT_ALLOWED',\n  PASSWORD_LOGIN_DISABLED = 'PASSWORD_LOGIN_DISABLED',\n  QUOTA_EXCEEDED = 'QUOTA_EXCEEDED',\n  RESET_PASSWORD_EXCEED_LIMIT = 'RESET_PASSWORD_EXCEED_LIMIT',\n  REJECTED_CREDENTIAL = 'REJECTED_CREDENTIAL',\n  SECOND_FACTOR_EXISTS = 'SECOND_FACTOR_EXISTS',\n  SECOND_FACTOR_LIMIT_EXCEEDED = 'SECOND_FACTOR_LIMIT_EXCEEDED',\n  SESSION_EXPIRED = 'SESSION_EXPIRED',\n  TENANT_ID_MISMATCH = 'TENANT_ID_MISMATCH',\n  TOKEN_EXPIRED = 'TOKEN_EXPIRED',\n  TOO_MANY_ATTEMPTS_TRY_LATER = 'TOO_MANY_ATTEMPTS_TRY_LATER',\n  UNSUPPORTED_FIRST_FACTOR = 'UNSUPPORTED_FIRST_FACTOR',\n  UNSUPPORTED_TENANT_OPERATION = 'UNSUPPORTED_TENANT_OPERATION',\n  UNAUTHORIZED_DOMAIN = 'UNAUTHORIZED_DOMAIN',\n  UNVERIFIED_EMAIL = 'UNVERIFIED_EMAIL',\n  USER_CANCELLED = 'USER_CANCELLED',\n  USER_DISABLED = 'USER_DISABLED',\n  USER_NOT_FOUND = 'USER_NOT_FOUND',\n  WEAK_PASSWORD = 'WEAK_PASSWORD'\n}\n\n/**\n * API Response in the event of an error\n */\nexport interface JsonError {\n  error: {\n    code: number;\n    message: string;\n    errors?: [\n      {\n        message: ServerError;\n        domain: string;\n        reason: string;\n      }\n    ];\n  };\n}\n\n/**\n * Type definition for a map from server errors to developer visible errors\n */\nexport declare type ServerErrorMap<ApiError extends string> = {\n  readonly [K in ApiError]: AuthErrorCode;\n};\n\n/**\n * Map from errors returned by the server to errors to developer visible errors\n */\nexport const SERVER_ERROR_MAP: Partial<ServerErrorMap<ServerError>> = {\n  // Custom token errors.\n  [ServerError.CREDENTIAL_MISMATCH]: AuthErrorCode.CREDENTIAL_MISMATCH,\n  // This can only happen if the SDK sends a bad request.\n  [ServerError.MISSING_CUSTOM_TOKEN]: AuthErrorCode.INTERNAL_ERROR,\n\n  // Create Auth URI errors.\n  [ServerError.INVALID_IDENTIFIER]: AuthErrorCode.INVALID_EMAIL,\n  // This can only happen if the SDK sends a bad request.\n  [ServerError.MISSING_CONTINUE_URI]: AuthErrorCode.INTERNAL_ERROR,\n\n  // Sign in with email and password errors (some apply to sign up too).\n  [ServerError.INVALID_PASSWORD]: AuthErrorCode.INVALID_PASSWORD,\n  // This can only happen if the SDK sends a bad request.\n  [ServerError.MISSING_PASSWORD]: AuthErrorCode.INTERNAL_ERROR,\n\n  // Sign up with email and password errors.\n  [ServerError.EMAIL_EXISTS]: AuthErrorCode.EMAIL_EXISTS,\n  [ServerError.PASSWORD_LOGIN_DISABLED]: AuthErrorCode.OPERATION_NOT_ALLOWED,\n\n  // Verify assertion for sign in with credential errors:\n  [ServerError.INVALID_IDP_RESPONSE]: AuthErrorCode.INVALID_IDP_RESPONSE,\n  [ServerError.INVALID_PENDING_TOKEN]: AuthErrorCode.INVALID_IDP_RESPONSE,\n  [ServerError.FEDERATED_USER_ID_ALREADY_LINKED]:\n    AuthErrorCode.CREDENTIAL_ALREADY_IN_USE,\n\n  // This can only happen if the SDK sends a bad request.\n  [ServerError.MISSING_REQ_TYPE]: AuthErrorCode.INTERNAL_ERROR,\n\n  // Send Password reset email errors:\n  [ServerError.EMAIL_NOT_FOUND]: AuthErrorCode.USER_DELETED,\n  [ServerError.RESET_PASSWORD_EXCEED_LIMIT]:\n    AuthErrorCode.TOO_MANY_ATTEMPTS_TRY_LATER,\n\n  [ServerError.EXPIRED_OOB_CODE]: AuthErrorCode.EXPIRED_OOB_CODE,\n  [ServerError.INVALID_OOB_CODE]: AuthErrorCode.INVALID_OOB_CODE,\n  // This can only happen if the SDK sends a bad request.\n  [ServerError.MISSING_OOB_CODE]: AuthErrorCode.INTERNAL_ERROR,\n\n  // Operations that require ID token in request:\n  [ServerError.CREDENTIAL_TOO_OLD_LOGIN_AGAIN]:\n    AuthErrorCode.CREDENTIAL_TOO_OLD_LOGIN_AGAIN,\n  [ServerError.INVALID_ID_TOKEN]: AuthErrorCode.INVALID_AUTH,\n  [ServerError.TOKEN_EXPIRED]: AuthErrorCode.TOKEN_EXPIRED,\n  [ServerError.USER_NOT_FOUND]: AuthErrorCode.TOKEN_EXPIRED,\n\n  // Other errors.\n  [ServerError.TOO_MANY_ATTEMPTS_TRY_LATER]:\n    AuthErrorCode.TOO_MANY_ATTEMPTS_TRY_LATER,\n\n  // Phone Auth related errors.\n  [ServerError.INVALID_CODE]: AuthErrorCode.INVALID_CODE,\n  [ServerError.INVALID_SESSION_INFO]: AuthErrorCode.INVALID_SESSION_INFO,\n  [ServerError.INVALID_TEMPORARY_PROOF]: AuthErrorCode.INVALID_IDP_RESPONSE,\n  [ServerError.MISSING_SESSION_INFO]: AuthErrorCode.MISSING_SESSION_INFO,\n  [ServerError.SESSION_EXPIRED]: AuthErrorCode.CODE_EXPIRED,\n\n  // Other action code errors when additional settings passed.\n  // MISSING_CONTINUE_URI is getting mapped to INTERNAL_ERROR above.\n  // This is OK as this error will be caught by client side validation.\n  [ServerError.MISSING_ANDROID_PACKAGE_NAME]:\n    AuthErrorCode.MISSING_ANDROID_PACKAGE_NAME,\n  [ServerError.UNAUTHORIZED_DOMAIN]: AuthErrorCode.UNAUTHORIZED_DOMAIN,\n\n  // getProjectConfig errors when clientId is passed.\n  [ServerError.INVALID_OAUTH_CLIENT_ID]: AuthErrorCode.INVALID_OAUTH_CLIENT_ID,\n\n  // User actions (sign-up or deletion) disabled errors.\n  [ServerError.ADMIN_ONLY_OPERATION]: AuthErrorCode.ADMIN_ONLY_OPERATION,\n\n  // Multi factor related errors.\n  [ServerError.INVALID_MFA_PENDING_CREDENTIAL]:\n    AuthErrorCode.INVALID_MFA_SESSION,\n  [ServerError.MFA_ENROLLMENT_NOT_FOUND]: AuthErrorCode.MFA_INFO_NOT_FOUND,\n  [ServerError.MISSING_MFA_ENROLLMENT_ID]: AuthErrorCode.MISSING_MFA_INFO,\n  [ServerError.MISSING_MFA_PENDING_CREDENTIAL]:\n    AuthErrorCode.MISSING_MFA_SESSION,\n  [ServerError.SECOND_FACTOR_EXISTS]:\n    AuthErrorCode.SECOND_FACTOR_ALREADY_ENROLLED,\n  [ServerError.SECOND_FACTOR_LIMIT_EXCEEDED]:\n    AuthErrorCode.SECOND_FACTOR_LIMIT_EXCEEDED,\n\n  // Blocking functions related errors.\n  [ServerError.BLOCKING_FUNCTION_ERROR_RESPONSE]: AuthErrorCode.INTERNAL_ERROR\n};\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError, querystring } from '@firebase/util';\n\nimport { AuthErrorCode, NamedErrorParams } from '../core/errors';\nimport {\n  _createError,\n  _errorWithCustomMessage,\n  _fail\n} from '../core/util/assert';\nimport { Delay } from '../core/util/delay';\nimport { _emulatorUrl } from '../core/util/emulator';\nimport { FetchProvider } from '../core/util/fetch_provider';\nimport { Auth } from '../model/public_types';\nimport { AuthInternal, ConfigInternal } from '../model/auth';\nimport { IdTokenResponse, TaggedWithTokenResponse } from '../model/id_token';\nimport { IdTokenMfaResponse } from './authentication/mfa';\nimport { SERVER_ERROR_MAP, ServerError, ServerErrorMap } from './errors';\n\nexport const enum HttpMethod {\n  POST = 'POST',\n  GET = 'GET'\n}\n\nexport const enum HttpHeader {\n  CONTENT_TYPE = 'Content-Type',\n  X_FIREBASE_LOCALE = 'X-Firebase-Locale',\n  X_CLIENT_VERSION = 'X-Client-Version',\n  X_FIREBASE_GMPID = 'X-Firebase-gmpid',\n  X_FIREBASE_CLIENT = 'X-Firebase-Client'\n}\n\nexport const enum Endpoint {\n  CREATE_AUTH_URI = '/v1/accounts:createAuthUri',\n  DELETE_ACCOUNT = '/v1/accounts:delete',\n  RESET_PASSWORD = '/v1/accounts:resetPassword',\n  SIGN_UP = '/v1/accounts:signUp',\n  SIGN_IN_WITH_CUSTOM_TOKEN = '/v1/accounts:signInWithCustomToken',\n  SIGN_IN_WITH_EMAIL_LINK = '/v1/accounts:signInWithEmailLink',\n  SIGN_IN_WITH_IDP = '/v1/accounts:signInWithIdp',\n  SIGN_IN_WITH_PASSWORD = '/v1/accounts:signInWithPassword',\n  SIGN_IN_WITH_PHONE_NUMBER = '/v1/accounts:signInWithPhoneNumber',\n  SEND_VERIFICATION_CODE = '/v1/accounts:sendVerificationCode',\n  SEND_OOB_CODE = '/v1/accounts:sendOobCode',\n  SET_ACCOUNT_INFO = '/v1/accounts:update',\n  GET_ACCOUNT_INFO = '/v1/accounts:lookup',\n  GET_RECAPTCHA_PARAM = '/v1/recaptchaParams',\n  START_MFA_ENROLLMENT = '/v2/accounts/mfaEnrollment:start',\n  FINALIZE_MFA_ENROLLMENT = '/v2/accounts/mfaEnrollment:finalize',\n  START_MFA_SIGN_IN = '/v2/accounts/mfaSignIn:start',\n  FINALIZE_MFA_SIGN_IN = '/v2/accounts/mfaSignIn:finalize',\n  WITHDRAW_MFA = '/v2/accounts/mfaEnrollment:withdraw',\n  GET_PROJECT_CONFIG = '/v1/projects'\n}\n\nexport const DEFAULT_API_TIMEOUT_MS = new Delay(30_000, 60_000);\n\nexport function _addTidIfNecessary<T extends { tenantId?: string }>(\n  auth: Auth,\n  request: T\n): T {\n  if (auth.tenantId && !request.tenantId) {\n    return {\n      ...request,\n      tenantId: auth.tenantId\n    };\n  }\n  return request;\n}\n\nexport async function _performApiRequest<T, V>(\n  auth: Auth,\n  method: HttpMethod,\n  path: Endpoint,\n  request?: T,\n  customErrorMap: Partial<ServerErrorMap<ServerError>> = {}\n): Promise<V> {\n  return _performFetchWithErrorHandling(auth, customErrorMap, async () => {\n    let body = {};\n    let params = {};\n    if (request) {\n      if (method === HttpMethod.GET) {\n        params = request;\n      } else {\n        body = {\n          body: JSON.stringify(request)\n        };\n      }\n    }\n\n    const query = querystring({\n      key: auth.config.apiKey,\n      ...params\n    }).slice(1);\n\n    const headers = await (auth as AuthInternal)._getAdditionalHeaders();\n    headers[HttpHeader.CONTENT_TYPE] = 'application/json';\n\n    if (auth.languageCode) {\n      headers[HttpHeader.X_FIREBASE_LOCALE] = auth.languageCode;\n    }\n\n    return FetchProvider.fetch()(\n      _getFinalTarget(auth, auth.config.apiHost, path, query),\n      {\n        method,\n        headers,\n        referrerPolicy: 'no-referrer',\n        ...body\n      }\n    );\n  });\n}\n\nexport async function _performFetchWithErrorHandling<V>(\n  auth: Auth,\n  customErrorMap: Partial<ServerErrorMap<ServerError>>,\n  fetchFn: () => Promise<Response>\n): Promise<V> {\n  (auth as AuthInternal)._canInitEmulator = false;\n  const errorMap = { ...SERVER_ERROR_MAP, ...customErrorMap };\n  try {\n    const networkTimeout = new NetworkTimeout<Response>(auth);\n    const response: Response = await Promise.race<Promise<Response>>([\n      fetchFn(),\n      networkTimeout.promise\n    ]);\n\n    // If we've reached this point, the fetch succeeded and the networkTimeout\n    // didn't throw; clear the network timeout delay so that Node won't hang\n    networkTimeout.clearNetworkTimeout();\n\n    const json = await response.json();\n    if ('needConfirmation' in json) {\n      throw _makeTaggedError(auth, AuthErrorCode.NEED_CONFIRMATION, json);\n    }\n\n    if (response.ok && !('errorMessage' in json)) {\n      return json;\n    } else {\n      const errorMessage = response.ok ? json.errorMessage : json.error.message;\n      const [serverErrorCode, serverErrorMessage] = errorMessage.split(' : ');\n      if (serverErrorCode === ServerError.FEDERATED_USER_ID_ALREADY_LINKED) {\n        throw _makeTaggedError(\n          auth,\n          AuthErrorCode.CREDENTIAL_ALREADY_IN_USE,\n          json\n        );\n      } else if (serverErrorCode === ServerError.EMAIL_EXISTS) {\n        throw _makeTaggedError(auth, AuthErrorCode.EMAIL_EXISTS, json);\n      } else if (serverErrorCode === ServerError.USER_DISABLED) {\n        throw _makeTaggedError(auth, AuthErrorCode.USER_DISABLED, json);\n      }\n      const authError =\n        errorMap[serverErrorCode as ServerError] ||\n        (serverErrorCode\n          .toLowerCase()\n          .replace(/[_\\s]+/g, '-') as unknown as AuthErrorCode);\n      if (serverErrorMessage) {\n        throw _errorWithCustomMessage(auth, authError, serverErrorMessage);\n      } else {\n        _fail(auth, authError);\n      }\n    }\n  } catch (e) {\n    if (e instanceof FirebaseError) {\n      throw e;\n    }\n    _fail(auth, AuthErrorCode.NETWORK_REQUEST_FAILED);\n  }\n}\n\nexport async function _performSignInRequest<T, V extends IdTokenResponse>(\n  auth: Auth,\n  method: HttpMethod,\n  path: Endpoint,\n  request?: T,\n  customErrorMap: Partial<ServerErrorMap<ServerError>> = {}\n): Promise<V> {\n  const serverResponse = (await _performApiRequest<T, V | IdTokenMfaResponse>(\n    auth,\n    method,\n    path,\n    request,\n    customErrorMap\n  )) as V;\n  if ('mfaPendingCredential' in serverResponse) {\n    _fail(auth, AuthErrorCode.MFA_REQUIRED, {\n      _serverResponse: serverResponse\n    });\n  }\n\n  return serverResponse;\n}\n\nexport function _getFinalTarget(\n  auth: Auth,\n  host: string,\n  path: string,\n  query: string\n): string {\n  const base = `${host}${path}?${query}`;\n\n  if (!(auth as AuthInternal).config.emulator) {\n    return `${auth.config.apiScheme}://${base}`;\n  }\n\n  return _emulatorUrl(auth.config as ConfigInternal, base);\n}\n\nclass NetworkTimeout<T> {\n  // Node timers and browser timers are fundamentally incompatible, but we\n  // don't care about the value here\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private timer: any | null = null;\n  readonly promise = new Promise<T>((_, reject) => {\n    this.timer = setTimeout(() => {\n      return reject(\n        _createError(this.auth, AuthErrorCode.NETWORK_REQUEST_FAILED)\n      );\n    }, DEFAULT_API_TIMEOUT_MS.get());\n  });\n\n  clearNetworkTimeout(): void {\n    clearTimeout(this.timer);\n  }\n\n  constructor(private readonly auth: Auth) {}\n}\n\ninterface PotentialResponse extends IdTokenResponse {\n  email?: string;\n  phoneNumber?: string;\n}\n\nexport function _makeTaggedError(\n  auth: Auth,\n  code: AuthErrorCode,\n  response: PotentialResponse\n): FirebaseError {\n  const errorParams: NamedErrorParams = {\n    appName: auth.name\n  };\n\n  if (response.email) {\n    errorParams.email = response.email;\n  }\n  if (response.phoneNumber) {\n    errorParams.phoneNumber = response.phoneNumber;\n  }\n\n  const error = _createError(auth, code, errorParams);\n\n  // We know customData is defined on error because errorParams is defined\n  (error.customData! as TaggedWithTokenResponse)._tokenResponse = response;\n  return error;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function utcTimestampToDateString(\n  utcTimestamp?: string | number\n): string | undefined {\n  if (!utcTimestamp) {\n    return undefined;\n  }\n  try {\n    // Convert to date object.\n    const date = new Date(Number(utcTimestamp));\n    // Test date is valid.\n    if (!isNaN(date.getTime())) {\n      // Convert to UTC date string.\n      return date.toUTCString();\n    }\n  } catch (e) {\n    // Do nothing. undefined will be returned.\n  }\n  return undefined;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { IdTokenResult, ParsedToken, User } from '../../model/public_types';\nimport { base64Decode, getModularInstance } from '@firebase/util';\n\nimport { UserInternal } from '../../model/user';\nimport { _assert } from '../util/assert';\nimport { _logError } from '../util/log';\nimport { utcTimestampToDateString } from '../util/time';\nimport { AuthErrorCode } from '../errors';\n\n/**\n * Returns a JSON Web Token (JWT) used to identify the user to a Firebase service.\n *\n * @remarks\n * Returns the current token if it has not expired or if it will not expire in the next five\n * minutes. Otherwise, this will refresh the token and return a new one.\n *\n * @param user - The user.\n * @param forceRefresh - Force refresh regardless of token expiration.\n *\n * @public\n */\nexport function getIdToken(user: User, forceRefresh = false): Promise<string> {\n  return getModularInstance(user).getIdToken(forceRefresh);\n}\n\n/**\n * Returns a deserialized JSON Web Token (JWT) used to identitfy the user to a Firebase service.\n *\n * @remarks\n * Returns the current token if it has not expired or if it will not expire in the next five\n * minutes. Otherwise, this will refresh the token and return a new one.\n *\n * @param user - The user.\n * @param forceRefresh - Force refresh regardless of token expiration.\n *\n * @public\n */\nexport async function getIdTokenResult(\n  user: User,\n  forceRefresh = false\n): Promise<IdTokenResult> {\n  const userInternal = getModularInstance(user) as UserInternal;\n  const token = await userInternal.getIdToken(forceRefresh);\n  const claims = _parseToken(token);\n\n  _assert(\n    claims && claims.exp && claims.auth_time && claims.iat,\n    userInternal.auth,\n    AuthErrorCode.INTERNAL_ERROR\n  );\n  const firebase =\n    typeof claims.firebase === 'object' ? claims.firebase : undefined;\n\n  const signInProvider: string | undefined = firebase?.['sign_in_provider'];\n\n  return {\n    claims,\n    token,\n    authTime: utcTimestampToDateString(\n      secondsStringToMilliseconds(claims.auth_time)\n    )!,\n    issuedAtTime: utcTimestampToDateString(\n      secondsStringToMilliseconds(claims.iat)\n    )!,\n    expirationTime: utcTimestampToDateString(\n      secondsStringToMilliseconds(claims.exp)\n    )!,\n    signInProvider: signInProvider || null,\n    signInSecondFactor: firebase?.['sign_in_second_factor'] || null\n  };\n}\n\nfunction secondsStringToMilliseconds(seconds: string): number {\n  return Number(seconds) * 1000;\n}\n\nexport function _parseToken(token: string): ParsedToken | null {\n  const [algorithm, payload, signature] = token.split('.');\n  if (\n    algorithm === undefined ||\n    payload === undefined ||\n    signature === undefined\n  ) {\n    _logError('JWT malformed, contained fewer than 3 sections');\n    return null;\n  }\n\n  try {\n    const decoded = base64Decode(payload);\n    if (!decoded) {\n      _logError('Failed to decode base64 JWT payload');\n      return null;\n    }\n    return JSON.parse(decoded);\n  } catch (e) {\n    _logError(\n      'Caught error parsing JWT payload as JSON',\n      (e as Error)?.toString()\n    );\n    return null;\n  }\n}\n\n/**\n * Extract expiresIn TTL from a token by subtracting the expiration from the issuance.\n */\nexport function _tokenExpiresIn(token: string): number {\n  const parsedToken = _parseToken(token);\n  _assert(parsedToken, AuthErrorCode.INTERNAL_ERROR);\n  _assert(typeof parsedToken.exp !== 'undefined', AuthErrorCode.INTERNAL_ERROR);\n  _assert(typeof parsedToken.iat !== 'undefined', AuthErrorCode.INTERNAL_ERROR);\n  return Number(parsedToken.exp) - Number(parsedToken.iat);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError } from '@firebase/util';\n\nimport { UserInternal } from '../../model/user';\nimport { AuthErrorCode } from '../errors';\n\nexport async function _logoutIfInvalidated<T>(\n  user: UserInternal,\n  promise: Promise<T>,\n  bypassAuthState = false\n): Promise<T> {\n  if (bypassAuthState) {\n    return promise;\n  }\n  try {\n    return await promise;\n  } catch (e) {\n    if (e instanceof FirebaseError && isUserInvalidated(e)) {\n      if (user.auth.currentUser === user) {\n        await user.auth.signOut();\n      }\n    }\n\n    throw e;\n  }\n}\n\nfunction isUserInvalidated({ code }: FirebaseError): boolean {\n  return (\n    code === `auth/${AuthErrorCode.USER_DISABLED}` ||\n    code === `auth/${AuthErrorCode.TOKEN_EXPIRED}`\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError } from '@firebase/util';\nimport { UserInternal } from '../../model/user';\nimport { AuthErrorCode } from '../errors';\n\n// Refresh the token five minutes before expiration\nexport const enum Duration {\n  OFFSET = 5 * 1000 * 60,\n  RETRY_BACKOFF_MIN = 30 * 1000,\n  RETRY_BACKOFF_MAX = 16 * 60 * 1000\n}\n\nexport class ProactiveRefresh {\n  private isRunning = false;\n\n  // Node timers and browser timers return fundamentally different types.\n  // We don't actually care what the value is but TS won't accept unknown and\n  // we can't cast properly in both environments.\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private timerId: any | null = null;\n  private errorBackoff = Duration.RETRY_BACKOFF_MIN;\n\n  constructor(private readonly user: UserInternal) {}\n\n  _start(): void {\n    if (this.isRunning) {\n      return;\n    }\n\n    this.isRunning = true;\n    this.schedule();\n  }\n\n  _stop(): void {\n    if (!this.isRunning) {\n      return;\n    }\n\n    this.isRunning = false;\n    if (this.timerId !== null) {\n      clearTimeout(this.timerId);\n    }\n  }\n\n  private getInterval(wasError: boolean): number {\n    if (wasError) {\n      const interval = this.errorBackoff;\n      this.errorBackoff = Math.min(\n        this.errorBackoff * 2,\n        Duration.RETRY_BACKOFF_MAX\n      );\n      return interval;\n    } else {\n      // Reset the error backoff\n      this.errorBackoff = Duration.RETRY_BACKOFF_MIN;\n      const expTime = this.user.stsTokenManager.expirationTime ?? 0;\n      const interval = expTime - Date.now() - Duration.OFFSET;\n\n      return Math.max(0, interval);\n    }\n  }\n\n  private schedule(wasError = false): void {\n    if (!this.isRunning) {\n      // Just in case...\n      return;\n    }\n\n    const interval = this.getInterval(wasError);\n    this.timerId = setTimeout(async () => {\n      await this.iteration();\n    }, interval);\n  }\n\n  private async iteration(): Promise<void> {\n    try {\n      await this.user.getIdToken(true);\n    } catch (e) {\n      // Only retry on network errors\n      if (\n        (e as FirebaseError)?.code ===\n        `auth/${AuthErrorCode.NETWORK_REQUEST_FAILED}`\n      ) {\n        this.schedule(/* wasError */ true);\n      }\n\n      return;\n    }\n    this.schedule();\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { UserMetadata as UserMetadataType } from '../../model/public_types';\n\nimport { utcTimestampToDateString } from '../util/time';\n\nexport class UserMetadata implements UserMetadataType {\n  creationTime?: string;\n  lastSignInTime?: string;\n\n  constructor(\n    private createdAt?: string | number,\n    private lastLoginAt?: string | number\n  ) {\n    this._initializeTime();\n  }\n\n  private _initializeTime(): void {\n    this.lastSignInTime = utcTimestampToDateString(this.lastLoginAt);\n    this.creationTime = utcTimestampToDateString(this.createdAt);\n  }\n\n  _copy(metadata: UserMetadata): void {\n    this.createdAt = metadata.createdAt;\n    this.lastLoginAt = metadata.lastLoginAt;\n    this._initializeTime();\n  }\n\n  toJSON(): object {\n    return {\n      createdAt: this.createdAt,\n      lastLoginAt: this.lastLoginAt\n    };\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { User, UserInfo } from '../../model/public_types';\n\nimport {\n  getAccountInfo,\n  ProviderUserInfo\n} from '../../api/account_management/account';\nimport { UserInternal } from '../../model/user';\nimport { AuthErrorCode } from '../errors';\nimport { _assert } from '../util/assert';\nimport { _logoutIfInvalidated } from './invalidation';\nimport { UserMetadata } from './user_metadata';\nimport { getModularInstance } from '@firebase/util';\n\nexport async function _reloadWithoutSaving(user: UserInternal): Promise<void> {\n  const auth = user.auth;\n  const idToken = await user.getIdToken();\n  const response = await _logoutIfInvalidated(\n    user,\n    getAccountInfo(auth, { idToken })\n  );\n\n  _assert(response?.users.length, auth, AuthErrorCode.INTERNAL_ERROR);\n\n  const coreAccount = response.users[0];\n\n  user._notifyReloadListener(coreAccount);\n\n  const newProviderData = coreAccount.providerUserInfo?.length\n    ? extractProviderData(coreAccount.providerUserInfo)\n    : [];\n\n  const providerData = mergeProviderData(user.providerData, newProviderData);\n\n  // Preserves the non-nonymous status of the stored user, even if no more\n  // credentials (federated or email/password) are linked to the user. If\n  // the user was previously anonymous, then use provider data to update.\n  // On the other hand, if it was not anonymous before, it should never be\n  // considered anonymous now.\n  const oldIsAnonymous = user.isAnonymous;\n  const newIsAnonymous =\n    !(user.email && coreAccount.passwordHash) && !providerData?.length;\n  const isAnonymous = !oldIsAnonymous ? false : newIsAnonymous;\n\n  const updates: Partial<UserInternal> = {\n    uid: coreAccount.localId,\n    displayName: coreAccount.displayName || null,\n    photoURL: coreAccount.photoUrl || null,\n    email: coreAccount.email || null,\n    emailVerified: coreAccount.emailVerified || false,\n    phoneNumber: coreAccount.phoneNumber || null,\n    tenantId: coreAccount.tenantId || null,\n    providerData,\n    metadata: new UserMetadata(coreAccount.createdAt, coreAccount.lastLoginAt),\n    isAnonymous\n  };\n\n  Object.assign(user, updates);\n}\n\n/**\n * Reloads user account data, if signed in.\n *\n * @param user - The user.\n *\n * @public\n */\nexport async function reload(user: User): Promise<void> {\n  const userInternal: UserInternal = getModularInstance(user) as UserInternal;\n  await _reloadWithoutSaving(userInternal);\n\n  // Even though the current user hasn't changed, update\n  // current user will trigger a persistence update w/ the\n  // new info.\n  await userInternal.auth._persistUserIfCurrent(userInternal);\n  userInternal.auth._notifyListenersIfCurrent(userInternal);\n}\n\nfunction mergeProviderData(\n  original: UserInfo[],\n  newData: UserInfo[]\n): UserInfo[] {\n  const deduped = original.filter(\n    o => !newData.some(n => n.providerId === o.providerId)\n  );\n  return [...deduped, ...newData];\n}\n\nfunction extractProviderData(providers: ProviderUserInfo[]): UserInfo[] {\n  return providers.map(({ providerId, ...provider }) => {\n    return {\n      providerId,\n      uid: provider.rawId || '',\n      displayName: provider.displayName || null,\n      email: provider.email || null,\n      phoneNumber: provider.phoneNumber || null,\n      photoURL: provider.photoUrl || null\n    };\n  });\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint-disable camelcase */\n\nimport { querystring } from '@firebase/util';\n\nimport {\n  _getFinalTarget,\n  _performFetchWithErrorHandling,\n  HttpMethod,\n  HttpHeader\n} from '../index';\nimport { FetchProvider } from '../../core/util/fetch_provider';\nimport { Auth } from '../../model/public_types';\nimport { AuthInternal } from '../../model/auth';\n\nexport const enum Endpoint {\n  TOKEN = '/v1/token'\n}\n\n/** The server responses with snake_case; we convert to camelCase */\ninterface RequestStsTokenServerResponse {\n  access_token: string;\n  expires_in: string;\n  refresh_token: string;\n}\n\nexport interface RequestStsTokenResponse {\n  accessToken: string;\n  expiresIn: string;\n  refreshToken: string;\n}\n\nexport async function requestStsToken(\n  auth: Auth,\n  refreshToken: string\n): Promise<RequestStsTokenResponse> {\n  const response =\n    await _performFetchWithErrorHandling<RequestStsTokenServerResponse>(\n      auth,\n      {},\n      async () => {\n        const body = querystring({\n          'grant_type': 'refresh_token',\n          'refresh_token': refreshToken\n        }).slice(1);\n        const { tokenApiHost, apiKey } = auth.config;\n        const url = _getFinalTarget(\n          auth,\n          tokenApiHost,\n          Endpoint.TOKEN,\n          `key=${apiKey}`\n        );\n\n        const headers = await (auth as AuthInternal)._getAdditionalHeaders();\n        headers[HttpHeader.CONTENT_TYPE] = 'application/x-www-form-urlencoded';\n\n        return FetchProvider.fetch()(url, {\n          method: HttpMethod.POST,\n          headers,\n          body\n        });\n      }\n    );\n\n  // The response comes back in snake_case. Convert to camel:\n  return {\n    accessToken: response.access_token,\n    expiresIn: response.expires_in,\n    refreshToken: response.refresh_token\n  };\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FinalizeMfaResponse } from '../../api/authentication/mfa';\nimport { requestStsToken } from '../../api/authentication/token';\nimport { AuthInternal } from '../../model/auth';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { AuthErrorCode } from '../errors';\nimport { PersistedBlob } from '../persistence';\nimport { _assert, debugFail } from '../util/assert';\nimport { _tokenExpiresIn } from './id_token_result';\n\n/**\n * The number of milliseconds before the official expiration time of a token\n * to refresh that token, to provide a buffer for RPCs to complete.\n */\nexport const enum Buffer {\n  TOKEN_REFRESH = 30_000\n}\n\n/**\n * We need to mark this class as internal explicitly to exclude it in the public typings, because\n * it references AuthInternal which has a circular dependency with UserInternal.\n *\n * @internal\n */\nexport class StsTokenManager {\n  refreshToken: string | null = null;\n  accessToken: string | null = null;\n  expirationTime: number | null = null;\n\n  get isExpired(): boolean {\n    return (\n      !this.expirationTime ||\n      Date.now() > this.expirationTime - Buffer.TOKEN_REFRESH\n    );\n  }\n\n  updateFromServerResponse(\n    response: IdTokenResponse | FinalizeMfaResponse\n  ): void {\n    _assert(response.idToken, AuthErrorCode.INTERNAL_ERROR);\n    _assert(\n      typeof response.idToken !== 'undefined',\n      AuthErrorCode.INTERNAL_ERROR\n    );\n    _assert(\n      typeof response.refreshToken !== 'undefined',\n      AuthErrorCode.INTERNAL_ERROR\n    );\n    const expiresIn =\n      'expiresIn' in response && typeof response.expiresIn !== 'undefined'\n        ? Number(response.expiresIn)\n        : _tokenExpiresIn(response.idToken);\n    this.updateTokensAndExpiration(\n      response.idToken,\n      response.refreshToken,\n      expiresIn\n    );\n  }\n\n  async getToken(\n    auth: AuthInternal,\n    forceRefresh = false\n  ): Promise<string | null> {\n    _assert(\n      !this.accessToken || this.refreshToken,\n      auth,\n      AuthErrorCode.TOKEN_EXPIRED\n    );\n\n    if (!forceRefresh && this.accessToken && !this.isExpired) {\n      return this.accessToken;\n    }\n\n    if (this.refreshToken) {\n      await this.refresh(auth, this.refreshToken!);\n      return this.accessToken;\n    }\n\n    return null;\n  }\n\n  clearRefreshToken(): void {\n    this.refreshToken = null;\n  }\n\n  private async refresh(auth: AuthInternal, oldToken: string): Promise<void> {\n    const { accessToken, refreshToken, expiresIn } = await requestStsToken(\n      auth,\n      oldToken\n    );\n    this.updateTokensAndExpiration(\n      accessToken,\n      refreshToken,\n      Number(expiresIn)\n    );\n  }\n\n  private updateTokensAndExpiration(\n    accessToken: string,\n    refreshToken: string,\n    expiresInSec: number\n  ): void {\n    this.refreshToken = refreshToken || null;\n    this.accessToken = accessToken || null;\n    this.expirationTime = Date.now() + expiresInSec * 1000;\n  }\n\n  static fromJSON(appName: string, object: PersistedBlob): StsTokenManager {\n    const { refreshToken, accessToken, expirationTime } = object;\n\n    const manager = new StsTokenManager();\n    if (refreshToken) {\n      _assert(typeof refreshToken === 'string', AuthErrorCode.INTERNAL_ERROR, {\n        appName\n      });\n      manager.refreshToken = refreshToken;\n    }\n    if (accessToken) {\n      _assert(typeof accessToken === 'string', AuthErrorCode.INTERNAL_ERROR, {\n        appName\n      });\n      manager.accessToken = accessToken;\n    }\n    if (expirationTime) {\n      _assert(\n        typeof expirationTime === 'number',\n        AuthErrorCode.INTERNAL_ERROR,\n        {\n          appName\n        }\n      );\n      manager.expirationTime = expirationTime;\n    }\n    return manager;\n  }\n\n  toJSON(): object {\n    return {\n      refreshToken: this.refreshToken,\n      accessToken: this.accessToken,\n      expirationTime: this.expirationTime\n    };\n  }\n\n  _assign(stsTokenManager: StsTokenManager): void {\n    this.accessToken = stsTokenManager.accessToken;\n    this.refreshToken = stsTokenManager.refreshToken;\n    this.expirationTime = stsTokenManager.expirationTime;\n  }\n\n  _clone(): StsTokenManager {\n    return Object.assign(new StsTokenManager(), this.toJSON());\n  }\n\n  _performRefresh(): never {\n    return debugFail('not implemented');\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { IdTokenResult } from '../../model/public_types';\nimport { NextFn } from '@firebase/util';\n\nimport {\n  APIUserInfo,\n  deleteAccount\n} from '../../api/account_management/account';\nimport { FinalizeMfaResponse } from '../../api/authentication/mfa';\nimport { AuthInternal } from '../../model/auth';\nimport { IdTokenResponse } from '../../model/id_token';\nimport {\n  MutableUserInfo,\n  UserInternal,\n  UserParameters\n} from '../../model/user';\nimport { AuthErrorCode } from '../errors';\nimport { PersistedBlob } from '../persistence';\nimport { _assert } from '../util/assert';\nimport { getIdTokenResult } from './id_token_result';\nimport { _logoutIfInvalidated } from './invalidation';\nimport { ProactiveRefresh } from './proactive_refresh';\nimport { _reloadWithoutSaving, reload } from './reload';\nimport { StsTokenManager } from './token_manager';\nimport { UserMetadata } from './user_metadata';\nimport { ProviderId } from '../../model/enums';\n\nfunction assertStringOrUndefined(\n  assertion: unknown,\n  appName: string\n): asserts assertion is string | undefined {\n  _assert(\n    typeof assertion === 'string' || typeof assertion === 'undefined',\n    AuthErrorCode.INTERNAL_ERROR,\n    { appName }\n  );\n}\n\nexport class UserImpl implements UserInternal {\n  // For the user object, provider is always Firebase.\n  readonly providerId = ProviderId.FIREBASE;\n  stsTokenManager: StsTokenManager;\n  // Last known accessToken so we know when it changes\n  private accessToken: string | null;\n\n  uid: string;\n  auth: AuthInternal;\n  emailVerified: boolean;\n  isAnonymous: boolean;\n  tenantId: string | null;\n  readonly metadata: UserMetadata;\n  providerData: MutableUserInfo[];\n\n  // Optional fields from UserInfo\n  displayName: string | null;\n  email: string | null;\n  phoneNumber: string | null;\n  photoURL: string | null;\n\n  _redirectEventId?: string;\n  private readonly proactiveRefresh = new ProactiveRefresh(this);\n\n  constructor({ uid, auth, stsTokenManager, ...opt }: UserParameters) {\n    this.uid = uid;\n    this.auth = auth;\n    this.stsTokenManager = stsTokenManager;\n    this.accessToken = stsTokenManager.accessToken;\n    this.displayName = opt.displayName || null;\n    this.email = opt.email || null;\n    this.emailVerified = opt.emailVerified || false;\n    this.phoneNumber = opt.phoneNumber || null;\n    this.photoURL = opt.photoURL || null;\n    this.isAnonymous = opt.isAnonymous || false;\n    this.tenantId = opt.tenantId || null;\n    this.providerData = opt.providerData ? [...opt.providerData] : [];\n    this.metadata = new UserMetadata(\n      opt.createdAt || undefined,\n      opt.lastLoginAt || undefined\n    );\n  }\n\n  async getIdToken(forceRefresh?: boolean): Promise<string> {\n    const accessToken = await _logoutIfInvalidated(\n      this,\n      this.stsTokenManager.getToken(this.auth, forceRefresh)\n    );\n    _assert(accessToken, this.auth, AuthErrorCode.INTERNAL_ERROR);\n\n    if (this.accessToken !== accessToken) {\n      this.accessToken = accessToken;\n      await this.auth._persistUserIfCurrent(this);\n      this.auth._notifyListenersIfCurrent(this);\n    }\n\n    return accessToken;\n  }\n\n  getIdTokenResult(forceRefresh?: boolean): Promise<IdTokenResult> {\n    return getIdTokenResult(this, forceRefresh);\n  }\n\n  reload(): Promise<void> {\n    return reload(this);\n  }\n\n  private reloadUserInfo: APIUserInfo | null = null;\n  private reloadListener: NextFn<APIUserInfo> | null = null;\n\n  _assign(user: UserInternal): void {\n    if (this === user) {\n      return;\n    }\n    _assert(this.uid === user.uid, this.auth, AuthErrorCode.INTERNAL_ERROR);\n    this.displayName = user.displayName;\n    this.photoURL = user.photoURL;\n    this.email = user.email;\n    this.emailVerified = user.emailVerified;\n    this.phoneNumber = user.phoneNumber;\n    this.isAnonymous = user.isAnonymous;\n    this.tenantId = user.tenantId;\n    this.providerData = user.providerData.map(userInfo => ({ ...userInfo }));\n    this.metadata._copy(user.metadata);\n    this.stsTokenManager._assign(user.stsTokenManager);\n  }\n\n  _clone(auth: AuthInternal): UserInternal {\n    return new UserImpl({\n      ...this,\n      auth,\n      stsTokenManager: this.stsTokenManager._clone()\n    });\n  }\n\n  _onReload(callback: NextFn<APIUserInfo>): void {\n    // There should only ever be one listener, and that is a single instance of MultiFactorUser\n    _assert(!this.reloadListener, this.auth, AuthErrorCode.INTERNAL_ERROR);\n    this.reloadListener = callback;\n    if (this.reloadUserInfo) {\n      this._notifyReloadListener(this.reloadUserInfo);\n      this.reloadUserInfo = null;\n    }\n  }\n\n  _notifyReloadListener(userInfo: APIUserInfo): void {\n    if (this.reloadListener) {\n      this.reloadListener(userInfo);\n    } else {\n      // If no listener is subscribed yet, save the result so it's available when they do subscribe\n      this.reloadUserInfo = userInfo;\n    }\n  }\n\n  _startProactiveRefresh(): void {\n    this.proactiveRefresh._start();\n  }\n\n  _stopProactiveRefresh(): void {\n    this.proactiveRefresh._stop();\n  }\n\n  async _updateTokensIfNecessary(\n    response: IdTokenResponse | FinalizeMfaResponse,\n    reload = false\n  ): Promise<void> {\n    let tokensRefreshed = false;\n    if (\n      response.idToken &&\n      response.idToken !== this.stsTokenManager.accessToken\n    ) {\n      this.stsTokenManager.updateFromServerResponse(response);\n      tokensRefreshed = true;\n    }\n\n    if (reload) {\n      await _reloadWithoutSaving(this);\n    }\n\n    await this.auth._persistUserIfCurrent(this);\n    if (tokensRefreshed) {\n      this.auth._notifyListenersIfCurrent(this);\n    }\n  }\n\n  async delete(): Promise<void> {\n    const idToken = await this.getIdToken();\n    await _logoutIfInvalidated(this, deleteAccount(this.auth, { idToken }));\n    this.stsTokenManager.clearRefreshToken();\n\n    // TODO: Determine if cancellable-promises are necessary to use in this class so that delete()\n    //       cancels pending actions...\n\n    return this.auth.signOut();\n  }\n\n  toJSON(): PersistedBlob {\n    return {\n      uid: this.uid,\n      email: this.email || undefined,\n      emailVerified: this.emailVerified,\n      displayName: this.displayName || undefined,\n      isAnonymous: this.isAnonymous,\n      photoURL: this.photoURL || undefined,\n      phoneNumber: this.phoneNumber || undefined,\n      tenantId: this.tenantId || undefined,\n      providerData: this.providerData.map(userInfo => ({ ...userInfo })),\n      stsTokenManager: this.stsTokenManager.toJSON(),\n      // Redirect event ID must be maintained in case there is a pending\n      // redirect event.\n      _redirectEventId: this._redirectEventId,\n      ...this.metadata.toJSON(),\n\n      // Required for compatibility with the legacy SDK (go/firebase-auth-sdk-persistence-parsing):\n      apiKey: this.auth.config.apiKey,\n      appName: this.auth.name\n      // Missing authDomain will be tolerated by the legacy SDK.\n      // stsTokenManager.apiKey isn't actually required (despite the legacy SDK persisting it).\n    };\n  }\n\n  get refreshToken(): string {\n    return this.stsTokenManager.refreshToken || '';\n  }\n\n  static _fromJSON(auth: AuthInternal, object: PersistedBlob): UserInternal {\n    const displayName = object.displayName ?? undefined;\n    const email = object.email ?? undefined;\n    const phoneNumber = object.phoneNumber ?? undefined;\n    const photoURL = object.photoURL ?? undefined;\n    const tenantId = object.tenantId ?? undefined;\n    const _redirectEventId = object._redirectEventId ?? undefined;\n    const createdAt = object.createdAt ?? undefined;\n    const lastLoginAt = object.lastLoginAt ?? undefined;\n    const {\n      uid,\n      emailVerified,\n      isAnonymous,\n      providerData,\n      stsTokenManager: plainObjectTokenManager\n    } = object;\n\n    _assert(uid && plainObjectTokenManager, auth, AuthErrorCode.INTERNAL_ERROR);\n\n    const stsTokenManager = StsTokenManager.fromJSON(\n      this.name,\n      plainObjectTokenManager as PersistedBlob\n    );\n\n    _assert(typeof uid === 'string', auth, AuthErrorCode.INTERNAL_ERROR);\n    assertStringOrUndefined(displayName, auth.name);\n    assertStringOrUndefined(email, auth.name);\n    _assert(\n      typeof emailVerified === 'boolean',\n      auth,\n      AuthErrorCode.INTERNAL_ERROR\n    );\n    _assert(\n      typeof isAnonymous === 'boolean',\n      auth,\n      AuthErrorCode.INTERNAL_ERROR\n    );\n    assertStringOrUndefined(phoneNumber, auth.name);\n    assertStringOrUndefined(photoURL, auth.name);\n    assertStringOrUndefined(tenantId, auth.name);\n    assertStringOrUndefined(_redirectEventId, auth.name);\n    assertStringOrUndefined(createdAt, auth.name);\n    assertStringOrUndefined(lastLoginAt, auth.name);\n    const user = new UserImpl({\n      uid,\n      auth,\n      email,\n      emailVerified,\n      displayName,\n      isAnonymous,\n      photoURL,\n      phoneNumber,\n      tenantId,\n      stsTokenManager,\n      createdAt,\n      lastLoginAt\n    });\n\n    if (providerData && Array.isArray(providerData)) {\n      user.providerData = providerData.map(userInfo => ({ ...userInfo }));\n    }\n\n    if (_redirectEventId) {\n      user._redirectEventId = _redirectEventId;\n    }\n\n    return user;\n  }\n\n  /**\n   * Initialize a User from an idToken server response\n   * @param auth\n   * @param idTokenResponse\n   */\n  static async _fromIdTokenResponse(\n    auth: AuthInternal,\n    idTokenResponse: IdTokenResponse,\n    isAnonymous: boolean = false\n  ): Promise<UserInternal> {\n    const stsTokenManager = new StsTokenManager();\n    stsTokenManager.updateFromServerResponse(idTokenResponse);\n\n    // Initialize the Firebase Auth user.\n    const user = new UserImpl({\n      uid: idTokenResponse.localId,\n      auth,\n      stsTokenManager,\n      isAnonymous\n    });\n\n    // Updates the user info and data and resolves with a user instance.\n    await _reloadWithoutSaving(user);\n    return user;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Persistence } from '../../model/public_types';\n\nimport {\n  PersistenceInternal,\n  PersistenceType,\n  PersistenceValue,\n  StorageEventListener\n} from '../persistence';\n\nexport class InMemoryPersistence implements PersistenceInternal {\n  static type: 'NONE' = 'NONE';\n  readonly type = PersistenceType.NONE;\n  storage: Record<string, PersistenceValue> = {};\n\n  async _isAvailable(): Promise<boolean> {\n    return true;\n  }\n\n  async _set(key: string, value: PersistenceValue): Promise<void> {\n    this.storage[key] = value;\n  }\n\n  async _get<T extends PersistenceValue>(key: string): Promise<T | null> {\n    const value = this.storage[key];\n    return value === undefined ? null : (value as T);\n  }\n\n  async _remove(key: string): Promise<void> {\n    delete this.storage[key];\n  }\n\n  _addListener(_key: string, _listener: StorageEventListener): void {\n    // Listeners are not supported for in-memory storage since it cannot be shared across windows/workers\n    return;\n  }\n\n  _removeListener(_key: string, _listener: StorageEventListener): void {\n    // Listeners are not supported for in-memory storage since it cannot be shared across windows/workers\n    return;\n  }\n}\n\n/**\n * An implementation of {@link Persistence} of type 'NONE'.\n *\n * @public\n */\nexport const inMemoryPersistence: Persistence = InMemoryPersistence;\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ApiKey, AppName, AuthInternal } from '../../model/auth';\nimport { UserInternal } from '../../model/user';\nimport { PersistedBlob, PersistenceInternal } from '../persistence';\nimport { UserImpl } from '../user/user_impl';\nimport { _getInstance } from '../util/instantiator';\nimport { inMemoryPersistence } from './in_memory';\n\nexport const enum KeyName {\n  AUTH_USER = 'authUser',\n  AUTH_EVENT = 'authEvent',\n  REDIRECT_USER = 'redirectUser',\n  PERSISTENCE_USER = 'persistence'\n}\nexport const enum Namespace {\n  PERSISTENCE = 'firebase'\n}\n\nexport function _persistenceKeyName(\n  key: string,\n  apiKey: ApiKey,\n  appName: AppName\n): string {\n  return `${Namespace.PERSISTENCE}:${key}:${apiKey}:${appName}`;\n}\n\nexport class PersistenceUserManager {\n  private readonly fullUserKey: string;\n  private readonly fullPersistenceKey: string;\n  private readonly boundEventHandler: () => void;\n\n  private constructor(\n    public persistence: PersistenceInternal,\n    private readonly auth: AuthInternal,\n    private readonly userKey: string\n  ) {\n    const { config, name } = this.auth;\n    this.fullUserKey = _persistenceKeyName(this.userKey, config.apiKey, name);\n    this.fullPersistenceKey = _persistenceKeyName(\n      KeyName.PERSISTENCE_USER,\n      config.apiKey,\n      name\n    );\n    this.boundEventHandler = auth._onStorageEvent.bind(auth);\n    this.persistence._addListener(this.fullUserKey, this.boundEventHandler);\n  }\n\n  setCurrentUser(user: UserInternal): Promise<void> {\n    return this.persistence._set(this.fullUserKey, user.toJSON());\n  }\n\n  async getCurrentUser(): Promise<UserInternal | null> {\n    const blob = await this.persistence._get<PersistedBlob>(this.fullUserKey);\n    return blob ? UserImpl._fromJSON(this.auth, blob) : null;\n  }\n\n  removeCurrentUser(): Promise<void> {\n    return this.persistence._remove(this.fullUserKey);\n  }\n\n  savePersistenceForRedirect(): Promise<void> {\n    return this.persistence._set(\n      this.fullPersistenceKey,\n      this.persistence.type\n    );\n  }\n\n  async setPersistence(newPersistence: PersistenceInternal): Promise<void> {\n    if (this.persistence === newPersistence) {\n      return;\n    }\n\n    const currentUser = await this.getCurrentUser();\n    await this.removeCurrentUser();\n\n    this.persistence = newPersistence;\n\n    if (currentUser) {\n      return this.setCurrentUser(currentUser);\n    }\n  }\n\n  delete(): void {\n    this.persistence._removeListener(this.fullUserKey, this.boundEventHandler);\n  }\n\n  static async create(\n    auth: AuthInternal,\n    persistenceHierarchy: PersistenceInternal[],\n    userKey = KeyName.AUTH_USER\n  ): Promise<PersistenceUserManager> {\n    if (!persistenceHierarchy.length) {\n      return new PersistenceUserManager(\n        _getInstance(inMemoryPersistence),\n        auth,\n        userKey\n      );\n    }\n\n    // Eliminate any persistences that are not available\n    const availablePersistences = (\n      await Promise.all(\n        persistenceHierarchy.map(async persistence => {\n          if (await persistence._isAvailable()) {\n            return persistence;\n          }\n          return undefined;\n        })\n      )\n    ).filter(persistence => persistence) as PersistenceInternal[];\n\n    // Fall back to the first persistence listed, or in memory if none available\n    let selectedPersistence =\n      availablePersistences[0] ||\n      _getInstance<PersistenceInternal>(inMemoryPersistence);\n\n    const key = _persistenceKeyName(userKey, auth.config.apiKey, auth.name);\n\n    // Pull out the existing user, setting the chosen persistence to that\n    // persistence if the user exists.\n    let userToMigrate: UserInternal | null = null;\n    // Note, here we check for a user in _all_ persistences, not just the\n    // ones deemed available. If we can migrate a user out of a broken\n    // persistence, we will (but only if that persistence supports migration).\n    for (const persistence of persistenceHierarchy) {\n      try {\n        const blob = await persistence._get<PersistedBlob>(key);\n        if (blob) {\n          const user = UserImpl._fromJSON(auth, blob); // throws for unparsable blob (wrong format)\n          if (persistence !== selectedPersistence) {\n            userToMigrate = user;\n          }\n          selectedPersistence = persistence;\n          break;\n        }\n      } catch {}\n    }\n\n    // If we find the user in a persistence that does support migration, use\n    // that migration path (of only persistences that support migration)\n    const migrationHierarchy = availablePersistences.filter(\n      p => p._shouldAllowMigration\n    );\n\n    // If the persistence does _not_ allow migration, just finish off here\n    if (\n      !selectedPersistence._shouldAllowMigration ||\n      !migrationHierarchy.length\n    ) {\n      return new PersistenceUserManager(selectedPersistence, auth, userKey);\n    }\n\n    selectedPersistence = migrationHierarchy[0];\n    if (userToMigrate) {\n      // This normally shouldn't throw since chosenPersistence.isAvailable() is true, but if it does\n      // we'll just let it bubble to surface the error.\n      await selectedPersistence._set(key, userToMigrate.toJSON());\n    }\n\n    // Attempt to clear the key in other persistences but ignore errors. This helps prevent issues\n    // such as users getting stuck with a previous account after signing out and refreshing the tab.\n    await Promise.all(\n      persistenceHierarchy.map(async persistence => {\n        if (persistence !== selectedPersistence) {\n          try {\n            await persistence._remove(key);\n          } catch {}\n        }\n      })\n    );\n    return new PersistenceUserManager(selectedPersistence, auth, userKey);\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { isIE, getUA } from '@firebase/util';\n\ninterface NavigatorStandalone extends Navigator {\n  standalone?: unknown;\n}\n\ninterface Document {\n  documentMode?: number;\n}\n\n/**\n * Enums for Browser name.\n */\nexport const enum BrowserName {\n  ANDROID = 'Android',\n  BLACKBERRY = 'Blackberry',\n  EDGE = 'Edge',\n  FIREFOX = 'Firefox',\n  IE = 'IE',\n  IEMOBILE = 'IEMobile',\n  OPERA = 'Opera',\n  OTHER = 'Other',\n  CHROME = 'Chrome',\n  SAFARI = 'Safari',\n  SILK = 'Silk',\n  WEBOS = 'Webos'\n}\n\n/**\n * Determine the browser for the purposes of reporting usage to the API\n */\nexport function _getBrowserName(userAgent: string): BrowserName | string {\n  const ua = userAgent.toLowerCase();\n  if (ua.includes('opera/') || ua.includes('opr/') || ua.includes('opios/')) {\n    return BrowserName.OPERA;\n  } else if (_isIEMobile(ua)) {\n    // Windows phone IEMobile browser.\n    return BrowserName.IEMOBILE;\n  } else if (ua.includes('msie') || ua.includes('trident/')) {\n    return BrowserName.IE;\n  } else if (ua.includes('edge/')) {\n    return BrowserName.EDGE;\n  } else if (_isFirefox(ua)) {\n    return BrowserName.FIREFOX;\n  } else if (ua.includes('silk/')) {\n    return BrowserName.SILK;\n  } else if (_isBlackBerry(ua)) {\n    // Blackberry browser.\n    return BrowserName.BLACKBERRY;\n  } else if (_isWebOS(ua)) {\n    // WebOS default browser.\n    return BrowserName.WEBOS;\n  } else if (_isSafari(ua)) {\n    return BrowserName.SAFARI;\n  } else if (\n    (ua.includes('chrome/') || _isChromeIOS(ua)) &&\n    !ua.includes('edge/')\n  ) {\n    return BrowserName.CHROME;\n  } else if (_isAndroid(ua)) {\n    // Android stock browser.\n    return BrowserName.ANDROID;\n  } else {\n    // Most modern browsers have name/version at end of user agent string.\n    const re = /([a-zA-Z\\d\\.]+)\\/[a-zA-Z\\d\\.]*$/;\n    const matches = userAgent.match(re);\n    if (matches?.length === 2) {\n      return matches[1];\n    }\n  }\n  return BrowserName.OTHER;\n}\n\nexport function _isFirefox(ua = getUA()): boolean {\n  return /firefox\\//i.test(ua);\n}\n\nexport function _isSafari(userAgent = getUA()): boolean {\n  const ua = userAgent.toLowerCase();\n  return (\n    ua.includes('safari/') &&\n    !ua.includes('chrome/') &&\n    !ua.includes('crios/') &&\n    !ua.includes('android')\n  );\n}\n\nexport function _isChromeIOS(ua = getUA()): boolean {\n  return /crios\\//i.test(ua);\n}\n\nexport function _isIEMobile(ua = getUA()): boolean {\n  return /iemobile/i.test(ua);\n}\n\nexport function _isAndroid(ua = getUA()): boolean {\n  return /android/i.test(ua);\n}\n\nexport function _isBlackBerry(ua = getUA()): boolean {\n  return /blackberry/i.test(ua);\n}\n\nexport function _isWebOS(ua = getUA()): boolean {\n  return /webos/i.test(ua);\n}\n\nexport function _isIOS(ua = getUA()): boolean {\n  return (\n    /iphone|ipad|ipod/i.test(ua) ||\n    (/macintosh/i.test(ua) && /mobile/i.test(ua))\n  );\n}\n\nexport function _isIOS7Or8(ua = getUA()): boolean {\n  return (\n    /(iPad|iPhone|iPod).*OS 7_\\d/i.test(ua) ||\n    /(iPad|iPhone|iPod).*OS 8_\\d/i.test(ua)\n  );\n}\n\nexport function _isIOSStandalone(ua = getUA()): boolean {\n  return _isIOS(ua) && !!(window.navigator as NavigatorStandalone)?.standalone;\n}\n\nexport function _isIE10(): boolean {\n  return isIE() && (document as Document).documentMode === 10;\n}\n\nexport function _isMobileBrowser(ua: string = getUA()): boolean {\n  // TODO: implement getBrowserName equivalent for OS.\n  return (\n    _isIOS(ua) ||\n    _isAndroid(ua) ||\n    _isWebOS(ua) ||\n    _isBlackBerry(ua) ||\n    /windows phone/i.test(ua) ||\n    _isIEMobile(ua)\n  );\n}\n\nexport function _isIframe(): boolean {\n  try {\n    // Check that the current window is not the top window.\n    // If so, return true.\n    return !!(window && window !== window.top);\n  } catch (e) {\n    return false;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SDK_VERSION } from '@firebase/app';\nimport { _getBrowserName } from './browser';\nimport { getUA } from '@firebase/util';\n\nexport const enum ClientImplementation {\n  CORE = 'JsCore'\n}\n\n/**\n * @internal\n */\nexport const enum ClientPlatform {\n  BROWSER = 'Browser',\n  NODE = 'Node',\n  REACT_NATIVE = 'ReactNative',\n  CORDOVA = 'Cordova',\n  WORKER = 'Worker'\n}\n\n/*\n * Determine the SDK version string\n */\nexport function _getClientVersion(\n  clientPlatform: ClientPlatform,\n  frameworks: readonly string[] = []\n): string {\n  let reportedPlatform: string;\n  switch (clientPlatform) {\n    case ClientPlatform.BROWSER:\n      // In a browser environment, report the browser name.\n      reportedPlatform = _getBrowserName(getUA());\n      break;\n    case ClientPlatform.WORKER:\n      // Technically a worker runs from a browser but we need to differentiate a\n      // worker from a browser.\n      // For example: Chrome-Worker/JsCore/4.9.1/FirebaseCore-web.\n      reportedPlatform = `${_getBrowserName(getUA())}-${clientPlatform}`;\n      break;\n    default:\n      reportedPlatform = clientPlatform;\n  }\n  const reportedFrameworks = frameworks.length\n    ? frameworks.join(',')\n    : 'FirebaseCore-web'; /* default value if no other framework is used */\n  return `${reportedPlatform}/${ClientImplementation.CORE}/${SDK_VERSION}/${reportedFrameworks}`;\n}\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AuthInternal } from '../../model/auth';\nimport { Unsubscribe, User } from '../../model/public_types';\nimport { AuthErrorCode } from '../errors';\n\ninterface MiddlewareEntry {\n  (user: User | null): Promise<void>;\n  onAbort?: () => void;\n}\n\nexport class AuthMiddlewareQueue {\n  private readonly queue: MiddlewareEntry[] = [];\n\n  constructor(private readonly auth: AuthInternal) {}\n\n  pushCallback(\n    callback: (user: User | null) => void | Promise<void>,\n    onAbort?: () => void\n  ): Unsubscribe {\n    // The callback could be sync or async. Wrap it into a\n    // function that is always async.\n    const wrappedCallback: MiddlewareEntry = (\n      user: User | null\n    ): Promise<void> =>\n      new Promise((resolve, reject) => {\n        try {\n          const result = callback(user);\n          // Either resolve with existing promise or wrap a non-promise\n          // return value into a promise.\n          resolve(result);\n        } catch (e) {\n          // Sync callback throws.\n          reject(e);\n        }\n      });\n    // Attach the onAbort if present\n    wrappedCallback.onAbort = onAbort;\n    this.queue.push(wrappedCallback);\n\n    const index = this.queue.length - 1;\n    return () => {\n      // Unsubscribe. Replace with no-op. Do not remove from array, or it will disturb\n      // indexing of other elements.\n      this.queue[index] = () => Promise.resolve();\n    };\n  }\n\n  async runMiddleware(nextUser: User | null): Promise<void> {\n    if (this.auth.currentUser === nextUser) {\n      return;\n    }\n\n    // While running the middleware, build a temporary stack of onAbort\n    // callbacks to call if one middleware callback rejects.\n\n    const onAbortStack: Array<() => void> = [];\n    try {\n      for (const beforeStateCallback of this.queue) {\n        await beforeStateCallback(nextUser);\n\n        // Only push the onAbort if the callback succeeds\n        if (beforeStateCallback.onAbort) {\n          onAbortStack.push(beforeStateCallback.onAbort);\n        }\n      }\n    } catch (e) {\n      // Run all onAbort, with separate try/catch to ignore any errors and\n      // continue\n      onAbortStack.reverse();\n      for (const onAbort of onAbortStack) {\n        try {\n          onAbort();\n        } catch (_) {\n          /* swallow error */\n        }\n      }\n\n      throw this.auth._errorFactory.create(AuthErrorCode.LOGIN_BLOCKED, {\n        originalMessage: (e as Error)?.message\n      });\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { _FirebaseService, FirebaseApp } from '@firebase/app';\nimport { Provider } from '@firebase/component';\nimport {\n  Auth,\n  AuthErrorMap,\n  AuthSettings,\n  EmulatorConfig,\n  NextOrObserver,\n  Persistence,\n  PopupRedirectResolver,\n  User,\n  UserCredential,\n  CompleteFn,\n  ErrorFn,\n  NextFn,\n  Unsubscribe\n} from '../../model/public_types';\nimport {\n  createSubscribe,\n  ErrorFactory,\n  FirebaseError,\n  getModularInstance,\n  Observer,\n  Subscribe\n} from '@firebase/util';\n\nimport { AuthInternal, ConfigInternal } from '../../model/auth';\nimport { PopupRedirectResolverInternal } from '../../model/popup_redirect';\nimport { UserInternal } from '../../model/user';\nimport {\n  AuthErrorCode,\n  AuthErrorParams,\n  ErrorMapRetriever,\n  _DEFAULT_AUTH_ERROR_FACTORY\n} from '../errors';\nimport { PersistenceInternal } from '../persistence';\nimport {\n  KeyName,\n  PersistenceUserManager\n} from '../persistence/persistence_user_manager';\nimport { _reloadWithoutSaving } from '../user/reload';\nimport { _assert } from '../util/assert';\nimport { _getInstance } from '../util/instantiator';\nimport { _getUserLanguage } from '../util/navigator';\nimport { _getClientVersion } from '../util/version';\nimport { HttpHeader } from '../../api';\nimport { AuthMiddlewareQueue } from './middleware';\n\ninterface AsyncAction {\n  (): Promise<void>;\n}\n\nexport const enum DefaultConfig {\n  TOKEN_API_HOST = 'securetoken.googleapis.com',\n  API_HOST = 'identitytoolkit.googleapis.com',\n  API_SCHEME = 'https'\n}\n\nexport class AuthImpl implements AuthInternal, _FirebaseService {\n  currentUser: User | null = null;\n  emulatorConfig: EmulatorConfig | null = null;\n  private operations = Promise.resolve();\n  private persistenceManager?: PersistenceUserManager;\n  private redirectPersistenceManager?: PersistenceUserManager;\n  private authStateSubscription = new Subscription<User>(this);\n  private idTokenSubscription = new Subscription<User>(this);\n  private readonly beforeStateQueue = new AuthMiddlewareQueue(this);\n  private redirectUser: UserInternal | null = null;\n  private isProactiveRefreshEnabled = false;\n\n  // Any network calls will set this to true and prevent subsequent emulator\n  // initialization\n  _canInitEmulator = true;\n  _isInitialized = false;\n  _deleted = false;\n  _initializationPromise: Promise<void> | null = null;\n  _popupRedirectResolver: PopupRedirectResolverInternal | null = null;\n  _errorFactory: ErrorFactory<AuthErrorCode, AuthErrorParams> =\n    _DEFAULT_AUTH_ERROR_FACTORY;\n  readonly name: string;\n\n  // Tracks the last notified UID for state change listeners to prevent\n  // repeated calls to the callbacks. Undefined means it's never been\n  // called, whereas null means it's been called with a signed out user\n  private lastNotifiedUid: string | null | undefined = undefined;\n\n  languageCode: string | null = null;\n  tenantId: string | null = null;\n  settings: AuthSettings = { appVerificationDisabledForTesting: false };\n\n  constructor(\n    public readonly app: FirebaseApp,\n    private readonly heartbeatServiceProvider: Provider<'heartbeat'>,\n    public readonly config: ConfigInternal\n  ) {\n    this.name = app.name;\n    this.clientVersion = config.sdkClientVersion;\n  }\n\n  _initializeWithPersistence(\n    persistenceHierarchy: PersistenceInternal[],\n    popupRedirectResolver?: PopupRedirectResolver\n  ): Promise<void> {\n    if (popupRedirectResolver) {\n      this._popupRedirectResolver = _getInstance(popupRedirectResolver);\n    }\n\n    // Have to check for app deletion throughout initialization (after each\n    // promise resolution)\n    this._initializationPromise = this.queue(async () => {\n      if (this._deleted) {\n        return;\n      }\n\n      this.persistenceManager = await PersistenceUserManager.create(\n        this,\n        persistenceHierarchy\n      );\n\n      if (this._deleted) {\n        return;\n      }\n\n      // Initialize the resolver early if necessary (only applicable to web:\n      // this will cause the iframe to load immediately in certain cases)\n      if (this._popupRedirectResolver?._shouldInitProactively) {\n        // If this fails, don't halt auth loading\n        try {\n          await this._popupRedirectResolver._initialize(this);\n        } catch (e) {\n          /* Ignore the error */\n        }\n      }\n\n      await this.initializeCurrentUser(popupRedirectResolver);\n      this.lastNotifiedUid = this.currentUser?.uid || null;\n\n      if (this._deleted) {\n        return;\n      }\n\n      this._isInitialized = true;\n    });\n\n    return this._initializationPromise;\n  }\n\n  /**\n   * If the persistence is changed in another window, the user manager will let us know\n   */\n  async _onStorageEvent(): Promise<void> {\n    if (this._deleted) {\n      return;\n    }\n\n    const user = await this.assertedPersistence.getCurrentUser();\n\n    if (!this.currentUser && !user) {\n      // No change, do nothing (was signed out and remained signed out).\n      return;\n    }\n\n    // If the same user is to be synchronized.\n    if (this.currentUser && user && this.currentUser.uid === user.uid) {\n      // Data update, simply copy data changes.\n      this._currentUser._assign(user);\n      // If tokens changed from previous user tokens, this will trigger\n      // notifyAuthListeners_.\n      await this.currentUser.getIdToken();\n      return;\n    }\n\n    // Update current Auth state. Either a new login or logout.\n    // Skip blocking callbacks, they should not apply to a change in another tab.\n    await this._updateCurrentUser(user, /* skipBeforeStateCallbacks */ true);\n  }\n\n  private async initializeCurrentUser(\n    popupRedirectResolver?: PopupRedirectResolver\n  ): Promise<void> {\n    // First check to see if we have a pending redirect event.\n    const previouslyStoredUser =\n      (await this.assertedPersistence.getCurrentUser()) as UserInternal | null;\n    let futureCurrentUser = previouslyStoredUser;\n    let needsTocheckMiddleware = false;\n    if (popupRedirectResolver && this.config.authDomain) {\n      await this.getOrInitRedirectPersistenceManager();\n      const redirectUserEventId = this.redirectUser?._redirectEventId;\n      const storedUserEventId = futureCurrentUser?._redirectEventId;\n      const result = await this.tryRedirectSignIn(popupRedirectResolver);\n\n      // If the stored user (i.e. the old \"currentUser\") has a redirectId that\n      // matches the redirect user, then we want to initially sign in with the\n      // new user object from result.\n      // TODO(samgho): More thoroughly test all of this\n      if (\n        (!redirectUserEventId || redirectUserEventId === storedUserEventId) &&\n        result?.user\n      ) {\n        futureCurrentUser = result.user as UserInternal;\n        needsTocheckMiddleware = true;\n      }\n    }\n\n    // If no user in persistence, there is no current user. Set to null.\n    if (!futureCurrentUser) {\n      return this.directlySetCurrentUser(null);\n    }\n\n    if (!futureCurrentUser._redirectEventId) {\n      // This isn't a redirect link operation, we can reload and bail.\n      // First though, ensure that we check the middleware is happy.\n      if (needsTocheckMiddleware) {\n        try {\n          await this.beforeStateQueue.runMiddleware(futureCurrentUser);\n        } catch (e) {\n          futureCurrentUser = previouslyStoredUser;\n          // We know this is available since the bit is only set when the\n          // resolver is available\n          this._popupRedirectResolver!._overrideRedirectResult(this, () =>\n            Promise.reject(e)\n          );\n        }\n      }\n\n      if (futureCurrentUser) {\n        return this.reloadAndSetCurrentUserOrClear(futureCurrentUser);\n      } else {\n        return this.directlySetCurrentUser(null);\n      }\n    }\n\n    _assert(this._popupRedirectResolver, this, AuthErrorCode.ARGUMENT_ERROR);\n    await this.getOrInitRedirectPersistenceManager();\n\n    // If the redirect user's event ID matches the current user's event ID,\n    // DO NOT reload the current user, otherwise they'll be cleared from storage.\n    // This is important for the reauthenticateWithRedirect() flow.\n    if (\n      this.redirectUser &&\n      this.redirectUser._redirectEventId === futureCurrentUser._redirectEventId\n    ) {\n      return this.directlySetCurrentUser(futureCurrentUser);\n    }\n\n    return this.reloadAndSetCurrentUserOrClear(futureCurrentUser);\n  }\n\n  private async tryRedirectSignIn(\n    redirectResolver: PopupRedirectResolver\n  ): Promise<UserCredential | null> {\n    // The redirect user needs to be checked (and signed in if available)\n    // during auth initialization. All of the normal sign in and link/reauth\n    // flows call back into auth and push things onto the promise queue. We\n    // need to await the result of the redirect sign in *inside the promise\n    // queue*. This presents a problem: we run into deadlock. See:\n    //    ┌> [Initialization] ─────┐\n    //    ┌> [<other queue tasks>] │\n    //    └─ [getRedirectResult] <─┘\n    //    where [] are tasks on the queue and arrows denote awaits\n    // Initialization will never complete because it's waiting on something\n    // that's waiting for initialization to complete!\n    //\n    // Instead, this method calls getRedirectResult() (stored in\n    // _completeRedirectFn) with an optional parameter that instructs all of\n    // the underlying auth operations to skip anything that mutates auth state.\n\n    let result: UserCredential | null = null;\n    try {\n      // We know this._popupRedirectResolver is set since redirectResolver\n      // is passed in. The _completeRedirectFn expects the unwrapped extern.\n      result = await this._popupRedirectResolver!._completeRedirectFn(\n        this,\n        redirectResolver,\n        true\n      );\n    } catch (e) {\n      // Swallow any errors here; the code can retrieve them in\n      // getRedirectResult().\n      await this._setRedirectUser(null);\n    }\n\n    return result;\n  }\n\n  private async reloadAndSetCurrentUserOrClear(\n    user: UserInternal\n  ): Promise<void> {\n    try {\n      await _reloadWithoutSaving(user);\n    } catch (e) {\n      if (\n        (e as FirebaseError)?.code !==\n        `auth/${AuthErrorCode.NETWORK_REQUEST_FAILED}`\n      ) {\n        // Something's wrong with the user's token. Log them out and remove\n        // them from storage\n        return this.directlySetCurrentUser(null);\n      }\n    }\n\n    return this.directlySetCurrentUser(user);\n  }\n\n  useDeviceLanguage(): void {\n    this.languageCode = _getUserLanguage();\n  }\n\n  async _delete(): Promise<void> {\n    this._deleted = true;\n  }\n\n  async updateCurrentUser(userExtern: User | null): Promise<void> {\n    // The public updateCurrentUser method needs to make a copy of the user,\n    // and also check that the project matches\n    const user = userExtern\n      ? (getModularInstance(userExtern) as UserInternal)\n      : null;\n    if (user) {\n      _assert(\n        user.auth.config.apiKey === this.config.apiKey,\n        this,\n        AuthErrorCode.INVALID_AUTH\n      );\n    }\n    return this._updateCurrentUser(user && user._clone(this));\n  }\n\n  async _updateCurrentUser(\n    user: User | null,\n    skipBeforeStateCallbacks: boolean = false\n  ): Promise<void> {\n    if (this._deleted) {\n      return;\n    }\n    if (user) {\n      _assert(\n        this.tenantId === user.tenantId,\n        this,\n        AuthErrorCode.TENANT_ID_MISMATCH\n      );\n    }\n\n    if (!skipBeforeStateCallbacks) {\n      await this.beforeStateQueue.runMiddleware(user);\n    }\n\n    return this.queue(async () => {\n      await this.directlySetCurrentUser(user as UserInternal | null);\n      this.notifyAuthListeners();\n    });\n  }\n\n  async signOut(): Promise<void> {\n    // Run first, to block _setRedirectUser() if any callbacks fail.\n    await this.beforeStateQueue.runMiddleware(null);\n    // Clear the redirect user when signOut is called\n    if (this.redirectPersistenceManager || this._popupRedirectResolver) {\n      await this._setRedirectUser(null);\n    }\n\n    // Prevent callbacks from being called again in _updateCurrentUser, as\n    // they were already called in the first line.\n    return this._updateCurrentUser(null, /* skipBeforeStateCallbacks */ true);\n  }\n\n  setPersistence(persistence: Persistence): Promise<void> {\n    return this.queue(async () => {\n      await this.assertedPersistence.setPersistence(_getInstance(persistence));\n    });\n  }\n\n  _getPersistence(): string {\n    return this.assertedPersistence.persistence.type;\n  }\n\n  _updateErrorMap(errorMap: AuthErrorMap): void {\n    this._errorFactory = new ErrorFactory<AuthErrorCode, AuthErrorParams>(\n      'auth',\n      'Firebase',\n      (errorMap as ErrorMapRetriever)()\n    );\n  }\n\n  onAuthStateChanged(\n    nextOrObserver: NextOrObserver<User>,\n    error?: ErrorFn,\n    completed?: CompleteFn\n  ): Unsubscribe {\n    return this.registerStateListener(\n      this.authStateSubscription,\n      nextOrObserver,\n      error,\n      completed\n    );\n  }\n\n  beforeAuthStateChanged(\n    callback: (user: User | null) => void | Promise<void>,\n    onAbort?: () => void\n  ): Unsubscribe {\n    return this.beforeStateQueue.pushCallback(callback, onAbort);\n  }\n\n  onIdTokenChanged(\n    nextOrObserver: NextOrObserver<User>,\n    error?: ErrorFn,\n    completed?: CompleteFn\n  ): Unsubscribe {\n    return this.registerStateListener(\n      this.idTokenSubscription,\n      nextOrObserver,\n      error,\n      completed\n    );\n  }\n\n  toJSON(): object {\n    return {\n      apiKey: this.config.apiKey,\n      authDomain: this.config.authDomain,\n      appName: this.name,\n      currentUser: this._currentUser?.toJSON()\n    };\n  }\n\n  async _setRedirectUser(\n    user: UserInternal | null,\n    popupRedirectResolver?: PopupRedirectResolver\n  ): Promise<void> {\n    const redirectManager = await this.getOrInitRedirectPersistenceManager(\n      popupRedirectResolver\n    );\n    return user === null\n      ? redirectManager.removeCurrentUser()\n      : redirectManager.setCurrentUser(user);\n  }\n\n  private async getOrInitRedirectPersistenceManager(\n    popupRedirectResolver?: PopupRedirectResolver\n  ): Promise<PersistenceUserManager> {\n    if (!this.redirectPersistenceManager) {\n      const resolver: PopupRedirectResolverInternal | null =\n        (popupRedirectResolver && _getInstance(popupRedirectResolver)) ||\n        this._popupRedirectResolver;\n      _assert(resolver, this, AuthErrorCode.ARGUMENT_ERROR);\n      this.redirectPersistenceManager = await PersistenceUserManager.create(\n        this,\n        [_getInstance(resolver._redirectPersistence)],\n        KeyName.REDIRECT_USER\n      );\n      this.redirectUser =\n        await this.redirectPersistenceManager.getCurrentUser();\n    }\n\n    return this.redirectPersistenceManager;\n  }\n\n  async _redirectUserForId(id: string): Promise<UserInternal | null> {\n    // Make sure we've cleared any pending persistence actions if we're not in\n    // the initializer\n    if (this._isInitialized) {\n      await this.queue(async () => {});\n    }\n\n    if (this._currentUser?._redirectEventId === id) {\n      return this._currentUser;\n    }\n\n    if (this.redirectUser?._redirectEventId === id) {\n      return this.redirectUser;\n    }\n\n    return null;\n  }\n\n  async _persistUserIfCurrent(user: UserInternal): Promise<void> {\n    if (user === this.currentUser) {\n      return this.queue(async () => this.directlySetCurrentUser(user));\n    }\n  }\n\n  /** Notifies listeners only if the user is current */\n  _notifyListenersIfCurrent(user: UserInternal): void {\n    if (user === this.currentUser) {\n      this.notifyAuthListeners();\n    }\n  }\n\n  _key(): string {\n    return `${this.config.authDomain}:${this.config.apiKey}:${this.name}`;\n  }\n\n  _startProactiveRefresh(): void {\n    this.isProactiveRefreshEnabled = true;\n    if (this.currentUser) {\n      this._currentUser._startProactiveRefresh();\n    }\n  }\n\n  _stopProactiveRefresh(): void {\n    this.isProactiveRefreshEnabled = false;\n    if (this.currentUser) {\n      this._currentUser._stopProactiveRefresh();\n    }\n  }\n\n  /** Returns the current user cast as the internal type */\n  get _currentUser(): UserInternal {\n    return this.currentUser as UserInternal;\n  }\n\n  private notifyAuthListeners(): void {\n    if (!this._isInitialized) {\n      return;\n    }\n\n    this.idTokenSubscription.next(this.currentUser);\n\n    const currentUid = this.currentUser?.uid ?? null;\n    if (this.lastNotifiedUid !== currentUid) {\n      this.lastNotifiedUid = currentUid;\n      this.authStateSubscription.next(this.currentUser);\n    }\n  }\n\n  private registerStateListener(\n    subscription: Subscription<User>,\n    nextOrObserver: NextOrObserver<User>,\n    error?: ErrorFn,\n    completed?: CompleteFn\n  ): Unsubscribe {\n    if (this._deleted) {\n      return () => {};\n    }\n\n    const cb =\n      typeof nextOrObserver === 'function'\n        ? nextOrObserver\n        : nextOrObserver.next.bind(nextOrObserver);\n\n    const promise = this._isInitialized\n      ? Promise.resolve()\n      : this._initializationPromise;\n    _assert(promise, this, AuthErrorCode.INTERNAL_ERROR);\n    // The callback needs to be called asynchronously per the spec.\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    promise.then(() => cb(this.currentUser));\n\n    if (typeof nextOrObserver === 'function') {\n      return subscription.addObserver(nextOrObserver, error, completed);\n    } else {\n      return subscription.addObserver(nextOrObserver);\n    }\n  }\n\n  /**\n   * Unprotected (from race conditions) method to set the current user. This\n   * should only be called from within a queued callback. This is necessary\n   * because the queue shouldn't rely on another queued callback.\n   */\n  private async directlySetCurrentUser(\n    user: UserInternal | null\n  ): Promise<void> {\n    if (this.currentUser && this.currentUser !== user) {\n      this._currentUser._stopProactiveRefresh();\n    }\n    if (user && this.isProactiveRefreshEnabled) {\n      user._startProactiveRefresh();\n    }\n\n    this.currentUser = user;\n\n    if (user) {\n      await this.assertedPersistence.setCurrentUser(user);\n    } else {\n      await this.assertedPersistence.removeCurrentUser();\n    }\n  }\n\n  private queue(action: AsyncAction): Promise<void> {\n    // In case something errors, the callback still should be called in order\n    // to keep the promise chain alive\n    this.operations = this.operations.then(action, action);\n    return this.operations;\n  }\n\n  private get assertedPersistence(): PersistenceUserManager {\n    _assert(this.persistenceManager, this, AuthErrorCode.INTERNAL_ERROR);\n    return this.persistenceManager;\n  }\n\n  private frameworks: string[] = [];\n  private clientVersion: string;\n  _logFramework(framework: string): void {\n    if (!framework || this.frameworks.includes(framework)) {\n      return;\n    }\n    this.frameworks.push(framework);\n\n    // Sort alphabetically so that \"FirebaseCore-web,FirebaseUI-web\" and\n    // \"FirebaseUI-web,FirebaseCore-web\" aren't viewed as different.\n    this.frameworks.sort();\n    this.clientVersion = _getClientVersion(\n      this.config.clientPlatform,\n      this._getFrameworks()\n    );\n  }\n  _getFrameworks(): readonly string[] {\n    return this.frameworks;\n  }\n  async _getAdditionalHeaders(): Promise<Record<string, string>> {\n    // Additional headers on every request\n    const headers: Record<string, string> = {\n      [HttpHeader.X_CLIENT_VERSION]: this.clientVersion\n    };\n\n    if (this.app.options.appId) {\n      headers[HttpHeader.X_FIREBASE_GMPID] = this.app.options.appId;\n    }\n\n    // If the heartbeat service exists, add the heartbeat string\n    const heartbeatsHeader = await this.heartbeatServiceProvider\n      .getImmediate({\n        optional: true\n      })\n      ?.getHeartbeatsHeader();\n    if (heartbeatsHeader) {\n      headers[HttpHeader.X_FIREBASE_CLIENT] = heartbeatsHeader;\n    }\n    return headers;\n  }\n}\n\n/**\n * Method to be used to cast down to our private implmentation of Auth.\n * It will also handle unwrapping from the compat type if necessary\n *\n * @param auth Auth object passed in from developer\n */\nexport function _castAuth(auth: Auth): AuthInternal {\n  return getModularInstance(auth) as AuthInternal;\n}\n\n/** Helper class to wrap subscriber logic */\nclass Subscription<T> {\n  private observer: Observer<T | null> | null = null;\n  readonly addObserver: Subscribe<T | null> = createSubscribe(\n    observer => (this.observer = observer)\n  );\n\n  constructor(readonly auth: AuthInternal) {}\n\n  get next(): NextFn<T | null> {\n    _assert(this.observer, this.auth, AuthErrorCode.INTERNAL_ERROR);\n    return this.observer.next.bind(this.observer);\n  }\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Auth } from '../../model/public_types';\nimport { AuthErrorCode } from '../errors';\nimport { _assert } from '../util/assert';\nimport { _castAuth } from './auth_impl';\n\n/**\n * Changes the {@link Auth} instance to communicate with the Firebase Auth Emulator, instead of production\n * Firebase Auth services.\n *\n * @remarks\n * This must be called synchronously immediately following the first call to\n * {@link initializeAuth}.  Do not use with production credentials as emulator\n * traffic is not encrypted.\n *\n *\n * @example\n * ```javascript\n * connectAuthEmulator(auth, 'http://127.0.0.1:9099', { disableWarnings: true });\n * ```\n *\n * @param auth - The {@link Auth} instance.\n * @param url - The URL at which the emulator is running (eg, 'http://localhost:9099').\n * @param options - Optional. `options.disableWarnings` defaults to `false`. Set it to\n * `true` to disable the warning banner attached to the DOM.\n *\n * @public\n */\nexport function connectAuthEmulator(\n  auth: Auth,\n  url: string,\n  options?: { disableWarnings: boolean }\n): void {\n  const authInternal = _castAuth(auth);\n  _assert(\n    authInternal._canInitEmulator,\n    authInternal,\n    AuthErrorCode.EMULATOR_CONFIG_FAILED\n  );\n\n  _assert(\n    /^https?:\\/\\//.test(url),\n    authInternal,\n    AuthErrorCode.INVALID_EMULATOR_SCHEME\n  );\n\n  const disableWarnings = !!options?.disableWarnings;\n\n  const protocol = extractProtocol(url);\n  const { host, port } = extractHostAndPort(url);\n  const portStr = port === null ? '' : `:${port}`;\n\n  // Always replace path with \"/\" (even if input url had no path at all, or had a different one).\n  authInternal.config.emulator = { url: `${protocol}//${host}${portStr}/` };\n  authInternal.settings.appVerificationDisabledForTesting = true;\n  authInternal.emulatorConfig = Object.freeze({\n    host,\n    port,\n    protocol: protocol.replace(':', ''),\n    options: Object.freeze({ disableWarnings })\n  });\n\n  if (!disableWarnings) {\n    emitEmulatorWarning();\n  }\n}\n\nfunction extractProtocol(url: string): string {\n  const protocolEnd = url.indexOf(':');\n  return protocolEnd < 0 ? '' : url.substr(0, protocolEnd + 1);\n}\n\nfunction extractHostAndPort(url: string): {\n  host: string;\n  port: number | null;\n} {\n  const protocol = extractProtocol(url);\n  const authority = /(\\/\\/)?([^?#/]+)/.exec(url.substr(protocol.length)); // Between // and /, ? or #.\n  if (!authority) {\n    return { host: '', port: null };\n  }\n  const hostAndPort = authority[2].split('@').pop() || ''; // Strip out \"username:password@\".\n  const bracketedIPv6 = /^(\\[[^\\]]+\\])(:|$)/.exec(hostAndPort);\n  if (bracketedIPv6) {\n    const host = bracketedIPv6[1];\n    return { host, port: parsePort(hostAndPort.substr(host.length + 1)) };\n  } else {\n    const [host, port] = hostAndPort.split(':');\n    return { host, port: parsePort(port) };\n  }\n}\n\nfunction parsePort(portStr: string): number | null {\n  if (!portStr) {\n    return null;\n  }\n  const port = Number(portStr);\n  if (isNaN(port)) {\n    return null;\n  }\n  return port;\n}\n\nfunction emitEmulatorWarning(): void {\n  function attachBanner(): void {\n    const el = document.createElement('p');\n    const sty = el.style;\n    el.innerText =\n      'Running in emulator mode. Do not use with production credentials.';\n    sty.position = 'fixed';\n    sty.width = '100%';\n    sty.backgroundColor = '#ffffff';\n    sty.border = '.1em solid #000000';\n    sty.color = '#b50000';\n    sty.bottom = '0px';\n    sty.left = '0px';\n    sty.margin = '0px';\n    sty.zIndex = '10000';\n    sty.textAlign = 'center';\n    el.classList.add('firebase-emulator-warning');\n    document.body.appendChild(el);\n  }\n\n  if (typeof console !== 'undefined' && typeof console.info === 'function') {\n    console.info(\n      'WARNING: You are using the Auth Emulator,' +\n        ' which is intended for local testing only.  Do not use with' +\n        ' production credentials.'\n    );\n  }\n  if (typeof window !== 'undefined' && typeof document !== 'undefined') {\n    if (document.readyState === 'loading') {\n      window.addEventListener('DOMContentLoaded', attachBanner);\n    } else {\n      attachBanner();\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PhoneOrOauthTokenResponse } from '../../api/authentication/mfa';\nimport { AuthInternal } from '../../model/auth';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { debugFail } from '../util/assert';\n\n/**\n * Interface that represents the credentials returned by an {@link AuthProvider}.\n *\n * @remarks\n * Implementations specify the details about each auth provider's credential requirements.\n *\n * @public\n */\nexport class AuthCredential {\n  /** @internal */\n  protected constructor(\n    /**\n     * The authentication provider ID for the credential.\n     *\n     * @remarks\n     * For example, 'facebook.com', or 'google.com'.\n     */\n    readonly providerId: string,\n    /**\n     * The authentication sign in method for the credential.\n     *\n     * @remarks\n     * For example, {@link SignInMethod}.EMAIL_PASSWORD, or\n     * {@link SignInMethod}.EMAIL_LINK. This corresponds to the sign-in method\n     * identifier as returned in {@link fetchSignInMethodsForEmail}.\n     */\n    readonly signInMethod: string\n  ) {}\n\n  /**\n   * Returns a JSON-serializable representation of this object.\n   *\n   * @returns a JSON-serializable representation of this object.\n   */\n  toJSON(): object {\n    return debugFail('not implemented');\n  }\n\n  /** @internal */\n  _getIdTokenResponse(_auth: AuthInternal): Promise<PhoneOrOauthTokenResponse> {\n    return debugFail('not implemented');\n  }\n  /** @internal */\n  _linkToIdToken(\n    _auth: AuthInternal,\n    _idToken: string\n  ): Promise<IdTokenResponse> {\n    return debugFail('not implemented');\n  }\n  /** @internal */\n  _getReauthenticationResolver(_auth: AuthInternal): Promise<IdTokenResponse> {\n    return debugFail('not implemented');\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ActionCodeOperation, Auth } from '../../model/public_types';\n\nimport {\n  Endpoint,\n  HttpMethod,\n  _addTidIfNecessary,\n  _performApiRequest,\n  _performSignInRequest\n} from '../index';\nimport { IdToken, IdTokenResponse } from '../../model/id_token';\n\nexport interface SignInWithPasswordRequest {\n  returnSecureToken?: boolean;\n  email: string;\n  password: string;\n  tenantId?: string;\n}\n\nexport interface SignInWithPasswordResponse extends IdTokenResponse {\n  email: string;\n  displayName: string;\n}\n\nexport async function signInWithPassword(\n  auth: Auth,\n  request: SignInWithPasswordRequest\n): Promise<SignInWithPasswordResponse> {\n  return _performSignInRequest<\n    SignInWithPasswordRequest,\n    SignInWithPasswordResponse\n  >(\n    auth,\n    HttpMethod.POST,\n    Endpoint.SIGN_IN_WITH_PASSWORD,\n    _addTidIfNecessary(auth, request)\n  );\n}\n\nexport interface GetOobCodeRequest {\n  email?: string; // Everything except VERIFY_AND_CHANGE_EMAIL\n  continueUrl?: string;\n  iOSBundleId?: string;\n  iosAppStoreId?: string;\n  androidPackageName?: string;\n  androidInstallApp?: boolean;\n  androidMinimumVersionCode?: string;\n  canHandleCodeInApp?: boolean;\n  dynamicLinkDomain?: string;\n  tenantId?: string;\n  targetProjectid?: string;\n}\n\nexport interface VerifyEmailRequest extends GetOobCodeRequest {\n  requestType: ActionCodeOperation.VERIFY_EMAIL;\n  idToken: IdToken;\n}\n\nexport interface PasswordResetRequest extends GetOobCodeRequest {\n  requestType: ActionCodeOperation.PASSWORD_RESET;\n  email: string;\n  captchaResp?: string;\n}\n\nexport interface EmailSignInRequest extends GetOobCodeRequest {\n  requestType: ActionCodeOperation.EMAIL_SIGNIN;\n  email: string;\n}\n\nexport interface VerifyAndChangeEmailRequest extends GetOobCodeRequest {\n  requestType: ActionCodeOperation.VERIFY_AND_CHANGE_EMAIL;\n  idToken: IdToken;\n  newEmail: string;\n}\n\ninterface GetOobCodeResponse {\n  email: string;\n}\n\nexport interface VerifyEmailResponse extends GetOobCodeResponse {}\nexport interface PasswordResetResponse extends GetOobCodeResponse {}\nexport interface EmailSignInResponse extends GetOobCodeResponse {}\nexport interface VerifyAndChangeEmailResponse extends GetOobCodeRequest {}\n\nasync function sendOobCode(\n  auth: Auth,\n  request: GetOobCodeRequest\n): Promise<GetOobCodeResponse> {\n  return _performApiRequest<GetOobCodeRequest, GetOobCodeResponse>(\n    auth,\n    HttpMethod.POST,\n    Endpoint.SEND_OOB_CODE,\n    _addTidIfNecessary(auth, request)\n  );\n}\n\nexport async function sendEmailVerification(\n  auth: Auth,\n  request: VerifyEmailRequest\n): Promise<VerifyEmailResponse> {\n  return sendOobCode(auth, request);\n}\n\nexport async function sendPasswordResetEmail(\n  auth: Auth,\n  request: PasswordResetRequest\n): Promise<PasswordResetResponse> {\n  return sendOobCode(auth, request);\n}\n\nexport async function sendSignInLinkToEmail(\n  auth: Auth,\n  request: EmailSignInRequest\n): Promise<EmailSignInResponse> {\n  return sendOobCode(auth, request);\n}\n\nexport async function verifyAndChangeEmail(\n  auth: Auth,\n  request: VerifyAndChangeEmailRequest\n): Promise<VerifyAndChangeEmailResponse> {\n  return sendOobCode(auth, request);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  _performSignInRequest,\n  Endpoint,\n  HttpMethod,\n  _addTidIfNecessary\n} from '../index';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { Auth } from '../../model/public_types';\n\nexport interface SignInWithEmailLinkRequest {\n  email: string;\n  oobCode: string;\n  tenantId?: string;\n}\n\nexport interface SignInWithEmailLinkResponse extends IdTokenResponse {\n  email: string;\n  isNewUser: boolean;\n}\n\nexport async function signInWithEmailLink(\n  auth: Auth,\n  request: SignInWithEmailLinkRequest\n): Promise<SignInWithEmailLinkResponse> {\n  return _performSignInRequest<\n    SignInWithEmailLinkRequest,\n    SignInWithEmailLinkResponse\n  >(\n    auth,\n    HttpMethod.POST,\n    Endpoint.SIGN_IN_WITH_EMAIL_LINK,\n    _addTidIfNecessary(auth, request)\n  );\n}\n\nexport interface SignInWithEmailLinkForLinkingRequest\n  extends SignInWithEmailLinkRequest {\n  idToken: string;\n}\n\nexport async function signInWithEmailLinkForLinking(\n  auth: Auth,\n  request: SignInWithEmailLinkForLinkingRequest\n): Promise<SignInWithEmailLinkResponse> {\n  return _performSignInRequest<\n    SignInWithEmailLinkForLinkingRequest,\n    SignInWithEmailLinkResponse\n  >(\n    auth,\n    HttpMethod.POST,\n    Endpoint.SIGN_IN_WITH_EMAIL_LINK,\n    _addTidIfNecessary(auth, request)\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ProviderId, SignInMethod } from '../../model/enums';\n\nimport { updateEmailPassword } from '../../api/account_management/email_and_password';\nimport { signInWithPassword } from '../../api/authentication/email_and_password';\nimport {\n  signInWithEmailLink,\n  signInWithEmailLinkForLinking\n} from '../../api/authentication/email_link';\nimport { AuthInternal } from '../../model/auth';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { AuthErrorCode } from '../errors';\nimport { _fail } from '../util/assert';\nimport { AuthCredential } from './auth_credential';\n\n/**\n * Interface that represents the credentials returned by {@link EmailAuthProvider} for\n * {@link ProviderId}.PASSWORD\n *\n * @remarks\n * Covers both {@link SignInMethod}.EMAIL_PASSWORD and\n * {@link SignInMethod}.EMAIL_LINK.\n *\n * @public\n */\nexport class EmailAuthCredential extends AuthCredential {\n  /** @internal */\n  private constructor(\n    /** @internal */\n    readonly _email: string,\n    /** @internal */\n    readonly _password: string,\n    signInMethod: SignInMethod,\n    /** @internal */\n    readonly _tenantId: string | null = null\n  ) {\n    super(ProviderId.PASSWORD, signInMethod);\n  }\n\n  /** @internal */\n  static _fromEmailAndPassword(\n    email: string,\n    password: string\n  ): EmailAuthCredential {\n    return new EmailAuthCredential(\n      email,\n      password,\n      SignInMethod.EMAIL_PASSWORD\n    );\n  }\n\n  /** @internal */\n  static _fromEmailAndCode(\n    email: string,\n    oobCode: string,\n    tenantId: string | null = null\n  ): EmailAuthCredential {\n    return new EmailAuthCredential(\n      email,\n      oobCode,\n      SignInMethod.EMAIL_LINK,\n      tenantId\n    );\n  }\n\n  /** {@inheritdoc AuthCredential.toJSON} */\n  toJSON(): object {\n    return {\n      email: this._email,\n      password: this._password,\n      signInMethod: this.signInMethod,\n      tenantId: this._tenantId\n    };\n  }\n\n  /**\n   * Static method to deserialize a JSON representation of an object into an {@link  AuthCredential}.\n   *\n   * @param json - Either `object` or the stringified representation of the object. When string is\n   * provided, `JSON.parse` would be called first.\n   *\n   * @returns If the JSON input does not represent an {@link AuthCredential}, null is returned.\n   */\n  static fromJSON(json: object | string): EmailAuthCredential | null {\n    const obj = typeof json === 'string' ? JSON.parse(json) : json;\n    if (obj?.email && obj?.password) {\n      if (obj.signInMethod === SignInMethod.EMAIL_PASSWORD) {\n        return this._fromEmailAndPassword(obj.email, obj.password);\n      } else if (obj.signInMethod === SignInMethod.EMAIL_LINK) {\n        return this._fromEmailAndCode(obj.email, obj.password, obj.tenantId);\n      }\n    }\n    return null;\n  }\n\n  /** @internal */\n  async _getIdTokenResponse(auth: AuthInternal): Promise<IdTokenResponse> {\n    switch (this.signInMethod) {\n      case SignInMethod.EMAIL_PASSWORD:\n        return signInWithPassword(auth, {\n          returnSecureToken: true,\n          email: this._email,\n          password: this._password\n        });\n      case SignInMethod.EMAIL_LINK:\n        return signInWithEmailLink(auth, {\n          email: this._email,\n          oobCode: this._password\n        });\n      default:\n        _fail(auth, AuthErrorCode.INTERNAL_ERROR);\n    }\n  }\n\n  /** @internal */\n  async _linkToIdToken(\n    auth: AuthInternal,\n    idToken: string\n  ): Promise<IdTokenResponse> {\n    switch (this.signInMethod) {\n      case SignInMethod.EMAIL_PASSWORD:\n        return updateEmailPassword(auth, {\n          idToken,\n          returnSecureToken: true,\n          email: this._email,\n          password: this._password\n        });\n      case SignInMethod.EMAIL_LINK:\n        return signInWithEmailLinkForLinking(auth, {\n          idToken,\n          email: this._email,\n          oobCode: this._password\n        });\n      default:\n        _fail(auth, AuthErrorCode.INTERNAL_ERROR);\n    }\n  }\n\n  /** @internal */\n  _getReauthenticationResolver(auth: AuthInternal): Promise<IdTokenResponse> {\n    return this._getIdTokenResponse(auth);\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Endpoint,\n  HttpMethod,\n  _addTidIfNecessary,\n  _performSignInRequest\n} from '../index';\nimport { IdToken, IdTokenResponse } from '../../model/id_token';\nimport { Auth } from '../../model/public_types';\n\nexport interface SignInWithIdpRequest {\n  requestUri: string;\n  postBody?: string;\n  sessionId?: string;\n  tenantId?: string;\n  returnSecureToken: boolean;\n  returnIdpCredential?: boolean;\n  idToken?: IdToken;\n  autoCreate?: boolean;\n  pendingToken?: string;\n}\n\n/**\n * @internal\n */\nexport interface SignInWithIdpResponse extends IdTokenResponse {\n  oauthAccessToken?: string;\n  oauthTokenSecret?: string;\n  nonce?: string;\n  oauthIdToken?: string;\n  pendingToken?: string;\n}\n\nexport async function signInWithIdp(\n  auth: Auth,\n  request: SignInWithIdpRequest\n): Promise<SignInWithIdpResponse> {\n  return _performSignInRequest<SignInWithIdpRequest, SignInWithIdpResponse>(\n    auth,\n    HttpMethod.POST,\n    Endpoint.SIGN_IN_WITH_IDP,\n    _addTidIfNecessary(auth, request)\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { querystring } from '@firebase/util';\n\nimport {\n  signInWithIdp,\n  SignInWithIdpRequest\n} from '../../api/authentication/idp';\nimport { AuthInternal } from '../../model/auth';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { AuthErrorCode } from '../errors';\nimport { _fail } from '../util/assert';\nimport { AuthCredential } from './auth_credential';\n\nconst IDP_REQUEST_URI = 'http://localhost';\n\nexport interface OAuthCredentialParams {\n  // OAuth 2 uses either id token or access token\n  idToken?: string | null;\n  accessToken?: string | null;\n\n  // These fields are used with OAuth 1\n  oauthToken?: string;\n  secret?: string;\n  oauthTokenSecret?: string;\n\n  // Nonce is only set if pendingToken is not present\n  nonce?: string;\n  pendingToken?: string;\n\n  // Utilities\n  providerId: string;\n  signInMethod: string;\n}\n\n/**\n * Represents the OAuth credentials returned by an {@link OAuthProvider}.\n *\n * @remarks\n * Implementations specify the details about each auth provider's credential requirements.\n *\n * @public\n */\nexport class OAuthCredential extends AuthCredential {\n  /**\n   * The OAuth ID token associated with the credential if it belongs to an OIDC provider,\n   * such as `google.com`.\n   * @readonly\n   */\n  idToken?: string;\n  /**\n   * The OAuth access token associated with the credential if it belongs to an\n   * {@link OAuthProvider}, such as `facebook.com`, `twitter.com`, etc.\n   * @readonly\n   */\n  accessToken?: string;\n  /**\n   * The OAuth access token secret associated with the credential if it belongs to an OAuth 1.0\n   * provider, such as `twitter.com`.\n   * @readonly\n   */\n  secret?: string;\n\n  private nonce?: string;\n  private pendingToken: string | null = null;\n\n  /** @internal */\n  static _fromParams(params: OAuthCredentialParams): OAuthCredential {\n    const cred = new OAuthCredential(params.providerId, params.signInMethod);\n\n    if (params.idToken || params.accessToken) {\n      // OAuth 2 and either ID token or access token.\n      if (params.idToken) {\n        cred.idToken = params.idToken;\n      }\n\n      if (params.accessToken) {\n        cred.accessToken = params.accessToken;\n      }\n\n      // Add nonce if available and no pendingToken is present.\n      if (params.nonce && !params.pendingToken) {\n        cred.nonce = params.nonce;\n      }\n\n      if (params.pendingToken) {\n        cred.pendingToken = params.pendingToken;\n      }\n    } else if (params.oauthToken && params.oauthTokenSecret) {\n      // OAuth 1 and OAuth token with token secret\n      cred.accessToken = params.oauthToken;\n      cred.secret = params.oauthTokenSecret;\n    } else {\n      _fail(AuthErrorCode.ARGUMENT_ERROR);\n    }\n\n    return cred;\n  }\n\n  /** {@inheritdoc AuthCredential.toJSON}  */\n  toJSON(): object {\n    return {\n      idToken: this.idToken,\n      accessToken: this.accessToken,\n      secret: this.secret,\n      nonce: this.nonce,\n      pendingToken: this.pendingToken,\n      providerId: this.providerId,\n      signInMethod: this.signInMethod\n    };\n  }\n\n  /**\n   * Static method to deserialize a JSON representation of an object into an\n   * {@link  AuthCredential}.\n   *\n   * @param json - Input can be either Object or the stringified representation of the object.\n   * When string is provided, JSON.parse would be called first.\n   *\n   * @returns If the JSON input does not represent an {@link  AuthCredential}, null is returned.\n   */\n  static fromJSON(json: string | object): OAuthCredential | null {\n    const obj = typeof json === 'string' ? JSON.parse(json) : json;\n    const { providerId, signInMethod, ...rest }: OAuthCredentialParams = obj;\n    if (!providerId || !signInMethod) {\n      return null;\n    }\n\n    const cred = new OAuthCredential(providerId, signInMethod);\n    cred.idToken = rest.idToken || undefined;\n    cred.accessToken = rest.accessToken || undefined;\n    cred.secret = rest.secret;\n    cred.nonce = rest.nonce;\n    cred.pendingToken = rest.pendingToken || null;\n    return cred;\n  }\n\n  /** @internal */\n  _getIdTokenResponse(auth: AuthInternal): Promise<IdTokenResponse> {\n    const request = this.buildRequest();\n    return signInWithIdp(auth, request);\n  }\n\n  /** @internal */\n  _linkToIdToken(\n    auth: AuthInternal,\n    idToken: string\n  ): Promise<IdTokenResponse> {\n    const request = this.buildRequest();\n    request.idToken = idToken;\n    return signInWithIdp(auth, request);\n  }\n\n  /** @internal */\n  _getReauthenticationResolver(auth: AuthInternal): Promise<IdTokenResponse> {\n    const request = this.buildRequest();\n    request.autoCreate = false;\n    return signInWithIdp(auth, request);\n  }\n\n  private buildRequest(): SignInWithIdpRequest {\n    const request: SignInWithIdpRequest = {\n      requestUri: IDP_REQUEST_URI,\n      returnSecureToken: true\n    };\n\n    if (this.pendingToken) {\n      request.pendingToken = this.pendingToken;\n    } else {\n      const postBody: Record<string, string> = {};\n      if (this.idToken) {\n        postBody['id_token'] = this.idToken;\n      }\n      if (this.accessToken) {\n        postBody['access_token'] = this.accessToken;\n      }\n      if (this.secret) {\n        postBody['oauth_token_secret'] = this.secret;\n      }\n\n      postBody['providerId'] = this.providerId;\n      if (this.nonce && !this.pendingToken) {\n        postBody['nonce'] = this.nonce;\n      }\n\n      request.postBody = querystring(postBody);\n    }\n\n    return request;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Endpoint,\n  HttpMethod,\n  _addTidIfNecessary,\n  _makeTaggedError,\n  _performApiRequest,\n  _performSignInRequest\n} from '../index';\nimport { AuthErrorCode } from '../../core/errors';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { ServerError, ServerErrorMap } from '../errors';\nimport { Auth } from '../../model/public_types';\n\nexport interface SendPhoneVerificationCodeRequest {\n  phoneNumber: string;\n  recaptchaToken: string;\n  tenantId?: string;\n}\n\nexport interface SendPhoneVerificationCodeResponse {\n  sessionInfo: string;\n}\n\nexport async function sendPhoneVerificationCode(\n  auth: Auth,\n  request: SendPhoneVerificationCodeRequest\n): Promise<SendPhoneVerificationCodeResponse> {\n  return _performApiRequest<\n    SendPhoneVerificationCodeRequest,\n    SendPhoneVerificationCodeResponse\n  >(\n    auth,\n    HttpMethod.POST,\n    Endpoint.SEND_VERIFICATION_CODE,\n    _addTidIfNecessary(auth, request)\n  );\n}\n\n/**\n * @internal\n */\nexport interface SignInWithPhoneNumberRequest {\n  temporaryProof?: string;\n  phoneNumber?: string;\n  sessionInfo?: string;\n  code?: string;\n  tenantId?: string;\n}\n\nexport interface LinkWithPhoneNumberRequest\n  extends SignInWithPhoneNumberRequest {\n  idToken: string;\n}\n\n/**\n * @internal\n */\nexport interface SignInWithPhoneNumberResponse extends IdTokenResponse {\n  temporaryProof?: string;\n  phoneNumber?: string;\n}\n\nexport async function signInWithPhoneNumber(\n  auth: Auth,\n  request: SignInWithPhoneNumberRequest\n): Promise<SignInWithPhoneNumberResponse> {\n  return _performSignInRequest<\n    SignInWithPhoneNumberRequest,\n    SignInWithPhoneNumberResponse\n  >(\n    auth,\n    HttpMethod.POST,\n    Endpoint.SIGN_IN_WITH_PHONE_NUMBER,\n    _addTidIfNecessary(auth, request)\n  );\n}\n\nexport async function linkWithPhoneNumber(\n  auth: Auth,\n  request: LinkWithPhoneNumberRequest\n): Promise<SignInWithPhoneNumberResponse> {\n  const response = await _performSignInRequest<\n    LinkWithPhoneNumberRequest,\n    SignInWithPhoneNumberResponse\n  >(\n    auth,\n    HttpMethod.POST,\n    Endpoint.SIGN_IN_WITH_PHONE_NUMBER,\n    _addTidIfNecessary(auth, request)\n  );\n  if (response.temporaryProof) {\n    throw _makeTaggedError(auth, AuthErrorCode.NEED_CONFIRMATION, response);\n  }\n  return response;\n}\n\ninterface VerifyPhoneNumberForExistingRequest\n  extends SignInWithPhoneNumberRequest {\n  operation: 'REAUTH';\n}\n\nconst VERIFY_PHONE_NUMBER_FOR_EXISTING_ERROR_MAP_: Partial<\n  ServerErrorMap<ServerError>\n> = {\n  [ServerError.USER_NOT_FOUND]: AuthErrorCode.USER_DELETED\n};\n\nexport async function verifyPhoneNumberForExisting(\n  auth: Auth,\n  request: SignInWithPhoneNumberRequest\n): Promise<SignInWithPhoneNumberResponse> {\n  const apiRequest: VerifyPhoneNumberForExistingRequest = {\n    ...request,\n    operation: 'REAUTH'\n  };\n  return _performSignInRequest<\n    VerifyPhoneNumberForExistingRequest,\n    SignInWithPhoneNumberResponse\n  >(\n    auth,\n    HttpMethod.POST,\n    Endpoint.SIGN_IN_WITH_PHONE_NUMBER,\n    _addTidIfNecessary(auth, apiRequest),\n    VERIFY_PHONE_NUMBER_FOR_EXISTING_ERROR_MAP_\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ProviderId, SignInMethod } from '../../model/enums';\n\nimport { PhoneOrOauthTokenResponse } from '../../api/authentication/mfa';\nimport {\n  linkWithPhoneNumber,\n  signInWithPhoneNumber,\n  SignInWithPhoneNumberRequest,\n  verifyPhoneNumberForExisting\n} from '../../api/authentication/sms';\nimport { AuthInternal } from '../../model/auth';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { AuthCredential } from './auth_credential';\n\nexport interface PhoneAuthCredentialParameters {\n  verificationId?: string;\n  verificationCode?: string;\n  phoneNumber?: string;\n  temporaryProof?: string;\n}\n\n/**\n * Represents the credentials returned by {@link PhoneAuthProvider}.\n *\n * @public\n */\nexport class PhoneAuthCredential extends AuthCredential {\n  private constructor(private readonly params: PhoneAuthCredentialParameters) {\n    super(ProviderId.PHONE, SignInMethod.PHONE);\n  }\n\n  /** @internal */\n  static _fromVerification(\n    verificationId: string,\n    verificationCode: string\n  ): PhoneAuthCredential {\n    return new PhoneAuthCredential({ verificationId, verificationCode });\n  }\n\n  /** @internal */\n  static _fromTokenResponse(\n    phoneNumber: string,\n    temporaryProof: string\n  ): PhoneAuthCredential {\n    return new PhoneAuthCredential({ phoneNumber, temporaryProof });\n  }\n\n  /** @internal */\n  _getIdTokenResponse(auth: AuthInternal): Promise<PhoneOrOauthTokenResponse> {\n    return signInWithPhoneNumber(auth, this._makeVerificationRequest());\n  }\n\n  /** @internal */\n  _linkToIdToken(\n    auth: AuthInternal,\n    idToken: string\n  ): Promise<IdTokenResponse> {\n    return linkWithPhoneNumber(auth, {\n      idToken,\n      ...this._makeVerificationRequest()\n    });\n  }\n\n  /** @internal */\n  _getReauthenticationResolver(auth: AuthInternal): Promise<IdTokenResponse> {\n    return verifyPhoneNumberForExisting(auth, this._makeVerificationRequest());\n  }\n\n  /** @internal */\n  _makeVerificationRequest(): SignInWithPhoneNumberRequest {\n    const { temporaryProof, phoneNumber, verificationId, verificationCode } =\n      this.params;\n    if (temporaryProof && phoneNumber) {\n      return { temporaryProof, phoneNumber };\n    }\n\n    return {\n      sessionInfo: verificationId,\n      code: verificationCode\n    };\n  }\n\n  /** {@inheritdoc AuthCredential.toJSON} */\n  toJSON(): object {\n    const obj: Record<string, string> = {\n      providerId: this.providerId\n    };\n    if (this.params.phoneNumber) {\n      obj.phoneNumber = this.params.phoneNumber;\n    }\n    if (this.params.temporaryProof) {\n      obj.temporaryProof = this.params.temporaryProof;\n    }\n    if (this.params.verificationCode) {\n      obj.verificationCode = this.params.verificationCode;\n    }\n    if (this.params.verificationId) {\n      obj.verificationId = this.params.verificationId;\n    }\n\n    return obj;\n  }\n\n  /** Generates a phone credential based on a plain object or a JSON string. */\n  static fromJSON(json: object | string): PhoneAuthCredential | null {\n    if (typeof json === 'string') {\n      json = JSON.parse(json);\n    }\n\n    const { verificationId, verificationCode, phoneNumber, temporaryProof } =\n      json as { [key: string]: string };\n    if (\n      !verificationCode &&\n      !verificationId &&\n      !phoneNumber &&\n      !temporaryProof\n    ) {\n      return null;\n    }\n\n    return new PhoneAuthCredential({\n      verificationId,\n      verificationCode,\n      phoneNumber,\n      temporaryProof\n    });\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { extractQuerystring, querystringDecode } from '@firebase/util';\nimport { ActionCodeOperation } from '../model/public_types';\nimport { AuthErrorCode } from './errors';\nimport { _assert } from './util/assert';\n\n/**\n * Enums for fields in URL query string.\n *\n * @enum {string}\n */\nconst enum QueryField {\n  API_KEY = 'apiKey',\n  CODE = 'oobCode',\n  CONTINUE_URL = 'continueUrl',\n  LANGUAGE_CODE = 'languageCode',\n  MODE = 'mode',\n  TENANT_ID = 'tenantId'\n}\n\n/**\n * Maps the mode string in action code URL to Action Code Info operation.\n *\n * @param mode\n */\nfunction parseMode(mode: string | null): ActionCodeOperation | null {\n  switch (mode) {\n    case 'recoverEmail':\n      return ActionCodeOperation.RECOVER_EMAIL;\n    case 'resetPassword':\n      return ActionCodeOperation.PASSWORD_RESET;\n    case 'signIn':\n      return ActionCodeOperation.EMAIL_SIGNIN;\n    case 'verifyEmail':\n      return ActionCodeOperation.VERIFY_EMAIL;\n    case 'verifyAndChangeEmail':\n      return ActionCodeOperation.VERIFY_AND_CHANGE_EMAIL;\n    case 'revertSecondFactorAddition':\n      return ActionCodeOperation.REVERT_SECOND_FACTOR_ADDITION;\n    default:\n      return null;\n  }\n}\n\n/**\n * Helper to parse FDL links\n *\n * @param url\n */\nfunction parseDeepLink(url: string): string {\n  const link = querystringDecode(extractQuerystring(url))['link'];\n\n  // Double link case (automatic redirect).\n  const doubleDeepLink = link\n    ? querystringDecode(extractQuerystring(link))['deep_link_id']\n    : null;\n  // iOS custom scheme links.\n  const iOSDeepLink = querystringDecode(extractQuerystring(url))[\n    'deep_link_id'\n  ];\n  const iOSDoubleDeepLink = iOSDeepLink\n    ? querystringDecode(extractQuerystring(iOSDeepLink))['link']\n    : null;\n  return iOSDoubleDeepLink || iOSDeepLink || doubleDeepLink || link || url;\n}\n\n/**\n * A utility class to parse email action URLs such as password reset, email verification,\n * email link sign in, etc.\n *\n * @public\n */\nexport class ActionCodeURL {\n  /**\n   * The API key of the email action link.\n   */\n  readonly apiKey: string;\n  /**\n   * The action code of the email action link.\n   */\n  readonly code: string;\n  /**\n   * The continue URL of the email action link. Null if not provided.\n   */\n  readonly continueUrl: string | null;\n  /**\n   * The language code of the email action link. Null if not provided.\n   */\n  readonly languageCode: string | null;\n  /**\n   * The action performed by the email action link. It returns from one of the types from\n   * {@link ActionCodeInfo}\n   */\n  readonly operation: string;\n  /**\n   * The tenant ID of the email action link. Null if the email action is from the parent project.\n   */\n  readonly tenantId: string | null;\n\n  /**\n   * @param actionLink - The link from which to extract the URL.\n   * @returns The {@link ActionCodeURL} object, or null if the link is invalid.\n   *\n   * @internal\n   */\n  constructor(actionLink: string) {\n    const searchParams = querystringDecode(extractQuerystring(actionLink));\n    const apiKey = searchParams[QueryField.API_KEY] ?? null;\n    const code = searchParams[QueryField.CODE] ?? null;\n    const operation = parseMode(searchParams[QueryField.MODE] ?? null);\n    // Validate API key, code and mode.\n    _assert(apiKey && code && operation, AuthErrorCode.ARGUMENT_ERROR);\n    this.apiKey = apiKey;\n    this.operation = operation;\n    this.code = code;\n    this.continueUrl = searchParams[QueryField.CONTINUE_URL] ?? null;\n    this.languageCode = searchParams[QueryField.LANGUAGE_CODE] ?? null;\n    this.tenantId = searchParams[QueryField.TENANT_ID] ?? null;\n  }\n\n  /**\n   * Parses the email action link string and returns an {@link ActionCodeURL} if the link is valid,\n   * otherwise returns null.\n   *\n   * @param link  - The email action link string.\n   * @returns The {@link ActionCodeURL} object, or null if the link is invalid.\n   *\n   * @public\n   */\n  static parseLink(link: string): ActionCodeURL | null {\n    const actionLink = parseDeepLink(link);\n    try {\n      return new ActionCodeURL(actionLink);\n    } catch {\n      return null;\n    }\n  }\n}\n\n/**\n * Parses the email action link string and returns an {@link ActionCodeURL} if\n * the link is valid, otherwise returns null.\n *\n * @public\n */\nexport function parseActionCodeURL(link: string): ActionCodeURL | null {\n  return ActionCodeURL.parseLink(link);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ProviderId, SignInMethod } from '../../model/enums';\nimport { AuthProvider } from '../../model/public_types';\n\nimport { ActionCodeURL } from '../action_code_url';\nimport { EmailAuthCredential } from '../credentials/email';\nimport { AuthErrorCode } from '../errors';\nimport { _assert } from '../util/assert';\n\n/**\n * Provider for generating {@link EmailAuthCredential}.\n *\n * @public\n */\nexport class EmailAuthProvider implements AuthProvider {\n  /**\n   * Always set to {@link ProviderId}.PASSWORD, even for email link.\n   */\n  static readonly PROVIDER_ID: 'password' = ProviderId.PASSWORD;\n  /**\n   * Always set to {@link SignInMethod}.EMAIL_PASSWORD.\n   */\n  static readonly EMAIL_PASSWORD_SIGN_IN_METHOD: 'password' =\n    SignInMethod.EMAIL_PASSWORD;\n  /**\n   * Always set to {@link SignInMethod}.EMAIL_LINK.\n   */\n  static readonly EMAIL_LINK_SIGN_IN_METHOD: 'emailLink' =\n    SignInMethod.EMAIL_LINK;\n  /**\n   * Always set to {@link ProviderId}.PASSWORD, even for email link.\n   */\n  readonly providerId = EmailAuthProvider.PROVIDER_ID;\n\n  /**\n   * Initialize an {@link AuthCredential} using an email and password.\n   *\n   * @example\n   * ```javascript\n   * const authCredential = EmailAuthProvider.credential(email, password);\n   * const userCredential = await signInWithCredential(auth, authCredential);\n   * ```\n   *\n   * @example\n   * ```javascript\n   * const userCredential = await signInWithEmailAndPassword(auth, email, password);\n   * ```\n   *\n   * @param email - Email address.\n   * @param password - User account password.\n   * @returns The auth provider credential.\n   */\n  static credential(email: string, password: string): EmailAuthCredential {\n    return EmailAuthCredential._fromEmailAndPassword(email, password);\n  }\n\n  /**\n   * Initialize an {@link AuthCredential} using an email and an email link after a sign in with\n   * email link operation.\n   *\n   * @example\n   * ```javascript\n   * const authCredential = EmailAuthProvider.credentialWithLink(auth, email, emailLink);\n   * const userCredential = await signInWithCredential(auth, authCredential);\n   * ```\n   *\n   * @example\n   * ```javascript\n   * await sendSignInLinkToEmail(auth, email);\n   * // Obtain emailLink from user.\n   * const userCredential = await signInWithEmailLink(auth, email, emailLink);\n   * ```\n   *\n   * @param auth - The {@link Auth} instance used to verify the link.\n   * @param email - Email address.\n   * @param emailLink - Sign-in email link.\n   * @returns - The auth provider credential.\n   */\n  static credentialWithLink(\n    email: string,\n    emailLink: string\n  ): EmailAuthCredential {\n    const actionCodeUrl = ActionCodeURL.parseLink(emailLink);\n    _assert(actionCodeUrl, AuthErrorCode.ARGUMENT_ERROR);\n\n    return EmailAuthCredential._fromEmailAndCode(\n      email,\n      actionCodeUrl.code,\n      actionCodeUrl.tenantId\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AuthProvider } from '../../model/public_types';\n\n/**\n * Map of OAuth Custom Parameters.\n *\n * @public\n */\nexport type CustomParameters = Record<string, string>;\n\n/**\n * The base class for all Federated providers (OAuth (including OIDC), SAML).\n *\n * This class is not meant to be instantiated directly.\n *\n * @public\n */\nexport abstract class FederatedAuthProvider implements AuthProvider {\n  /** @internal */\n  defaultLanguageCode: string | null = null;\n  /** @internal */\n  private customParameters: CustomParameters = {};\n\n  /**\n   * Constructor for generic OAuth providers.\n   *\n   * @param providerId - Provider for which credentials should be generated.\n   */\n  constructor(readonly providerId: string) {}\n\n  /**\n   * Set the language gode.\n   *\n   * @param languageCode - language code\n   */\n  setDefaultLanguage(languageCode: string | null): void {\n    this.defaultLanguageCode = languageCode;\n  }\n\n  /**\n   * Sets the OAuth custom parameters to pass in an OAuth request for popup and redirect sign-in\n   * operations.\n   *\n   * @remarks\n   * For a detailed list, check the reserved required OAuth 2.0 parameters such as `client_id`,\n   * `redirect_uri`, `scope`, `response_type`, and `state` are not allowed and will be ignored.\n   *\n   * @param customOAuthParameters - The custom OAuth parameters to pass in the OAuth request.\n   */\n  setCustomParameters(customOAuthParameters: CustomParameters): AuthProvider {\n    this.customParameters = customOAuthParameters;\n    return this;\n  }\n\n  /**\n   * Retrieve the current list of {@link CustomParameters}.\n   */\n  getCustomParameters(): CustomParameters {\n    return this.customParameters;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AuthProvider, UserCredential } from '../../model/public_types';\n\nimport { _assert } from '../util/assert';\nimport { AuthErrorCode } from '../errors';\n\nimport { OAuthCredential, OAuthCredentialParams } from '../credentials/oauth';\nimport { UserCredentialInternal } from '../../model/user';\nimport { FirebaseError } from '@firebase/util';\nimport { TaggedWithTokenResponse } from '../../model/id_token';\nimport { SignInWithIdpResponse } from '../../../internal';\nimport { FederatedAuthProvider } from './federated';\n\n/**\n * Defines the options for initializing an {@link OAuthCredential}.\n *\n * @remarks\n * For ID tokens with nonce claim, the raw nonce has to also be provided.\n *\n * @public\n */\nexport interface OAuthCredentialOptions {\n  /**\n   * The OAuth ID token used to initialize the {@link OAuthCredential}.\n   */\n  idToken?: string;\n  /**\n   * The OAuth access token used to initialize the {@link OAuthCredential}.\n   */\n  accessToken?: string;\n  /**\n   * The raw nonce associated with the ID token.\n   *\n   * @remarks\n   * It is required when an ID token with a nonce field is provided. The SHA-256 hash of the\n   * raw nonce must match the nonce field in the ID token.\n   */\n  rawNonce?: string;\n}\n\n/**\n * Common code to all OAuth providers. This is separate from the\n * {@link OAuthProvider} so that child providers (like\n * {@link GoogleAuthProvider}) don't inherit the `credential` instance method.\n * Instead, they rely on a static `credential` method.\n */\nexport abstract class BaseOAuthProvider\n  extends FederatedAuthProvider\n  implements AuthProvider\n{\n  /** @internal */\n  private scopes: string[] = [];\n\n  /**\n   * Add an OAuth scope to the credential.\n   *\n   * @param scope - Provider OAuth scope to add.\n   */\n  addScope(scope: string): AuthProvider {\n    // If not already added, add scope to list.\n    if (!this.scopes.includes(scope)) {\n      this.scopes.push(scope);\n    }\n    return this;\n  }\n\n  /**\n   * Retrieve the current list of OAuth scopes.\n   */\n  getScopes(): string[] {\n    return [...this.scopes];\n  }\n}\n\n/**\n * Provider for generating generic {@link OAuthCredential}.\n *\n * @example\n * ```javascript\n * // Sign in using a redirect.\n * const provider = new OAuthProvider('google.com');\n * // Start a sign in process for an unauthenticated user.\n * provider.addScope('profile');\n * provider.addScope('email');\n * await signInWithRedirect(auth, provider);\n * // This will trigger a full page redirect away from your app\n *\n * // After returning from the redirect when your app initializes you can obtain the result\n * const result = await getRedirectResult(auth);\n * if (result) {\n *   // This is the signed-in user\n *   const user = result.user;\n *   // This gives you a OAuth Access Token for the provider.\n *   const credential = provider.credentialFromResult(auth, result);\n *   const token = credential.accessToken;\n * }\n * ```\n *\n * @example\n * ```javascript\n * // Sign in using a popup.\n * const provider = new OAuthProvider('google.com');\n * provider.addScope('profile');\n * provider.addScope('email');\n * const result = await signInWithPopup(auth, provider);\n *\n * // The signed-in user info.\n * const user = result.user;\n * // This gives you a OAuth Access Token for the provider.\n * const credential = provider.credentialFromResult(auth, result);\n * const token = credential.accessToken;\n * ```\n * @public\n */\nexport class OAuthProvider extends BaseOAuthProvider {\n  /**\n   * Creates an {@link OAuthCredential} from a JSON string or a plain object.\n   * @param json - A plain object or a JSON string\n   */\n  static credentialFromJSON(json: object | string): OAuthCredential {\n    const obj = typeof json === 'string' ? JSON.parse(json) : json;\n    _assert(\n      'providerId' in obj && 'signInMethod' in obj,\n      AuthErrorCode.ARGUMENT_ERROR\n    );\n    return OAuthCredential._fromParams(obj);\n  }\n\n  /**\n   * Creates a {@link OAuthCredential} from a generic OAuth provider's access token or ID token.\n   *\n   * @remarks\n   * The raw nonce is required when an ID token with a nonce field is provided. The SHA-256 hash of\n   * the raw nonce must match the nonce field in the ID token.\n   *\n   * @example\n   * ```javascript\n   * // `googleUser` from the onsuccess Google Sign In callback.\n   * // Initialize a generate OAuth provider with a `google.com` providerId.\n   * const provider = new OAuthProvider('google.com');\n   * const credential = provider.credential({\n   *   idToken: googleUser.getAuthResponse().id_token,\n   * });\n   * const result = await signInWithCredential(credential);\n   * ```\n   *\n   * @param params - Either the options object containing the ID token, access token and raw nonce\n   * or the ID token string.\n   */\n  credential(params: OAuthCredentialOptions): OAuthCredential {\n    return this._credential({ ...params, nonce: params.rawNonce });\n  }\n\n  /** An internal credential method that accepts more permissive options */\n  private _credential(\n    params: Omit<OAuthCredentialParams, 'signInMethod' | 'providerId'>\n  ): OAuthCredential {\n    _assert(params.idToken || params.accessToken, AuthErrorCode.ARGUMENT_ERROR);\n    // For OAuthCredential, sign in method is same as providerId.\n    return OAuthCredential._fromParams({\n      ...params,\n      providerId: this.providerId,\n      signInMethod: this.providerId\n    });\n  }\n\n  /**\n   * Used to extract the underlying {@link OAuthCredential} from a {@link UserCredential}.\n   *\n   * @param userCredential - The user credential.\n   */\n  static credentialFromResult(\n    userCredential: UserCredential\n  ): OAuthCredential | null {\n    return OAuthProvider.oauthCredentialFromTaggedObject(\n      userCredential as UserCredentialInternal\n    );\n  }\n  /**\n   * Used to extract the underlying {@link OAuthCredential} from a {@link AuthError} which was\n   * thrown during a sign-in, link, or reauthenticate operation.\n   *\n   * @param userCredential - The user credential.\n   */\n  static credentialFromError(error: FirebaseError): OAuthCredential | null {\n    return OAuthProvider.oauthCredentialFromTaggedObject(\n      (error.customData || {}) as TaggedWithTokenResponse\n    );\n  }\n\n  private static oauthCredentialFromTaggedObject({\n    _tokenResponse: tokenResponse\n  }: TaggedWithTokenResponse): OAuthCredential | null {\n    if (!tokenResponse) {\n      return null;\n    }\n\n    const {\n      oauthIdToken,\n      oauthAccessToken,\n      oauthTokenSecret,\n      pendingToken,\n      nonce,\n      providerId\n    } = tokenResponse as SignInWithIdpResponse;\n    if (\n      !oauthAccessToken &&\n      !oauthTokenSecret &&\n      !oauthIdToken &&\n      !pendingToken\n    ) {\n      return null;\n    }\n\n    if (!providerId) {\n      return null;\n    }\n\n    try {\n      return new OAuthProvider(providerId)._credential({\n        idToken: oauthIdToken,\n        accessToken: oauthAccessToken,\n        nonce,\n        pendingToken\n      });\n    } catch (e) {\n      return null;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { UserCredential } from '../../model/public_types';\nimport { FirebaseError } from '@firebase/util';\n\nimport { TaggedWithTokenResponse } from '../../model/id_token';\nimport { UserCredentialInternal } from '../../model/user';\nimport { OAuthCredential } from '../credentials/oauth';\nimport { BaseOAuthProvider } from './oauth';\nimport { ProviderId, SignInMethod } from '../../model/enums';\n\n/**\n * Provider for generating an {@link OAuthCredential} for {@link ProviderId}.FACEBOOK.\n *\n * @example\n * ```javascript\n * // Sign in using a redirect.\n * const provider = new FacebookAuthProvider();\n * // Start a sign in process for an unauthenticated user.\n * provider.addScope('user_birthday');\n * await signInWithRedirect(auth, provider);\n * // This will trigger a full page redirect away from your app\n *\n * // After returning from the redirect when your app initializes you can obtain the result\n * const result = await getRedirectResult(auth);\n * if (result) {\n *   // This is the signed-in user\n *   const user = result.user;\n *   // This gives you a Facebook Access Token.\n *   const credential = FacebookAuthProvider.credentialFromResult(result);\n *   const token = credential.accessToken;\n * }\n * ```\n *\n * @example\n * ```javascript\n * // Sign in using a popup.\n * const provider = new FacebookAuthProvider();\n * provider.addScope('user_birthday');\n * const result = await signInWithPopup(auth, provider);\n *\n * // The signed-in user info.\n * const user = result.user;\n * // This gives you a Facebook Access Token.\n * const credential = FacebookAuthProvider.credentialFromResult(result);\n * const token = credential.accessToken;\n * ```\n *\n * @public\n */\nexport class FacebookAuthProvider extends BaseOAuthProvider {\n  /** Always set to {@link SignInMethod}.FACEBOOK. */\n  static readonly FACEBOOK_SIGN_IN_METHOD: 'facebook.com' =\n    SignInMethod.FACEBOOK;\n  /** Always set to {@link ProviderId}.FACEBOOK. */\n  static readonly PROVIDER_ID: 'facebook.com' = ProviderId.FACEBOOK;\n\n  constructor() {\n    super(ProviderId.FACEBOOK);\n  }\n\n  /**\n   * Creates a credential for Facebook.\n   *\n   * @example\n   * ```javascript\n   * // `event` from the Facebook auth.authResponseChange callback.\n   * const credential = FacebookAuthProvider.credential(event.authResponse.accessToken);\n   * const result = await signInWithCredential(credential);\n   * ```\n   *\n   * @param accessToken - Facebook access token.\n   */\n  static credential(accessToken: string): OAuthCredential {\n    return OAuthCredential._fromParams({\n      providerId: FacebookAuthProvider.PROVIDER_ID,\n      signInMethod: FacebookAuthProvider.FACEBOOK_SIGN_IN_METHOD,\n      accessToken\n    });\n  }\n\n  /**\n   * Used to extract the underlying {@link OAuthCredential} from a {@link UserCredential}.\n   *\n   * @param userCredential - The user credential.\n   */\n  static credentialFromResult(\n    userCredential: UserCredential\n  ): OAuthCredential | null {\n    return FacebookAuthProvider.credentialFromTaggedObject(\n      userCredential as UserCredentialInternal\n    );\n  }\n\n  /**\n   * Used to extract the underlying {@link OAuthCredential} from a {@link AuthError} which was\n   * thrown during a sign-in, link, or reauthenticate operation.\n   *\n   * @param userCredential - The user credential.\n   */\n  static credentialFromError(error: FirebaseError): OAuthCredential | null {\n    return FacebookAuthProvider.credentialFromTaggedObject(\n      (error.customData || {}) as TaggedWithTokenResponse\n    );\n  }\n\n  private static credentialFromTaggedObject({\n    _tokenResponse: tokenResponse\n  }: TaggedWithTokenResponse): OAuthCredential | null {\n    if (!tokenResponse || !('oauthAccessToken' in tokenResponse)) {\n      return null;\n    }\n\n    if (!tokenResponse.oauthAccessToken) {\n      return null;\n    }\n\n    try {\n      return FacebookAuthProvider.credential(tokenResponse.oauthAccessToken);\n    } catch {\n      return null;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { UserCredential } from '../../model/public_types';\nimport { FirebaseError } from '@firebase/util';\n\nimport { SignInWithIdpResponse } from '../../api/authentication/idp';\nimport { TaggedWithTokenResponse } from '../../model/id_token';\nimport { UserCredentialInternal } from '../../model/user';\nimport { OAuthCredential } from '../credentials/oauth';\nimport { BaseOAuthProvider } from './oauth';\nimport { ProviderId, SignInMethod } from '../../model/enums';\n\n/**\n * Provider for generating an an {@link OAuthCredential} for {@link ProviderId}.GOOGLE.\n *\n * @example\n * ```javascript\n * // Sign in using a redirect.\n * const provider = new GoogleAuthProvider();\n * // Start a sign in process for an unauthenticated user.\n * provider.addScope('profile');\n * provider.addScope('email');\n * await signInWithRedirect(auth, provider);\n * // This will trigger a full page redirect away from your app\n *\n * // After returning from the redirect when your app initializes you can obtain the result\n * const result = await getRedirectResult(auth);\n * if (result) {\n *   // This is the signed-in user\n *   const user = result.user;\n *   // This gives you a Google Access Token.\n *   const credential = GoogleAuthProvider.credentialFromResult(result);\n *   const token = credential.accessToken;\n * }\n * ```\n *\n * @example\n * ```javascript\n * // Sign in using a popup.\n * const provider = new GoogleAuthProvider();\n * provider.addScope('profile');\n * provider.addScope('email');\n * const result = await signInWithPopup(auth, provider);\n *\n * // The signed-in user info.\n * const user = result.user;\n * // This gives you a Google Access Token.\n * const credential = GoogleAuthProvider.credentialFromResult(result);\n * const token = credential.accessToken;\n * ```\n *\n * @public\n */\nexport class GoogleAuthProvider extends BaseOAuthProvider {\n  /** Always set to {@link SignInMethod}.GOOGLE. */\n  static readonly GOOGLE_SIGN_IN_METHOD: 'google.com' = SignInMethod.GOOGLE;\n  /** Always set to {@link ProviderId}.GOOGLE. */\n  static readonly PROVIDER_ID: 'google.com' = ProviderId.GOOGLE;\n\n  constructor() {\n    super(ProviderId.GOOGLE);\n    this.addScope('profile');\n  }\n\n  /**\n   * Creates a credential for Google. At least one of ID token and access token is required.\n   *\n   * @example\n   * ```javascript\n   * // \\`googleUser\\` from the onsuccess Google Sign In callback.\n   * const credential = GoogleAuthProvider.credential(googleUser.getAuthResponse().id_token);\n   * const result = await signInWithCredential(credential);\n   * ```\n   *\n   * @param idToken - Google ID token.\n   * @param accessToken - Google access token.\n   */\n  static credential(\n    idToken?: string | null,\n    accessToken?: string | null\n  ): OAuthCredential {\n    return OAuthCredential._fromParams({\n      providerId: GoogleAuthProvider.PROVIDER_ID,\n      signInMethod: GoogleAuthProvider.GOOGLE_SIGN_IN_METHOD,\n      idToken,\n      accessToken\n    });\n  }\n\n  /**\n   * Used to extract the underlying {@link OAuthCredential} from a {@link UserCredential}.\n   *\n   * @param userCredential - The user credential.\n   */\n  static credentialFromResult(\n    userCredential: UserCredential\n  ): OAuthCredential | null {\n    return GoogleAuthProvider.credentialFromTaggedObject(\n      userCredential as UserCredentialInternal\n    );\n  }\n  /**\n   * Used to extract the underlying {@link OAuthCredential} from a {@link AuthError} which was\n   * thrown during a sign-in, link, or reauthenticate operation.\n   *\n   * @param userCredential - The user credential.\n   */\n  static credentialFromError(error: FirebaseError): OAuthCredential | null {\n    return GoogleAuthProvider.credentialFromTaggedObject(\n      (error.customData || {}) as TaggedWithTokenResponse\n    );\n  }\n\n  private static credentialFromTaggedObject({\n    _tokenResponse: tokenResponse\n  }: TaggedWithTokenResponse): OAuthCredential | null {\n    if (!tokenResponse) {\n      return null;\n    }\n\n    const { oauthIdToken, oauthAccessToken } =\n      tokenResponse as SignInWithIdpResponse;\n    if (!oauthIdToken && !oauthAccessToken) {\n      // This could be an oauth 1 credential or a phone credential\n      return null;\n    }\n\n    try {\n      return GoogleAuthProvider.credential(oauthIdToken, oauthAccessToken);\n    } catch {\n      return null;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { UserCredential } from '../../model/public_types';\nimport { FirebaseError } from '@firebase/util';\n\nimport { TaggedWithTokenResponse } from '../../model/id_token';\nimport { UserCredentialInternal } from '../../model/user';\nimport { OAuthCredential } from '../credentials/oauth';\nimport { BaseOAuthProvider } from './oauth';\nimport { ProviderId, SignInMethod } from '../../model/enums';\n\n/**\n * Provider for generating an {@link OAuthCredential} for {@link ProviderId}.GITHUB.\n *\n * @remarks\n * GitHub requires an OAuth 2.0 redirect, so you can either handle the redirect directly, or use\n * the {@link signInWithPopup} handler:\n *\n * @example\n * ```javascript\n * // Sign in using a redirect.\n * const provider = new GithubAuthProvider();\n * // Start a sign in process for an unauthenticated user.\n * provider.addScope('repo');\n * await signInWithRedirect(auth, provider);\n * // This will trigger a full page redirect away from your app\n *\n * // After returning from the redirect when your app initializes you can obtain the result\n * const result = await getRedirectResult(auth);\n * if (result) {\n *   // This is the signed-in user\n *   const user = result.user;\n *   // This gives you a Github Access Token.\n *   const credential = GithubAuthProvider.credentialFromResult(result);\n *   const token = credential.accessToken;\n * }\n * ```\n *\n * @example\n * ```javascript\n * // Sign in using a popup.\n * const provider = new GithubAuthProvider();\n * provider.addScope('repo');\n * const result = await signInWithPopup(auth, provider);\n *\n * // The signed-in user info.\n * const user = result.user;\n * // This gives you a Github Access Token.\n * const credential = GithubAuthProvider.credentialFromResult(result);\n * const token = credential.accessToken;\n * ```\n * @public\n */\nexport class GithubAuthProvider extends BaseOAuthProvider {\n  /** Always set to {@link SignInMethod}.GITHUB. */\n  static readonly GITHUB_SIGN_IN_METHOD: 'github.com' = SignInMethod.GITHUB;\n  /** Always set to {@link ProviderId}.GITHUB. */\n  static readonly PROVIDER_ID: 'github.com' = ProviderId.GITHUB;\n\n  constructor() {\n    super(ProviderId.GITHUB);\n  }\n\n  /**\n   * Creates a credential for Github.\n   *\n   * @param accessToken - Github access token.\n   */\n  static credential(accessToken: string): OAuthCredential {\n    return OAuthCredential._fromParams({\n      providerId: GithubAuthProvider.PROVIDER_ID,\n      signInMethod: GithubAuthProvider.GITHUB_SIGN_IN_METHOD,\n      accessToken\n    });\n  }\n\n  /**\n   * Used to extract the underlying {@link OAuthCredential} from a {@link UserCredential}.\n   *\n   * @param userCredential - The user credential.\n   */\n  static credentialFromResult(\n    userCredential: UserCredential\n  ): OAuthCredential | null {\n    return GithubAuthProvider.credentialFromTaggedObject(\n      userCredential as UserCredentialInternal\n    );\n  }\n\n  /**\n   * Used to extract the underlying {@link OAuthCredential} from a {@link AuthError} which was\n   * thrown during a sign-in, link, or reauthenticate operation.\n   *\n   * @param userCredential - The user credential.\n   */\n  static credentialFromError(error: FirebaseError): OAuthCredential | null {\n    return GithubAuthProvider.credentialFromTaggedObject(\n      (error.customData || {}) as TaggedWithTokenResponse\n    );\n  }\n\n  private static credentialFromTaggedObject({\n    _tokenResponse: tokenResponse\n  }: TaggedWithTokenResponse): OAuthCredential | null {\n    if (!tokenResponse || !('oauthAccessToken' in tokenResponse)) {\n      return null;\n    }\n\n    if (!tokenResponse.oauthAccessToken) {\n      return null;\n    }\n\n    try {\n      return GithubAuthProvider.credential(tokenResponse.oauthAccessToken);\n    } catch {\n      return null;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Represents the SAML credentials returned by an {@link SAMLAuthProvider}.\n *\n * @public\n */\n\nimport {\n  signInWithIdp,\n  SignInWithIdpRequest\n} from '../../api/authentication/idp';\nimport { AuthInternal } from '../../model/auth';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { AuthCredential } from './auth_credential';\n\nconst IDP_REQUEST_URI = 'http://localhost';\n\n/**\n * @public\n */\nexport class SAMLAuthCredential extends AuthCredential {\n  /** @internal */\n  private constructor(\n    providerId: string,\n    private readonly pendingToken: string\n  ) {\n    super(providerId, providerId);\n  }\n\n  /** @internal */\n  _getIdTokenResponse(auth: AuthInternal): Promise<IdTokenResponse> {\n    const request = this.buildRequest();\n    return signInWithIdp(auth, request);\n  }\n\n  /** @internal */\n  _linkToIdToken(\n    auth: AuthInternal,\n    idToken: string\n  ): Promise<IdTokenResponse> {\n    const request = this.buildRequest();\n    request.idToken = idToken;\n    return signInWithIdp(auth, request);\n  }\n\n  /** @internal */\n  _getReauthenticationResolver(auth: AuthInternal): Promise<IdTokenResponse> {\n    const request = this.buildRequest();\n    request.autoCreate = false;\n    return signInWithIdp(auth, request);\n  }\n\n  /** {@inheritdoc AuthCredential.toJSON}  */\n  toJSON(): object {\n    return {\n      signInMethod: this.signInMethod,\n      providerId: this.providerId,\n      pendingToken: this.pendingToken\n    };\n  }\n\n  /**\n   * Static method to deserialize a JSON representation of an object into an\n   * {@link  AuthCredential}.\n   *\n   * @param json - Input can be either Object or the stringified representation of the object.\n   * When string is provided, JSON.parse would be called first.\n   *\n   * @returns If the JSON input does not represent an {@link  AuthCredential}, null is returned.\n   */\n  static fromJSON(json: string | object): SAMLAuthCredential | null {\n    const obj = typeof json === 'string' ? JSON.parse(json) : json;\n    const { providerId, signInMethod, pendingToken }: Record<string, string> =\n      obj;\n    if (\n      !providerId ||\n      !signInMethod ||\n      !pendingToken ||\n      providerId !== signInMethod\n    ) {\n      return null;\n    }\n\n    return new SAMLAuthCredential(providerId, pendingToken);\n  }\n\n  /**\n   * Helper static method to avoid exposing the constructor to end users.\n   *\n   * @internal\n   */\n  static _create(providerId: string, pendingToken: string): SAMLAuthCredential {\n    return new SAMLAuthCredential(providerId, pendingToken);\n  }\n\n  private buildRequest(): SignInWithIdpRequest {\n    return {\n      requestUri: IDP_REQUEST_URI,\n      returnSecureToken: true,\n      pendingToken: this.pendingToken\n    };\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError } from '@firebase/util';\nimport { SignInWithIdpResponse } from '../../api/authentication/idp';\nimport { TaggedWithTokenResponse } from '../../model/id_token';\nimport { UserCredential } from '../../model/public_types';\nimport { UserCredentialInternal } from '../../model/user';\nimport { AuthCredential } from '../credentials';\nimport { SAMLAuthCredential } from '../credentials/saml';\nimport { AuthErrorCode } from '../errors';\nimport { _assert } from '../util/assert';\nimport { FederatedAuthProvider } from './federated';\n\nconst SAML_PROVIDER_PREFIX = 'saml.';\n\n/**\n * An {@link AuthProvider} for SAML.\n *\n * @public\n */\nexport class SAMLAuthProvider extends FederatedAuthProvider {\n  /**\n   * Constructor. The providerId must start with \"saml.\"\n   * @param providerId - SAML provider ID.\n   */\n  constructor(providerId: string) {\n    _assert(\n      providerId.startsWith(SAML_PROVIDER_PREFIX),\n      AuthErrorCode.ARGUMENT_ERROR\n    );\n    super(providerId);\n  }\n\n  /**\n   * Generates an {@link AuthCredential} from a {@link UserCredential} after a\n   * successful SAML flow completes.\n   *\n   * @remarks\n   *\n   * For example, to get an {@link AuthCredential}, you could write the\n   * following code:\n   *\n   * ```js\n   * const userCredential = await signInWithPopup(auth, samlProvider);\n   * const credential = SAMLAuthProvider.credentialFromResult(userCredential);\n   * ```\n   *\n   * @param userCredential - The user credential.\n   */\n  static credentialFromResult(\n    userCredential: UserCredential\n  ): AuthCredential | null {\n    return SAMLAuthProvider.samlCredentialFromTaggedObject(\n      userCredential as UserCredentialInternal\n    );\n  }\n\n  /**\n   * Used to extract the underlying {@link OAuthCredential} from a {@link AuthError} which was\n   * thrown during a sign-in, link, or reauthenticate operation.\n   *\n   * @param userCredential - The user credential.\n   */\n  static credentialFromError(error: FirebaseError): AuthCredential | null {\n    return SAMLAuthProvider.samlCredentialFromTaggedObject(\n      (error.customData || {}) as TaggedWithTokenResponse\n    );\n  }\n\n  /**\n   * Creates an {@link AuthCredential} from a JSON string or a plain object.\n   * @param json - A plain object or a JSON string\n   */\n  static credentialFromJSON(json: string | object): AuthCredential {\n    const credential = SAMLAuthCredential.fromJSON(json);\n    _assert(credential, AuthErrorCode.ARGUMENT_ERROR);\n    return credential;\n  }\n\n  private static samlCredentialFromTaggedObject({\n    _tokenResponse: tokenResponse\n  }: TaggedWithTokenResponse): SAMLAuthCredential | null {\n    if (!tokenResponse) {\n      return null;\n    }\n\n    const { pendingToken, providerId } = tokenResponse as SignInWithIdpResponse;\n\n    if (!pendingToken || !providerId) {\n      return null;\n    }\n\n    try {\n      return SAMLAuthCredential._create(providerId, pendingToken);\n    } catch (e) {\n      return null;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @license\n * Copyright 2020 Twitter LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { UserCredential } from '../../model/public_types';\nimport { FirebaseError } from '@firebase/util';\n\nimport { SignInWithIdpResponse } from '../../api/authentication/idp';\nimport { TaggedWithTokenResponse } from '../../model/id_token';\nimport { UserCredentialInternal } from '../../model/user';\nimport { OAuthCredential } from '../credentials/oauth';\nimport { BaseOAuthProvider } from './oauth';\nimport { ProviderId, SignInMethod } from '../../model/enums';\n\n/**\n * Provider for generating an {@link OAuthCredential} for {@link ProviderId}.TWITTER.\n *\n * @example\n * ```javascript\n * // Sign in using a redirect.\n * const provider = new TwitterAuthProvider();\n * // Start a sign in process for an unauthenticated user.\n * await signInWithRedirect(auth, provider);\n * // This will trigger a full page redirect away from your app\n *\n * // After returning from the redirect when your app initializes you can obtain the result\n * const result = await getRedirectResult(auth);\n * if (result) {\n *   // This is the signed-in user\n *   const user = result.user;\n *   // This gives you a Twitter Access Token and Secret.\n *   const credential = TwitterAuthProvider.credentialFromResult(result);\n *   const token = credential.accessToken;\n *   const secret = credential.secret;\n * }\n * ```\n *\n * @example\n * ```javascript\n * // Sign in using a popup.\n * const provider = new TwitterAuthProvider();\n * const result = await signInWithPopup(auth, provider);\n *\n * // The signed-in user info.\n * const user = result.user;\n * // This gives you a Twitter Access Token and Secret.\n * const credential = TwitterAuthProvider.credentialFromResult(result);\n * const token = credential.accessToken;\n * const secret = credential.secret;\n * ```\n *\n * @public\n */\nexport class TwitterAuthProvider extends BaseOAuthProvider {\n  /** Always set to {@link SignInMethod}.TWITTER. */\n  static readonly TWITTER_SIGN_IN_METHOD: 'twitter.com' = SignInMethod.TWITTER;\n  /** Always set to {@link ProviderId}.TWITTER. */\n  static readonly PROVIDER_ID: 'twitter.com' = ProviderId.TWITTER;\n\n  constructor() {\n    super(ProviderId.TWITTER);\n  }\n\n  /**\n   * Creates a credential for Twitter.\n   *\n   * @param token - Twitter access token.\n   * @param secret - Twitter secret.\n   */\n  static credential(token: string, secret: string): OAuthCredential {\n    return OAuthCredential._fromParams({\n      providerId: TwitterAuthProvider.PROVIDER_ID,\n      signInMethod: TwitterAuthProvider.TWITTER_SIGN_IN_METHOD,\n      oauthToken: token,\n      oauthTokenSecret: secret\n    });\n  }\n\n  /**\n   * Used to extract the underlying {@link OAuthCredential} from a {@link UserCredential}.\n   *\n   * @param userCredential - The user credential.\n   */\n  static credentialFromResult(\n    userCredential: UserCredential\n  ): OAuthCredential | null {\n    return TwitterAuthProvider.credentialFromTaggedObject(\n      userCredential as UserCredentialInternal\n    );\n  }\n\n  /**\n   * Used to extract the underlying {@link OAuthCredential} from a {@link AuthError} which was\n   * thrown during a sign-in, link, or reauthenticate operation.\n   *\n   * @param userCredential - The user credential.\n   */\n  static credentialFromError(error: FirebaseError): OAuthCredential | null {\n    return TwitterAuthProvider.credentialFromTaggedObject(\n      (error.customData || {}) as TaggedWithTokenResponse\n    );\n  }\n\n  private static credentialFromTaggedObject({\n    _tokenResponse: tokenResponse\n  }: TaggedWithTokenResponse): OAuthCredential | null {\n    if (!tokenResponse) {\n      return null;\n    }\n    const { oauthAccessToken, oauthTokenSecret } =\n      tokenResponse as SignInWithIdpResponse;\n    if (!oauthAccessToken || !oauthTokenSecret) {\n      return null;\n    }\n\n    try {\n      return TwitterAuthProvider.credential(oauthAccessToken, oauthTokenSecret);\n    } catch {\n      return null;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Endpoint,\n  HttpMethod,\n  _addTidIfNecessary,\n  _performSignInRequest\n} from '../index';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { Auth } from '../../model/public_types';\n\nexport interface SignUpRequest {\n  returnSecureToken?: boolean;\n  email?: string;\n  password?: string;\n  tenantId?: string;\n}\n\nexport interface SignUpResponse extends IdTokenResponse {\n  displayName?: string;\n  email?: string;\n}\n\nexport async function signUp(\n  auth: Auth,\n  request: SignUpRequest\n): Promise<SignUpResponse> {\n  return _performSignInRequest<SignUpRequest, SignUpResponse>(\n    auth,\n    HttpMethod.POST,\n    Endpoint.SIGN_UP,\n    _addTidIfNecessary(auth, request)\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PhoneOrOauthTokenResponse } from '../../api/authentication/mfa';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { UserInternal, UserCredentialInternal } from '../../model/user';\nimport { UserImpl } from './user_impl';\nimport { AuthInternal } from '../../model/auth';\nimport { OperationType, ProviderId } from '../../model/enums';\n\ninterface UserCredentialParams {\n  readonly user: UserInternal;\n  readonly providerId: ProviderId | string | null;\n  readonly _tokenResponse?: PhoneOrOauthTokenResponse;\n  readonly operationType: OperationType;\n}\n\nexport class UserCredentialImpl\n  implements UserCredentialInternal, UserCredentialParams\n{\n  readonly user: UserInternal;\n  readonly providerId: ProviderId | string | null;\n  readonly _tokenResponse: PhoneOrOauthTokenResponse | undefined;\n  readonly operationType: OperationType;\n\n  constructor(params: UserCredentialParams) {\n    this.user = params.user;\n    this.providerId = params.providerId;\n    this._tokenResponse = params._tokenResponse;\n    this.operationType = params.operationType;\n  }\n\n  static async _fromIdTokenResponse(\n    auth: AuthInternal,\n    operationType: OperationType,\n    idTokenResponse: IdTokenResponse,\n    isAnonymous: boolean = false\n  ): Promise<UserCredentialInternal> {\n    const user = await UserImpl._fromIdTokenResponse(\n      auth,\n      idTokenResponse,\n      isAnonymous\n    );\n    const providerId = providerIdForResponse(idTokenResponse);\n    const userCred = new UserCredentialImpl({\n      user,\n      providerId,\n      _tokenResponse: idTokenResponse,\n      operationType\n    });\n    return userCred;\n  }\n\n  static async _forOperation(\n    user: UserInternal,\n    operationType: OperationType,\n    response: PhoneOrOauthTokenResponse\n  ): Promise<UserCredentialImpl> {\n    await user._updateTokensIfNecessary(response, /* reload */ true);\n    const providerId = providerIdForResponse(response);\n    return new UserCredentialImpl({\n      user,\n      providerId,\n      _tokenResponse: response,\n      operationType\n    });\n  }\n}\n\nfunction providerIdForResponse(\n  response: IdTokenResponse\n): ProviderId | string | null {\n  if (response.providerId) {\n    return response.providerId;\n  }\n\n  if ('phoneNumber' in response) {\n    return ProviderId.PHONE;\n  }\n\n  return null;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Auth, UserCredential } from '../../model/public_types';\nimport { signUp } from '../../api/authentication/sign_up';\nimport { UserInternal } from '../../model/user';\nimport { UserCredentialImpl } from '../user/user_credential_impl';\nimport { _castAuth } from '../auth/auth_impl';\nimport { OperationType } from '../../model/enums';\n\n/**\n * Asynchronously signs in as an anonymous user.\n *\n * @remarks\n * If there is already an anonymous user signed in, that user will be returned; otherwise, a\n * new anonymous user identity will be created and returned.\n *\n * @param auth - The {@link Auth} instance.\n *\n * @public\n */\nexport async function signInAnonymously(auth: Auth): Promise<UserCredential> {\n  const authInternal = _castAuth(auth);\n  await authInternal._initializationPromise;\n  if (authInternal.currentUser?.isAnonymous) {\n    // If an anonymous user is already signed in, no need to sign them in again.\n    return new UserCredentialImpl({\n      user: authInternal.currentUser as UserInternal,\n      providerId: null,\n      operationType: OperationType.SIGN_IN\n    });\n  }\n  const response = await signUp(authInternal, {\n    returnSecureToken: true\n  });\n  const userCredential = await UserCredentialImpl._fromIdTokenResponse(\n    authInternal,\n    OperationType.SIGN_IN,\n    response,\n    true\n  );\n  await authInternal._updateCurrentUser(userCredential.user);\n  return userCredential;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { UserCredential, Auth, User } from '../../model/public_types';\n\nimport { _processCredentialSavingMfaContextIfNecessary } from '../../mfa/mfa_error';\nimport { AuthInternal } from '../../model/auth';\nimport { UserInternal } from '../../model/user';\nimport { AuthCredential } from '../credentials';\nimport { _assertLinkedStatus, _link } from '../user/link_unlink';\nimport { _reauthenticate } from '../user/reauthenticate';\nimport { UserCredentialImpl } from '../user/user_credential_impl';\nimport { _castAuth } from '../auth/auth_impl';\nimport { getModularInstance } from '@firebase/util';\nimport { OperationType } from '../../model/enums';\n\nexport async function _signInWithCredential(\n  auth: AuthInternal,\n  credential: AuthCredential,\n  bypassAuthState = false\n): Promise<UserCredential> {\n  const operationType = OperationType.SIGN_IN;\n  const response = await _processCredentialSavingMfaContextIfNecessary(\n    auth,\n    operationType,\n    credential\n  );\n  const userCredential = await UserCredentialImpl._fromIdTokenResponse(\n    auth,\n    operationType,\n    response\n  );\n\n  if (!bypassAuthState) {\n    await auth._updateCurrentUser(userCredential.user);\n  }\n  return userCredential;\n}\n\n/**\n * Asynchronously signs in with the given credentials.\n *\n * @remarks\n * An {@link AuthProvider} can be used to generate the credential.\n *\n * @param auth - The {@link Auth} instance.\n * @param credential - The auth credential.\n *\n * @public\n */\nexport async function signInWithCredential(\n  auth: Auth,\n  credential: AuthCredential\n): Promise<UserCredential> {\n  return _signInWithCredential(_castAuth(auth), credential);\n}\n\n/**\n * Links the user account with the given credentials.\n *\n * @remarks\n * An {@link AuthProvider} can be used to generate the credential.\n *\n * @param user - The user.\n * @param credential - The auth credential.\n *\n * @public\n */\nexport async function linkWithCredential(\n  user: User,\n  credential: AuthCredential\n): Promise<UserCredential> {\n  const userInternal = getModularInstance(user) as UserInternal;\n\n  await _assertLinkedStatus(false, userInternal, credential.providerId);\n\n  return _link(userInternal, credential);\n}\n\n/**\n * Re-authenticates a user using a fresh credential.\n *\n * @remarks\n * Use before operations such as {@link updatePassword} that require tokens from recent sign-in\n * attempts. This method can be used to recover from a `CREDENTIAL_TOO_OLD_LOGIN_AGAIN` error.\n *\n * @param user - The user.\n * @param credential - The auth credential.\n *\n * @public\n */\nexport async function reauthenticateWithCredential(\n  user: User,\n  credential: AuthCredential\n): Promise<UserCredential> {\n  return _reauthenticate(getModularInstance(user) as UserInternal, credential);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Endpoint,\n  HttpMethod,\n  _addTidIfNecessary,\n  _performSignInRequest\n} from '../index';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { Auth } from '../../model/public_types';\n\nexport interface SignInWithCustomTokenRequest {\n  token: string;\n  returnSecureToken: boolean;\n  tenantId?: string;\n}\n\nexport interface SignInWithCustomTokenResponse extends IdTokenResponse {}\n\nexport async function signInWithCustomToken(\n  auth: Auth,\n  request: SignInWithCustomTokenRequest\n): Promise<SignInWithCustomTokenResponse> {\n  return _performSignInRequest<\n    SignInWithCustomTokenRequest,\n    SignInWithCustomTokenResponse\n  >(\n    auth,\n    HttpMethod.POST,\n    Endpoint.SIGN_IN_WITH_CUSTOM_TOKEN,\n    _addTidIfNecessary(auth, request)\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Auth, UserCredential } from '../../model/public_types';\n\nimport { signInWithCustomToken as getIdTokenResponse } from '../../api/authentication/custom_token';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { UserCredentialImpl } from '../user/user_credential_impl';\nimport { _castAuth } from '../auth/auth_impl';\nimport { OperationType } from '../../model/enums';\n\n/**\n * Asynchronously signs in using a custom token.\n *\n * @remarks\n * Custom tokens are used to integrate Firebase Auth with existing auth systems, and must\n * be generated by an auth backend using the\n * {@link https://firebase.google.com/docs/reference/admin/node/admin.auth.Auth#createcustomtoken | createCustomToken}\n * method in the {@link https://firebase.google.com/docs/auth/admin | Admin SDK} .\n *\n * Fails with an error if the token is invalid, expired, or not accepted by the Firebase Auth service.\n *\n * @param auth - The {@link Auth} instance.\n * @param customToken - The custom token to sign in with.\n *\n * @public\n */\nexport async function signInWithCustomToken(\n  auth: Auth,\n  customToken: string\n): Promise<UserCredential> {\n  const authInternal = _castAuth(auth);\n  const response: IdTokenResponse = await getIdTokenResponse(authInternal, {\n    token: customToken,\n    returnSecureToken: true\n  });\n  const cred = await UserCredentialImpl._fromIdTokenResponse(\n    authInternal,\n    OperationType.SIGN_IN,\n    response\n  );\n  await authInternal._updateCurrentUser(cred.user);\n  return cred;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FactorId,\n  MultiFactorInfo,\n  PhoneMultiFactorInfo\n} from '../model/public_types';\nimport {\n  PhoneMfaEnrollment,\n  MfaEnrollment\n} from '../api/account_management/mfa';\nimport { AuthErrorCode } from '../core/errors';\nimport { _fail } from '../core/util/assert';\nimport { AuthInternal } from '../model/auth';\n\nexport abstract class MultiFactorInfoImpl implements MultiFactorInfo {\n  readonly uid: string;\n  readonly displayName?: string | null;\n  readonly enrollmentTime: string;\n\n  protected constructor(readonly factorId: FactorId, response: MfaEnrollment) {\n    this.uid = response.mfaEnrollmentId;\n    this.enrollmentTime = new Date(response.enrolledAt).toUTCString();\n    this.displayName = response.displayName;\n  }\n\n  static _fromServerResponse(\n    auth: AuthInternal,\n    enrollment: MfaEnrollment\n  ): MultiFactorInfoImpl {\n    if ('phoneInfo' in enrollment) {\n      return PhoneMultiFactorInfoImpl._fromServerResponse(auth, enrollment);\n    }\n    return _fail(auth, AuthErrorCode.INTERNAL_ERROR);\n  }\n}\n\nexport class PhoneMultiFactorInfoImpl\n  extends MultiFactorInfoImpl\n  implements PhoneMultiFactorInfo\n{\n  readonly phoneNumber: string;\n\n  private constructor(response: PhoneMfaEnrollment) {\n    super(FactorId.PHONE, response);\n    this.phoneNumber = response.phoneInfo;\n  }\n\n  static _fromServerResponse(\n    _auth: AuthInternal,\n    enrollment: MfaEnrollment\n  ): PhoneMultiFactorInfoImpl {\n    return new PhoneMultiFactorInfoImpl(enrollment);\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { MultiFactorError as MultiFactorErrorPublic } from '../model/public_types';\nimport { FirebaseError } from '@firebase/util';\nimport { AuthInternal } from '../model/auth';\nimport { IdTokenResponse } from '../model/id_token';\nimport { AuthErrorCode } from '../core/errors';\nimport { UserInternal } from '../model/user';\nimport { AuthCredential } from '../core/credentials';\nimport { IdTokenMfaResponse } from '../api/authentication/mfa';\nimport { OperationType } from '../model/enums';\n\nexport type MultiFactorErrorData = MultiFactorErrorPublic['customData'] & {\n  _serverResponse: IdTokenMfaResponse;\n};\n\nexport class MultiFactorError\n  extends FirebaseError\n  implements MultiFactorErrorPublic\n{\n  readonly customData: MultiFactorErrorData;\n\n  private constructor(\n    auth: AuthInternal,\n    error: FirebaseError,\n    readonly operationType: OperationType,\n    readonly user?: UserInternal\n  ) {\n    super(error.code, error.message);\n    // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    Object.setPrototypeOf(this, MultiFactorError.prototype);\n    this.customData = {\n      appName: auth.name,\n      tenantId: auth.tenantId ?? undefined,\n      _serverResponse: error.customData!._serverResponse as IdTokenMfaResponse,\n      operationType\n    };\n  }\n\n  static _fromErrorAndOperation(\n    auth: AuthInternal,\n    error: FirebaseError,\n    operationType: OperationType,\n    user?: UserInternal\n  ): MultiFactorError {\n    return new MultiFactorError(auth, error, operationType, user);\n  }\n}\n\nexport function _processCredentialSavingMfaContextIfNecessary(\n  auth: AuthInternal,\n  operationType: OperationType,\n  credential: AuthCredential,\n  user?: UserInternal\n): Promise<IdTokenResponse> {\n  const idTokenProvider =\n    operationType === OperationType.REAUTHENTICATE\n      ? credential._getReauthenticationResolver(auth)\n      : credential._getIdTokenResponse(auth);\n\n  return idTokenProvider.catch(error => {\n    if (error.code === `auth/${AuthErrorCode.MFA_REQUIRED}`) {\n      throw MultiFactorError._fromErrorAndOperation(\n        auth,\n        error,\n        operationType,\n        user\n      );\n    }\n\n    throw error;\n  });\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { User } from '../../model/public_types';\n\nimport { deleteLinkedAccounts } from '../../api/account_management/account';\nimport { UserInternal, UserCredentialInternal } from '../../model/user';\nimport { AuthCredential } from '../credentials';\nimport { AuthErrorCode } from '../errors';\nimport { _assert } from '../util/assert';\nimport { providerDataAsNames } from '../util/providers';\nimport { _logoutIfInvalidated } from './invalidation';\nimport { _reloadWithoutSaving } from './reload';\nimport { UserCredentialImpl } from './user_credential_impl';\nimport { getModularInstance } from '@firebase/util';\nimport { OperationType, ProviderId } from '../../model/enums';\n\n/**\n * Unlinks a provider from a user account.\n *\n * @param user - The user.\n * @param providerId - The provider to unlink.\n *\n * @public\n */\nexport async function unlink(user: User, providerId: string): Promise<User> {\n  const userInternal = getModularInstance(user) as UserInternal;\n  await _assertLinkedStatus(true, userInternal, providerId);\n  const { providerUserInfo } = await deleteLinkedAccounts(userInternal.auth, {\n    idToken: await userInternal.getIdToken(),\n    deleteProvider: [providerId]\n  });\n\n  const providersLeft = providerDataAsNames(providerUserInfo || []);\n\n  userInternal.providerData = userInternal.providerData.filter(pd =>\n    providersLeft.has(pd.providerId)\n  );\n  if (!providersLeft.has(ProviderId.PHONE)) {\n    userInternal.phoneNumber = null;\n  }\n\n  await userInternal.auth._persistUserIfCurrent(userInternal);\n  return userInternal;\n}\n\nexport async function _link(\n  user: UserInternal,\n  credential: AuthCredential,\n  bypassAuthState = false\n): Promise<UserCredentialInternal> {\n  const response = await _logoutIfInvalidated(\n    user,\n    credential._linkToIdToken(user.auth, await user.getIdToken()),\n    bypassAuthState\n  );\n  return UserCredentialImpl._forOperation(user, OperationType.LINK, response);\n}\n\nexport async function _assertLinkedStatus(\n  expected: boolean,\n  user: UserInternal,\n  provider: string\n): Promise<void> {\n  await _reloadWithoutSaving(user);\n  const providerIds = providerDataAsNames(user.providerData);\n\n  const code =\n    expected === false\n      ? AuthErrorCode.PROVIDER_ALREADY_LINKED\n      : AuthErrorCode.NO_SUCH_PROVIDER;\n  _assert(providerIds.has(provider) === expected, user.auth, code);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ActionCodeSettings, Auth } from '../../model/public_types';\n\nimport { GetOobCodeRequest } from '../../api/authentication/email_and_password';\nimport { AuthErrorCode } from '../errors';\nimport { _assert } from '../util/assert';\n\nexport function _setActionCodeSettingsOnRequest(\n  auth: Auth,\n  request: GetOobCodeRequest,\n  actionCodeSettings: ActionCodeSettings\n): void {\n  _assert(\n    actionCodeSettings.url?.length > 0,\n    auth,\n    AuthErrorCode.INVALID_CONTINUE_URI\n  );\n  _assert(\n    typeof actionCodeSettings.dynamicLinkDomain === 'undefined' ||\n      actionCodeSettings.dynamicLinkDomain.length > 0,\n    auth,\n    AuthErrorCode.INVALID_DYNAMIC_LINK_DOMAIN\n  );\n\n  request.continueUrl = actionCodeSettings.url;\n  request.dynamicLinkDomain = actionCodeSettings.dynamicLinkDomain;\n  request.canHandleCodeInApp = actionCodeSettings.handleCodeInApp;\n\n  if (actionCodeSettings.iOS) {\n    _assert(\n      actionCodeSettings.iOS.bundleId.length > 0,\n      auth,\n      AuthErrorCode.MISSING_IOS_BUNDLE_ID\n    );\n    request.iOSBundleId = actionCodeSettings.iOS.bundleId;\n  }\n\n  if (actionCodeSettings.android) {\n    _assert(\n      actionCodeSettings.android.packageName.length > 0,\n      auth,\n      AuthErrorCode.MISSING_ANDROID_PACKAGE_NAME\n    );\n    request.androidInstallApp = actionCodeSettings.android.installApp;\n    request.androidMinimumVersionCode =\n      actionCodeSettings.android.minimumVersion;\n    request.androidPackageName = actionCodeSettings.android.packageName;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError } from '@firebase/util';\nimport { _processCredentialSavingMfaContextIfNecessary } from '../../mfa/mfa_error';\nimport { OperationType } from '../../model/enums';\nimport { UserInternal } from '../../model/user';\nimport { AuthCredential } from '../credentials';\nimport { AuthErrorCode } from '../errors';\nimport { _assert, _fail } from '../util/assert';\nimport { _parseToken } from './id_token_result';\nimport { _logoutIfInvalidated } from './invalidation';\nimport { UserCredentialImpl } from './user_credential_impl';\n\nexport async function _reauthenticate(\n  user: UserInternal,\n  credential: AuthCredential,\n  bypassAuthState = false\n): Promise<UserCredentialImpl> {\n  const { auth } = user;\n  const operationType = OperationType.REAUTHENTICATE;\n\n  try {\n    const response = await _logoutIfInvalidated(\n      user,\n      _processCredentialSavingMfaContextIfNecessary(\n        auth,\n        operationType,\n        credential,\n        user\n      ),\n      bypassAuthState\n    );\n    _assert(response.idToken, auth, AuthErrorCode.INTERNAL_ERROR);\n    const parsed = _parseToken(response.idToken);\n    _assert(parsed, auth, AuthErrorCode.INTERNAL_ERROR);\n\n    const { sub: localId } = parsed;\n    _assert(user.uid === localId, auth, AuthErrorCode.USER_MISMATCH);\n\n    return UserCredentialImpl._forOperation(user, operationType, response);\n  } catch (e) {\n    // Convert user deleted error into user mismatch\n    if ((e as FirebaseError)?.code === `auth/${AuthErrorCode.USER_DELETED}`) {\n      _fail(auth, AuthErrorCode.USER_MISMATCH);\n    }\n    throw e;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ActionCodeInfo,\n  ActionCodeOperation,\n  ActionCodeSettings,\n  Auth,\n  UserCredential\n} from '../../model/public_types';\n\nimport * as account from '../../api/account_management/email_and_password';\nimport * as authentication from '../../api/authentication/email_and_password';\nimport { signUp } from '../../api/authentication/sign_up';\nimport { MultiFactorInfoImpl } from '../../mfa/mfa_info';\nimport { EmailAuthProvider } from '../providers/email';\nimport { UserCredentialImpl } from '../user/user_credential_impl';\nimport { _assert } from '../util/assert';\nimport { _setActionCodeSettingsOnRequest } from './action_code_settings';\nimport { signInWithCredential } from './credential';\nimport { _castAuth } from '../auth/auth_impl';\nimport { AuthErrorCode } from '../errors';\nimport { getModularInstance } from '@firebase/util';\nimport { OperationType } from '../../model/enums';\n\n/**\n * Sends a password reset email to the given email address.\n *\n * @remarks\n * To complete the password reset, call {@link confirmPasswordReset} with the code supplied in\n * the email sent to the user, along with the new password specified by the user.\n *\n * @example\n * ```javascript\n * const actionCodeSettings = {\n *   url: 'https://www.example.com/?email=user@example.com',\n *   iOS: {\n *      bundleId: 'com.example.ios'\n *   },\n *   android: {\n *     packageName: 'com.example.android',\n *     installApp: true,\n *     minimumVersion: '12'\n *   },\n *   handleCodeInApp: true\n * };\n * await sendPasswordResetEmail(auth, 'user@example.com', actionCodeSettings);\n * // Obtain code from user.\n * await confirmPasswordReset('user@example.com', code);\n * ```\n *\n * @param auth - The {@link Auth} instance.\n * @param email - The user's email address.\n * @param actionCodeSettings - The {@link ActionCodeSettings}.\n *\n * @public\n */\nexport async function sendPasswordResetEmail(\n  auth: Auth,\n  email: string,\n  actionCodeSettings?: ActionCodeSettings\n): Promise<void> {\n  const authModular = getModularInstance(auth);\n  const request: authentication.PasswordResetRequest = {\n    requestType: ActionCodeOperation.PASSWORD_RESET,\n    email\n  };\n  if (actionCodeSettings) {\n    _setActionCodeSettingsOnRequest(authModular, request, actionCodeSettings);\n  }\n\n  await authentication.sendPasswordResetEmail(authModular, request);\n}\n\n/**\n * Completes the password reset process, given a confirmation code and new password.\n *\n * @param auth - The {@link Auth} instance.\n * @param oobCode - A confirmation code sent to the user.\n * @param newPassword - The new password.\n *\n * @public\n */\nexport async function confirmPasswordReset(\n  auth: Auth,\n  oobCode: string,\n  newPassword: string\n): Promise<void> {\n  await account.resetPassword(getModularInstance(auth), {\n    oobCode,\n    newPassword\n  });\n  // Do not return the email.\n}\n\n/**\n * Applies a verification code sent to the user by email or other out-of-band mechanism.\n *\n * @param auth - The {@link Auth} instance.\n * @param oobCode - A verification code sent to the user.\n *\n * @public\n */\nexport async function applyActionCode(\n  auth: Auth,\n  oobCode: string\n): Promise<void> {\n  await account.applyActionCode(getModularInstance(auth), { oobCode });\n}\n\n/**\n * Checks a verification code sent to the user by email or other out-of-band mechanism.\n *\n * @returns metadata about the code.\n *\n * @param auth - The {@link Auth} instance.\n * @param oobCode - A verification code sent to the user.\n *\n * @public\n */\nexport async function checkActionCode(\n  auth: Auth,\n  oobCode: string\n): Promise<ActionCodeInfo> {\n  const authModular = getModularInstance(auth);\n  const response = await account.resetPassword(authModular, { oobCode });\n\n  // Email could be empty only if the request type is EMAIL_SIGNIN or\n  // VERIFY_AND_CHANGE_EMAIL.\n  // New email should not be empty if the request type is\n  // VERIFY_AND_CHANGE_EMAIL.\n  // Multi-factor info could not be empty if the request type is\n  // REVERT_SECOND_FACTOR_ADDITION.\n  const operation = response.requestType;\n  _assert(operation, authModular, AuthErrorCode.INTERNAL_ERROR);\n  switch (operation) {\n    case ActionCodeOperation.EMAIL_SIGNIN:\n      break;\n    case ActionCodeOperation.VERIFY_AND_CHANGE_EMAIL:\n      _assert(response.newEmail, authModular, AuthErrorCode.INTERNAL_ERROR);\n      break;\n    case ActionCodeOperation.REVERT_SECOND_FACTOR_ADDITION:\n      _assert(response.mfaInfo, authModular, AuthErrorCode.INTERNAL_ERROR);\n    // fall through\n    default:\n      _assert(response.email, authModular, AuthErrorCode.INTERNAL_ERROR);\n  }\n\n  // The multi-factor info for revert second factor addition\n  let multiFactorInfo: MultiFactorInfoImpl | null = null;\n  if (response.mfaInfo) {\n    multiFactorInfo = MultiFactorInfoImpl._fromServerResponse(\n      _castAuth(authModular),\n      response.mfaInfo\n    );\n  }\n\n  return {\n    data: {\n      email:\n        (response.requestType === ActionCodeOperation.VERIFY_AND_CHANGE_EMAIL\n          ? response.newEmail\n          : response.email) || null,\n      previousEmail:\n        (response.requestType === ActionCodeOperation.VERIFY_AND_CHANGE_EMAIL\n          ? response.email\n          : response.newEmail) || null,\n      multiFactorInfo\n    },\n    operation\n  };\n}\n\n/**\n * Checks a password reset code sent to the user by email or other out-of-band mechanism.\n *\n * @returns the user's email address if valid.\n *\n * @param auth - The {@link Auth} instance.\n * @param code - A verification code sent to the user.\n *\n * @public\n */\nexport async function verifyPasswordResetCode(\n  auth: Auth,\n  code: string\n): Promise<string> {\n  const { data } = await checkActionCode(getModularInstance(auth), code);\n  // Email should always be present since a code was sent to it\n  return data.email!;\n}\n\n/**\n * Creates a new user account associated with the specified email address and password.\n *\n * @remarks\n * On successful creation of the user account, this user will also be signed in to your application.\n *\n * User account creation can fail if the account already exists or the password is invalid.\n *\n * Note: The email address acts as a unique identifier for the user and enables an email-based\n * password reset. This function will create a new user account and set the initial user password.\n *\n * @param auth - The {@link Auth} instance.\n * @param email - The user's email address.\n * @param password - The user's chosen password.\n *\n * @public\n */\nexport async function createUserWithEmailAndPassword(\n  auth: Auth,\n  email: string,\n  password: string\n): Promise<UserCredential> {\n  const authInternal = _castAuth(auth);\n  const response = await signUp(authInternal, {\n    returnSecureToken: true,\n    email,\n    password\n  });\n\n  const userCredential = await UserCredentialImpl._fromIdTokenResponse(\n    authInternal,\n    OperationType.SIGN_IN,\n    response\n  );\n  await authInternal._updateCurrentUser(userCredential.user);\n\n  return userCredential;\n}\n\n/**\n * Asynchronously signs in using an email and password.\n *\n * @remarks\n * Fails with an error if the email address and password do not match.\n *\n * Note: The user's password is NOT the password used to access the user's email account. The\n * email address serves as a unique identifier for the user, and the password is used to access\n * the user's account in your Firebase project. See also: {@link createUserWithEmailAndPassword}.\n *\n * @param auth - The {@link Auth} instance.\n * @param email - The users email address.\n * @param password - The users password.\n *\n * @public\n */\nexport function signInWithEmailAndPassword(\n  auth: Auth,\n  email: string,\n  password: string\n): Promise<UserCredential> {\n  return signInWithCredential(\n    getModularInstance(auth),\n    EmailAuthProvider.credential(email, password)\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ActionCodeOperation,\n  ActionCodeSettings,\n  Auth,\n  UserCredential\n} from '../../model/public_types';\n\nimport * as api from '../../api/authentication/email_and_password';\nimport { ActionCodeURL } from '../action_code_url';\nimport { EmailAuthProvider } from '../providers/email';\nimport { _getCurrentUrl } from '../util/location';\nimport { _setActionCodeSettingsOnRequest } from './action_code_settings';\nimport { signInWithCredential } from './credential';\nimport { AuthErrorCode } from '../errors';\nimport { _assert } from '../util/assert';\nimport { getModularInstance } from '@firebase/util';\n\n/**\n * Sends a sign-in email link to the user with the specified email.\n *\n * @remarks\n * The sign-in operation has to always be completed in the app unlike other out of band email\n * actions (password reset and email verifications). This is because, at the end of the flow,\n * the user is expected to be signed in and their Auth state persisted within the app.\n *\n * To complete sign in with the email link, call {@link signInWithEmailLink} with the email\n * address and the email link supplied in the email sent to the user.\n *\n * @example\n * ```javascript\n * const actionCodeSettings = {\n *   url: 'https://www.example.com/?email=user@example.com',\n *   iOS: {\n *      bundleId: 'com.example.ios'\n *   },\n *   android: {\n *     packageName: 'com.example.android',\n *     installApp: true,\n *     minimumVersion: '12'\n *   },\n *   handleCodeInApp: true\n * };\n * await sendSignInLinkToEmail(auth, 'user@example.com', actionCodeSettings);\n * // Obtain emailLink from the user.\n * if(isSignInWithEmailLink(auth, emailLink)) {\n *   await signInWithEmailLink(auth, 'user@example.com', emailLink);\n * }\n * ```\n *\n * @param authInternal - The {@link Auth} instance.\n * @param email - The user's email address.\n * @param actionCodeSettings - The {@link ActionCodeSettings}.\n *\n * @public\n */\nexport async function sendSignInLinkToEmail(\n  auth: Auth,\n  email: string,\n  actionCodeSettings: ActionCodeSettings\n): Promise<void> {\n  const authModular = getModularInstance(auth);\n  const request: api.EmailSignInRequest = {\n    requestType: ActionCodeOperation.EMAIL_SIGNIN,\n    email\n  };\n  _assert(\n    actionCodeSettings.handleCodeInApp,\n    authModular,\n    AuthErrorCode.ARGUMENT_ERROR\n  );\n  if (actionCodeSettings) {\n    _setActionCodeSettingsOnRequest(authModular, request, actionCodeSettings);\n  }\n\n  await api.sendSignInLinkToEmail(authModular, request);\n}\n\n/**\n * Checks if an incoming link is a sign-in with email link suitable for {@link signInWithEmailLink}.\n *\n * @param auth - The {@link Auth} instance.\n * @param emailLink - The link sent to the user's email address.\n *\n * @public\n */\nexport function isSignInWithEmailLink(auth: Auth, emailLink: string): boolean {\n  const actionCodeUrl = ActionCodeURL.parseLink(emailLink);\n  return actionCodeUrl?.operation === ActionCodeOperation.EMAIL_SIGNIN;\n}\n\n/**\n * Asynchronously signs in using an email and sign-in email link.\n *\n * @remarks\n * If no link is passed, the link is inferred from the current URL.\n *\n * Fails with an error if the email address is invalid or OTP in email link expires.\n *\n * Note: Confirm the link is a sign-in email link before calling this method firebase.auth.Auth.isSignInWithEmailLink.\n *\n * @example\n * ```javascript\n * const actionCodeSettings = {\n *   url: 'https://www.example.com/?email=user@example.com',\n *   iOS: {\n *      bundleId: 'com.example.ios'\n *   },\n *   android: {\n *     packageName: 'com.example.android',\n *     installApp: true,\n *     minimumVersion: '12'\n *   },\n *   handleCodeInApp: true\n * };\n * await sendSignInLinkToEmail(auth, 'user@example.com', actionCodeSettings);\n * // Obtain emailLink from the user.\n * if(isSignInWithEmailLink(auth, emailLink)) {\n *   await signInWithEmailLink(auth, 'user@example.com', emailLink);\n * }\n * ```\n *\n * @param auth - The {@link Auth} instance.\n * @param email - The user's email address.\n * @param emailLink - The link sent to the user's email address.\n *\n * @public\n */\nexport async function signInWithEmailLink(\n  auth: Auth,\n  email: string,\n  emailLink?: string\n): Promise<UserCredential> {\n  const authModular = getModularInstance(auth);\n  const credential = EmailAuthProvider.credentialWithLink(\n    email,\n    emailLink || _getCurrentUrl()\n  );\n  // Check if the tenant ID in the email link matches the tenant ID on Auth\n  // instance.\n  _assert(\n    credential._tenantId === (authModular.tenantId || null),\n    authModular,\n    AuthErrorCode.TENANT_ID_MISMATCH\n  );\n  return signInWithCredential(authModular, credential);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Endpoint,\n  HttpMethod,\n  _addTidIfNecessary,\n  _performApiRequest\n} from '../index';\nimport { Auth } from '../../model/public_types';\n\nexport interface CreateAuthUriRequest {\n  identifier: string;\n  continueUri: string;\n  tenantId?: string;\n}\n\nexport interface CreateAuthUriResponse {\n  signinMethods: string[];\n}\n\nexport async function createAuthUri(\n  auth: Auth,\n  request: CreateAuthUriRequest\n): Promise<CreateAuthUriResponse> {\n  return _performApiRequest<CreateAuthUriRequest, CreateAuthUriResponse>(\n    auth,\n    HttpMethod.POST,\n    Endpoint.CREATE_AUTH_URI,\n    _addTidIfNecessary(auth, request)\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ActionCodeOperation,\n  ActionCodeSettings,\n  Auth,\n  User\n} from '../../model/public_types';\n\nimport {\n  createAuthUri,\n  CreateAuthUriRequest\n} from '../../api/authentication/create_auth_uri';\nimport * as api from '../../api/authentication/email_and_password';\nimport { UserInternal } from '../../model/user';\nimport { _getCurrentUrl, _isHttpOrHttps } from '../util/location';\nimport { _setActionCodeSettingsOnRequest } from './action_code_settings';\nimport { getModularInstance } from '@firebase/util';\n\n/**\n * Gets the list of possible sign in methods for the given email address.\n *\n * @remarks\n * This is useful to differentiate methods of sign-in for the same provider, eg.\n * {@link EmailAuthProvider} which has 2 methods of sign-in,\n * {@link SignInMethod}.EMAIL_PASSWORD and\n * {@link SignInMethod}.EMAIL_LINK.\n *\n * @param auth - The {@link Auth} instance.\n * @param email - The user's email address.\n *\n * @public\n */\nexport async function fetchSignInMethodsForEmail(\n  auth: Auth,\n  email: string\n): Promise<string[]> {\n  // createAuthUri returns an error if continue URI is not http or https.\n  // For environments like Cordova, Chrome extensions, native frameworks, file\n  // systems, etc, use http://localhost as continue URL.\n  const continueUri = _isHttpOrHttps() ? _getCurrentUrl() : 'http://localhost';\n  const request: CreateAuthUriRequest = {\n    identifier: email,\n    continueUri\n  };\n\n  const { signinMethods } = await createAuthUri(\n    getModularInstance(auth),\n    request\n  );\n\n  return signinMethods || [];\n}\n\n/**\n * Sends a verification email to a user.\n *\n * @remarks\n * The verification process is completed by calling {@link applyActionCode}.\n *\n * @example\n * ```javascript\n * const actionCodeSettings = {\n *   url: 'https://www.example.com/?email=user@example.com',\n *   iOS: {\n *      bundleId: 'com.example.ios'\n *   },\n *   android: {\n *     packageName: 'com.example.android',\n *     installApp: true,\n *     minimumVersion: '12'\n *   },\n *   handleCodeInApp: true\n * };\n * await sendEmailVerification(user, actionCodeSettings);\n * // Obtain code from the user.\n * await applyActionCode(auth, code);\n * ```\n *\n * @param user - The user.\n * @param actionCodeSettings - The {@link ActionCodeSettings}.\n *\n * @public\n */\nexport async function sendEmailVerification(\n  user: User,\n  actionCodeSettings?: ActionCodeSettings | null\n): Promise<void> {\n  const userInternal = getModularInstance(user) as UserInternal;\n  const idToken = await user.getIdToken();\n  const request: api.VerifyEmailRequest = {\n    requestType: ActionCodeOperation.VERIFY_EMAIL,\n    idToken\n  };\n  if (actionCodeSettings) {\n    _setActionCodeSettingsOnRequest(\n      userInternal.auth,\n      request,\n      actionCodeSettings\n    );\n  }\n\n  const { email } = await api.sendEmailVerification(userInternal.auth, request);\n\n  if (email !== user.email) {\n    await user.reload();\n  }\n}\n\n/**\n * Sends a verification email to a new email address.\n *\n * @remarks\n * The user's email will be updated to the new one after being verified.\n *\n * If you have a custom email action handler, you can complete the verification process by calling\n * {@link applyActionCode}.\n *\n * @example\n * ```javascript\n * const actionCodeSettings = {\n *   url: 'https://www.example.com/?email=user@example.com',\n *   iOS: {\n *      bundleId: 'com.example.ios'\n *   },\n *   android: {\n *     packageName: 'com.example.android',\n *     installApp: true,\n *     minimumVersion: '12'\n *   },\n *   handleCodeInApp: true\n * };\n * await verifyBeforeUpdateEmail(user, 'newemail@example.com', actionCodeSettings);\n * // Obtain code from the user.\n * await applyActionCode(auth, code);\n * ```\n *\n * @param user - The user.\n * @param newEmail - The new email address to be verified before update.\n * @param actionCodeSettings - The {@link ActionCodeSettings}.\n *\n * @public\n */\nexport async function verifyBeforeUpdateEmail(\n  user: User,\n  newEmail: string,\n  actionCodeSettings?: ActionCodeSettings | null\n): Promise<void> {\n  const userInternal = getModularInstance(user) as UserInternal;\n  const idToken = await user.getIdToken();\n  const request: api.VerifyAndChangeEmailRequest = {\n    requestType: ActionCodeOperation.VERIFY_AND_CHANGE_EMAIL,\n    idToken,\n    newEmail\n  };\n  if (actionCodeSettings) {\n    _setActionCodeSettingsOnRequest(\n      userInternal.auth,\n      request,\n      actionCodeSettings\n    );\n  }\n\n  const { email } = await api.verifyAndChangeEmail(userInternal.auth, request);\n\n  if (email !== user.email) {\n    // If the local copy of the email on user is outdated, reload the\n    // user.\n    await user.reload();\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Endpoint, HttpMethod, _performApiRequest } from '../index';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { Auth } from '../../model/public_types';\n\nexport interface UpdateProfileRequest {\n  idToken: string;\n  displayName?: string | null;\n  photoUrl?: string | null;\n  returnSecureToken: boolean;\n}\n\nexport interface UpdateProfileResponse extends IdTokenResponse {\n  displayName?: string | null;\n  photoUrl?: string | null;\n}\n\nexport async function updateProfile(\n  auth: Auth,\n  request: UpdateProfileRequest\n): Promise<UpdateProfileResponse> {\n  return _performApiRequest<UpdateProfileRequest, UpdateProfileResponse>(\n    auth,\n    HttpMethod.POST,\n    Endpoint.SET_ACCOUNT_INFO,\n    request\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { User } from '../../model/public_types';\n\nimport {\n  updateEmailPassword as apiUpdateEmailPassword,\n  UpdateEmailPasswordRequest\n} from '../../api/account_management/email_and_password';\nimport { updateProfile as apiUpdateProfile } from '../../api/account_management/profile';\nimport { UserInternal } from '../../model/user';\nimport { _logoutIfInvalidated } from './invalidation';\nimport { getModularInstance } from '@firebase/util';\nimport { ProviderId } from '../../model/enums';\n\n/**\n * Updates a user's profile data.\n *\n * @param user - The user.\n * @param profile - The profile's `displayName` and `photoURL` to update.\n *\n * @public\n */\nexport async function updateProfile(\n  user: User,\n  {\n    displayName,\n    photoURL: photoUrl\n  }: { displayName?: string | null; photoURL?: string | null }\n): Promise<void> {\n  if (displayName === undefined && photoUrl === undefined) {\n    return;\n  }\n\n  const userInternal = getModularInstance(user) as UserInternal;\n  const idToken = await userInternal.getIdToken();\n  const profileRequest = {\n    idToken,\n    displayName,\n    photoUrl,\n    returnSecureToken: true\n  };\n  const response = await _logoutIfInvalidated(\n    userInternal,\n    apiUpdateProfile(userInternal.auth, profileRequest)\n  );\n\n  userInternal.displayName = response.displayName || null;\n  userInternal.photoURL = response.photoUrl || null;\n\n  // Update the password provider as well\n  const passwordProvider = userInternal.providerData.find(\n    ({ providerId }) => providerId === ProviderId.PASSWORD\n  );\n  if (passwordProvider) {\n    passwordProvider.displayName = userInternal.displayName;\n    passwordProvider.photoURL = userInternal.photoURL;\n  }\n\n  await userInternal._updateTokensIfNecessary(response);\n}\n\n/**\n * Updates the user's email address.\n *\n * @remarks\n * An email will be sent to the original email address (if it was set) that allows to revoke the\n * email address change, in order to protect them from account hijacking.\n *\n * Important: this is a security sensitive operation that requires the user to have recently signed\n * in. If this requirement isn't met, ask the user to authenticate again and then call\n * {@link reauthenticateWithCredential}.\n *\n * @param user - The user.\n * @param newEmail - The new email address.\n *\n * @public\n */\nexport function updateEmail(user: User, newEmail: string): Promise<void> {\n  return updateEmailOrPassword(\n    getModularInstance(user) as UserInternal,\n    newEmail,\n    null\n  );\n}\n\n/**\n * Updates the user's password.\n *\n * @remarks\n * Important: this is a security sensitive operation that requires the user to have recently signed\n * in. If this requirement isn't met, ask the user to authenticate again and then call\n * {@link reauthenticateWithCredential}.\n *\n * @param user - The user.\n * @param newPassword - The new password.\n *\n * @public\n */\nexport function updatePassword(user: User, newPassword: string): Promise<void> {\n  return updateEmailOrPassword(\n    getModularInstance(user) as UserInternal,\n    null,\n    newPassword\n  );\n}\n\nasync function updateEmailOrPassword(\n  user: UserInternal,\n  email: string | null,\n  password: string | null\n): Promise<void> {\n  const { auth } = user;\n  const idToken = await user.getIdToken();\n  const request: UpdateEmailPasswordRequest = {\n    idToken,\n    returnSecureToken: true\n  };\n\n  if (email) {\n    request.email = email;\n  }\n\n  if (password) {\n    request.password = password;\n  }\n\n  const response = await _logoutIfInvalidated(\n    user,\n    apiUpdateEmailPassword(auth, request)\n  );\n  await user._updateTokensIfNecessary(response, /* reload */ true);\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AdditionalUserInfo, UserCredential } from '../../model/public_types';\nimport { IdTokenResponse, IdTokenResponseKind } from '../../model/id_token';\nimport { _parseToken } from './id_token_result';\nimport { UserCredentialInternal } from '../../model/user';\nimport { ProviderId } from '../../model/enums';\n\n/**\n * Parse the `AdditionalUserInfo` from the ID token response.\n *\n */\nexport function _fromIdTokenResponse(\n  idTokenResponse?: IdTokenResponse\n): AdditionalUserInfo | null {\n  if (!idTokenResponse) {\n    return null;\n  }\n  const { providerId } = idTokenResponse;\n  const profile = idTokenResponse.rawUserInfo\n    ? JSON.parse(idTokenResponse.rawUserInfo)\n    : {};\n  const isNewUser =\n    idTokenResponse.isNewUser ||\n    idTokenResponse.kind === IdTokenResponseKind.SignupNewUser;\n  if (!providerId && idTokenResponse?.idToken) {\n    const signInProvider = _parseToken(idTokenResponse.idToken)?.firebase?.[\n      'sign_in_provider'\n    ];\n    if (signInProvider) {\n      const filteredProviderId =\n        signInProvider !== ProviderId.ANONYMOUS &&\n        signInProvider !== ProviderId.CUSTOM\n          ? (signInProvider as ProviderId)\n          : null;\n      // Uses generic class in accordance with the legacy SDK.\n      return new GenericAdditionalUserInfo(isNewUser, filteredProviderId);\n    }\n  }\n  if (!providerId) {\n    return null;\n  }\n  switch (providerId) {\n    case ProviderId.FACEBOOK:\n      return new FacebookAdditionalUserInfo(isNewUser, profile);\n    case ProviderId.GITHUB:\n      return new GithubAdditionalUserInfo(isNewUser, profile);\n    case ProviderId.GOOGLE:\n      return new GoogleAdditionalUserInfo(isNewUser, profile);\n    case ProviderId.TWITTER:\n      return new TwitterAdditionalUserInfo(\n        isNewUser,\n        profile,\n        idTokenResponse.screenName || null\n      );\n    case ProviderId.CUSTOM:\n    case ProviderId.ANONYMOUS:\n      return new GenericAdditionalUserInfo(isNewUser, null);\n    default:\n      return new GenericAdditionalUserInfo(isNewUser, providerId, profile);\n  }\n}\n\nclass GenericAdditionalUserInfo implements AdditionalUserInfo {\n  constructor(\n    readonly isNewUser: boolean,\n    readonly providerId: ProviderId | string | null,\n    readonly profile: Record<string, unknown> = {}\n  ) {}\n}\n\nclass FederatedAdditionalUserInfoWithUsername extends GenericAdditionalUserInfo {\n  constructor(\n    isNewUser: boolean,\n    providerId: ProviderId,\n    profile: Record<string, unknown>,\n    readonly username: string | null\n  ) {\n    super(isNewUser, providerId, profile);\n  }\n}\n\nclass FacebookAdditionalUserInfo extends GenericAdditionalUserInfo {\n  constructor(isNewUser: boolean, profile: Record<string, unknown>) {\n    super(isNewUser, ProviderId.FACEBOOK, profile);\n  }\n}\n\nclass GithubAdditionalUserInfo extends FederatedAdditionalUserInfoWithUsername {\n  constructor(isNewUser: boolean, profile: Record<string, unknown>) {\n    super(\n      isNewUser,\n      ProviderId.GITHUB,\n      profile,\n      typeof profile?.login === 'string' ? profile?.login : null\n    );\n  }\n}\n\nclass GoogleAdditionalUserInfo extends GenericAdditionalUserInfo {\n  constructor(isNewUser: boolean, profile: Record<string, unknown>) {\n    super(isNewUser, ProviderId.GOOGLE, profile);\n  }\n}\n\nclass TwitterAdditionalUserInfo extends FederatedAdditionalUserInfoWithUsername {\n  constructor(\n    isNewUser: boolean,\n    profile: Record<string, unknown>,\n    screenName: string | null\n  ) {\n    super(isNewUser, ProviderId.TWITTER, profile, screenName);\n  }\n}\n\n/**\n * Extracts provider specific {@link AdditionalUserInfo} for the given credential.\n *\n * @param userCredential - The user credential.\n *\n * @public\n */\nexport function getAdditionalUserInfo(\n  userCredential: UserCredential\n): AdditionalUserInfo | null {\n  const { user, _tokenResponse } = userCredential as UserCredentialInternal;\n  if (user.isAnonymous && !_tokenResponse) {\n    // Handle the special case where signInAnonymously() gets called twice.\n    // No network call is made so there's nothing to actually fill this in\n    return {\n      providerId: null,\n      isNewUser: false,\n      profile: null\n    };\n  }\n\n  return _fromIdTokenResponse(_tokenResponse);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Auth,\n  MultiFactorResolver,\n  UserCredential,\n  MultiFactorError\n} from '../model/public_types';\n\nimport { _castAuth } from '../core/auth/auth_impl';\nimport { AuthErrorCode } from '../core/errors';\nimport { UserCredentialImpl } from '../core/user/user_credential_impl';\nimport { _assert, _fail } from '../core/util/assert';\nimport { UserCredentialInternal } from '../model/user';\nimport { MultiFactorAssertionImpl } from './mfa_assertion';\nimport { MultiFactorError as MultiFactorErrorInternal } from './mfa_error';\nimport { MultiFactorInfoImpl } from './mfa_info';\nimport { MultiFactorSessionImpl } from './mfa_session';\nimport { getModularInstance } from '@firebase/util';\nimport { OperationType } from '../model/enums';\n\nexport class MultiFactorResolverImpl implements MultiFactorResolver {\n  private constructor(\n    readonly session: MultiFactorSessionImpl,\n    readonly hints: MultiFactorInfoImpl[],\n    private readonly signInResolver: (\n      assertion: MultiFactorAssertionImpl\n    ) => Promise<UserCredentialInternal>\n  ) {}\n\n  /** @internal */\n  static _fromError(\n    authExtern: Auth,\n    error: MultiFactorErrorInternal\n  ): MultiFactorResolverImpl {\n    const auth = _castAuth(authExtern);\n    const serverResponse = error.customData._serverResponse;\n    const hints = (serverResponse.mfaInfo || []).map(enrollment =>\n      MultiFactorInfoImpl._fromServerResponse(auth, enrollment)\n    );\n\n    _assert(\n      serverResponse.mfaPendingCredential,\n      auth,\n      AuthErrorCode.INTERNAL_ERROR\n    );\n    const session = MultiFactorSessionImpl._fromMfaPendingCredential(\n      serverResponse.mfaPendingCredential\n    );\n\n    return new MultiFactorResolverImpl(\n      session,\n      hints,\n      async (\n        assertion: MultiFactorAssertionImpl\n      ): Promise<UserCredentialInternal> => {\n        const mfaResponse = await assertion._process(auth, session);\n        // Clear out the unneeded fields from the old login response\n        delete serverResponse.mfaInfo;\n        delete serverResponse.mfaPendingCredential;\n\n        // Use in the new token & refresh token in the old response\n        const idTokenResponse = {\n          ...serverResponse,\n          idToken: mfaResponse.idToken,\n          refreshToken: mfaResponse.refreshToken\n        };\n\n        // TODO: we should collapse this switch statement into UserCredentialImpl._forOperation and have it support the SIGN_IN case\n        switch (error.operationType) {\n          case OperationType.SIGN_IN:\n            const userCredential =\n              await UserCredentialImpl._fromIdTokenResponse(\n                auth,\n                error.operationType,\n                idTokenResponse\n              );\n            await auth._updateCurrentUser(userCredential.user);\n            return userCredential;\n          case OperationType.REAUTHENTICATE:\n            _assert(error.user, auth, AuthErrorCode.INTERNAL_ERROR);\n            return UserCredentialImpl._forOperation(\n              error.user,\n              error.operationType,\n              idTokenResponse\n            );\n          default:\n            _fail(auth, AuthErrorCode.INTERNAL_ERROR);\n        }\n      }\n    );\n  }\n\n  async resolveSignIn(\n    assertionExtern: MultiFactorAssertionImpl\n  ): Promise<UserCredential> {\n    const assertion = assertionExtern as MultiFactorAssertionImpl;\n    return this.signInResolver(assertion);\n  }\n}\n\n/**\n * Provides a {@link MultiFactorResolver} suitable for completion of a\n * multi-factor flow.\n *\n * @param auth - The {@link Auth} instance.\n * @param error - The {@link MultiFactorError} raised during a sign-in, or\n * reauthentication operation.\n *\n * @public\n */\nexport function getMultiFactorResolver(\n  auth: Auth,\n  error: MultiFactorError\n): MultiFactorResolver {\n  const authModular = getModularInstance(auth);\n  const errorInternal = error as MultiFactorErrorInternal;\n  _assert(\n    error.customData.operationType,\n    authModular,\n    AuthErrorCode.ARGUMENT_ERROR\n  );\n  _assert(\n    errorInternal.customData._serverResponse?.mfaPendingCredential,\n    authModular,\n    AuthErrorCode.ARGUMENT_ERROR\n  );\n\n  return MultiFactorResolverImpl._fromError(authModular, errorInternal);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { AuthInternal } from '../model/auth';\nimport { MultiFactorSession } from '../model/public_types';\n\nexport const enum MultiFactorSessionType {\n  ENROLL = 'enroll',\n  SIGN_IN = 'signin'\n}\n\ninterface SerializedMultiFactorSession {\n  multiFactorSession: {\n    idToken?: string;\n    pendingCredential?: string;\n  };\n}\n\nexport class MultiFactorSessionImpl implements MultiFactorSession {\n  private constructor(\n    readonly type: MultiFactorSessionType,\n    readonly credential: string,\n    readonly auth?: AuthInternal\n  ) {}\n\n  static _fromIdtoken(\n    idToken: string,\n    auth?: AuthInternal\n  ): MultiFactorSessionImpl {\n    return new MultiFactorSessionImpl(\n      MultiFactorSessionType.ENROLL,\n      idToken,\n      auth\n    );\n  }\n\n  static _fromMfaPendingCredential(\n    mfaPendingCredential: string\n  ): MultiFactorSessionImpl {\n    return new MultiFactorSessionImpl(\n      MultiFactorSessionType.SIGN_IN,\n      mfaPendingCredential\n    );\n  }\n\n  toJSON(): SerializedMultiFactorSession {\n    const key =\n      this.type === MultiFactorSessionType.ENROLL\n        ? 'idToken'\n        : 'pendingCredential';\n    return {\n      multiFactorSession: {\n        [key]: this.credential\n      }\n    };\n  }\n\n  static fromJSON(\n    obj: Partial<SerializedMultiFactorSession>\n  ): MultiFactorSessionImpl | null {\n    if (obj?.multiFactorSession) {\n      if (obj.multiFactorSession?.pendingCredential) {\n        return MultiFactorSessionImpl._fromMfaPendingCredential(\n          obj.multiFactorSession.pendingCredential\n        );\n      } else if (obj.multiFactorSession?.idToken) {\n        return MultiFactorSessionImpl._fromIdtoken(\n          obj.multiFactorSession.idToken\n        );\n      }\n    }\n    return null;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getModularInstance } from '@firebase/util';\nimport {\n  Auth,\n  NextOrObserver,\n  Persistence,\n  User,\n  CompleteFn,\n  ErrorFn,\n  Unsubscribe\n} from '../model/public_types';\n\nexport {\n  debugErrorMap,\n  prodErrorMap,\n  AUTH_ERROR_CODES_MAP_DO_NOT_USE_INTERNALLY as AuthErrorCodes\n} from './errors';\n\n// Non-optional auth methods.\n/**\n * Changes the type of persistence on the {@link Auth} instance for the currently saved\n * `Auth` session and applies this type of persistence for future sign-in requests, including\n * sign-in with redirect requests.\n *\n * @remarks\n * This makes it easy for a user signing in to specify whether their session should be\n * remembered or not. It also makes it easier to never persist the `Auth` state for applications\n * that are shared by other users or have sensitive data.\n *\n * @example\n * ```javascript\n * setPersistence(auth, browserSessionPersistence);\n * ```\n *\n * @param auth - The {@link Auth} instance.\n * @param persistence - The {@link Persistence} to use.\n * @returns A `Promise` that resolves once the persistence change has completed\n *\n * @public\n */\nexport function setPersistence(\n  auth: Auth,\n  persistence: Persistence\n): Promise<void> {\n  return getModularInstance(auth).setPersistence(persistence);\n}\n/**\n * Adds an observer for changes to the signed-in user's ID token.\n *\n * @remarks\n * This includes sign-in, sign-out, and token refresh events.\n *\n * @param auth - The {@link Auth} instance.\n * @param nextOrObserver - callback triggered on change.\n * @param error - Deprecated. This callback is never triggered. Errors\n * on signing in/out can be caught in promises returned from\n * sign-in/sign-out functions.\n * @param completed - Deprecated. This callback is never triggered.\n *\n * @public\n */\nexport function onIdTokenChanged(\n  auth: Auth,\n  nextOrObserver: NextOrObserver<User>,\n  error?: ErrorFn,\n  completed?: CompleteFn\n): Unsubscribe {\n  return getModularInstance(auth).onIdTokenChanged(\n    nextOrObserver,\n    error,\n    completed\n  );\n}\n/**\n * Adds a blocking callback that runs before an auth state change\n * sets a new user.\n *\n * @param auth - The {@link Auth} instance.\n * @param callback - callback triggered before new user value is set.\n *   If this throws, it blocks the user from being set.\n * @param onAbort - callback triggered if a later `beforeAuthStateChanged()`\n *   callback throws, allowing you to undo any side effects.\n */\nexport function beforeAuthStateChanged(\n  auth: Auth,\n  callback: (user: User | null) => void | Promise<void>,\n  onAbort?: () => void\n): Unsubscribe {\n  return getModularInstance(auth).beforeAuthStateChanged(callback, onAbort);\n}\n/**\n * Adds an observer for changes to the user's sign-in state.\n *\n * @remarks\n * To keep the old behavior, see {@link onIdTokenChanged}.\n *\n * @param auth - The {@link Auth} instance.\n * @param nextOrObserver - callback triggered on change.\n * @param error - Deprecated. This callback is never triggered. Errors\n * on signing in/out can be caught in promises returned from\n * sign-in/sign-out functions.\n * @param completed - Deprecated. This callback is never triggered.\n *\n * @public\n */\nexport function onAuthStateChanged(\n  auth: Auth,\n  nextOrObserver: NextOrObserver<User>,\n  error?: ErrorFn,\n  completed?: CompleteFn\n): Unsubscribe {\n  return getModularInstance(auth).onAuthStateChanged(\n    nextOrObserver,\n    error,\n    completed\n  );\n}\n/**\n * Sets the current language to the default device/browser preference.\n *\n * @param auth - The {@link Auth} instance.\n *\n * @public\n */\nexport function useDeviceLanguage(auth: Auth): void {\n  getModularInstance(auth).useDeviceLanguage();\n}\n/**\n * Asynchronously sets the provided user as {@link Auth.currentUser} on the\n * {@link Auth} instance.\n *\n * @remarks\n * A new instance copy of the user provided will be made and set as currentUser.\n *\n * This will trigger {@link onAuthStateChanged} and {@link onIdTokenChanged} listeners\n * like other sign in methods.\n *\n * The operation fails with an error if the user to be updated belongs to a different Firebase\n * project.\n *\n * @param auth - The {@link Auth} instance.\n * @param user - The new {@link User}.\n *\n * @public\n */\nexport function updateCurrentUser(\n  auth: Auth,\n  user: User | null\n): Promise<void> {\n  return getModularInstance(auth).updateCurrentUser(user);\n}\n/**\n * Signs out the current user.\n *\n * @param auth - The {@link Auth} instance.\n *\n * @public\n */\nexport function signOut(auth: Auth): Promise<void> {\n  return getModularInstance(auth).signOut();\n}\n\nexport { initializeAuth } from './auth/initialize';\nexport { connectAuthEmulator } from './auth/emulator';\n\n// credentials\nexport { AuthCredential } from './credentials';\nexport { EmailAuthCredential } from './credentials/email';\nexport { OAuthCredential } from './credentials/oauth';\nexport { PhoneAuthCredential } from './credentials/phone';\n\n// persistence\nexport { inMemoryPersistence } from './persistence/in_memory';\n\n// providers\nexport { EmailAuthProvider } from './providers/email';\nexport { FacebookAuthProvider } from './providers/facebook';\nexport { CustomParameters } from './providers/federated';\nexport { GoogleAuthProvider } from './providers/google';\nexport { GithubAuthProvider } from './providers/github';\nexport { OAuthProvider, OAuthCredentialOptions } from './providers/oauth';\nexport { SAMLAuthProvider } from './providers/saml';\nexport { TwitterAuthProvider } from './providers/twitter';\n\n// strategies\nexport { signInAnonymously } from './strategies/anonymous';\nexport {\n  signInWithCredential,\n  linkWithCredential,\n  reauthenticateWithCredential\n} from './strategies/credential';\nexport { signInWithCustomToken } from './strategies/custom_token';\nexport {\n  sendPasswordResetEmail,\n  confirmPasswordReset,\n  applyActionCode,\n  checkActionCode,\n  verifyPasswordResetCode,\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword\n} from './strategies/email_and_password';\nexport {\n  sendSignInLinkToEmail,\n  isSignInWithEmailLink,\n  signInWithEmailLink\n} from './strategies/email_link';\nexport {\n  fetchSignInMethodsForEmail,\n  sendEmailVerification,\n  verifyBeforeUpdateEmail\n} from './strategies/email';\n\n// core\nexport { ActionCodeURL, parseActionCodeURL } from './action_code_url';\n\n// user\nexport {\n  updateProfile,\n  updateEmail,\n  updatePassword\n} from './user/account_info';\nexport { getIdToken, getIdTokenResult } from './user/id_token_result';\nexport { unlink } from './user/link_unlink';\nexport { getAdditionalUserInfo } from './user/additional_user_info';\n\n// Non-optional user methods.\nexport { reload } from './user/reload';\n/**\n * Deletes and signs out the user.\n *\n * @remarks\n * Important: this is a security-sensitive operation that requires the user to have recently\n * signed in. If this requirement isn't met, ask the user to authenticate again and then call\n * {@link reauthenticateWithCredential}.\n *\n * @param user - The user.\n *\n * @public\n */\nexport async function deleteUser(user: User): Promise<void> {\n  return getModularInstance(user).delete();\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  MultiFactorAssertion,\n  MultiFactorInfo,\n  MultiFactorSession,\n  MultiFactorUser,\n  User\n} from '../model/public_types';\n\nimport { withdrawMfa } from '../api/account_management/mfa';\nimport { AuthErrorCode } from '../core/errors';\nimport { _logoutIfInvalidated } from '../core/user/invalidation';\nimport { UserInternal } from '../model/user';\nimport { MultiFactorAssertionImpl } from './mfa_assertion';\nimport { MultiFactorInfoImpl } from './mfa_info';\nimport { MultiFactorSessionImpl } from './mfa_session';\nimport { FirebaseError, getModularInstance } from '@firebase/util';\n\nexport class MultiFactorUserImpl implements MultiFactorUser {\n  enrolledFactors: MultiFactorInfo[] = [];\n\n  private constructor(readonly user: UserInternal) {\n    user._onReload(userInfo => {\n      if (userInfo.mfaInfo) {\n        this.enrolledFactors = userInfo.mfaInfo.map(enrollment =>\n          MultiFactorInfoImpl._fromServerResponse(user.auth, enrollment)\n        );\n      }\n    });\n  }\n\n  static _fromUser(user: UserInternal): MultiFactorUserImpl {\n    return new MultiFactorUserImpl(user);\n  }\n\n  async getSession(): Promise<MultiFactorSession> {\n    return MultiFactorSessionImpl._fromIdtoken(\n      await this.user.getIdToken(),\n      this.user.auth\n    );\n  }\n\n  async enroll(\n    assertionExtern: MultiFactorAssertion,\n    displayName?: string | null\n  ): Promise<void> {\n    const assertion = assertionExtern as MultiFactorAssertionImpl;\n    const session = (await this.getSession()) as MultiFactorSessionImpl;\n    const finalizeMfaResponse = await _logoutIfInvalidated(\n      this.user,\n      assertion._process(this.user.auth, session, displayName)\n    );\n    // New tokens will be issued after enrollment of the new second factors.\n    // They need to be updated on the user.\n    await this.user._updateTokensIfNecessary(finalizeMfaResponse);\n    // The user needs to be reloaded to get the new multi-factor information\n    // from server. USER_RELOADED event will be triggered and `enrolledFactors`\n    // will be updated.\n    return this.user.reload();\n  }\n\n  async unenroll(infoOrUid: MultiFactorInfo | string): Promise<void> {\n    const mfaEnrollmentId =\n      typeof infoOrUid === 'string' ? infoOrUid : infoOrUid.uid;\n    const idToken = await this.user.getIdToken();\n    const idTokenResponse = await _logoutIfInvalidated(\n      this.user,\n      withdrawMfa(this.user.auth, {\n        idToken,\n        mfaEnrollmentId\n      })\n    );\n    // Remove the second factor from the user's list.\n    this.enrolledFactors = this.enrolledFactors.filter(\n      ({ uid }) => uid !== mfaEnrollmentId\n    );\n    // Depending on whether the backend decided to revoke the user's session,\n    // the tokenResponse may be empty. If the tokens were not updated (and they\n    // are now invalid), reloading the user will discover this and invalidate\n    // the user's state accordingly.\n    await this.user._updateTokensIfNecessary(idTokenResponse);\n    try {\n      await this.user.reload();\n    } catch (e) {\n      if (\n        (e as FirebaseError)?.code !== `auth/${AuthErrorCode.TOKEN_EXPIRED}`\n      ) {\n        throw e;\n      }\n    }\n  }\n}\n\nconst multiFactorUserCache = new WeakMap<User, MultiFactorUser>();\n\n/**\n * The {@link MultiFactorUser} corresponding to the user.\n *\n * @remarks\n * This is used to access all multi-factor properties and operations related to the user.\n *\n * @param user - The user.\n *\n * @public\n */\nexport function multiFactor(user: User): MultiFactorUser {\n  const userModular = getModularInstance(user);\n  if (!multiFactorUserCache.has(userModular)) {\n    multiFactorUserCache.set(\n      userModular,\n      MultiFactorUserImpl._fromUser(userModular as UserInternal)\n    );\n  }\n  return multiFactorUserCache.get(userModular)!;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Persistence } from '../../model/public_types';\n\nexport const enum PersistenceType {\n  SESSION = 'SESSION',\n  LOCAL = 'LOCAL',\n  NONE = 'NONE'\n}\n\nexport type PersistedBlob = Record<string, unknown>;\n\nexport interface Instantiator<T> {\n  (blob: PersistedBlob): T;\n}\n\nexport type PersistenceValue = PersistedBlob | string;\n\nexport const STORAGE_AVAILABLE_KEY = '__sak';\n\nexport interface StorageEventListener {\n  (value: PersistenceValue | null): void;\n}\n\nexport interface PersistenceInternal extends Persistence {\n  type: PersistenceType;\n  _isAvailable(): Promise<boolean>;\n  _set(key: string, value: PersistenceValue): Promise<void>;\n  _get<T extends PersistenceValue>(key: string): Promise<T | null>;\n  _remove(key: string): Promise<void>;\n  _addListener(key: string, listener: StorageEventListener): void;\n  _removeListener(key: string, listener: StorageEventListener): void;\n  // Should this persistence allow migration up the chosen hierarchy?\n  _shouldAllowMigration?: boolean;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  PersistenceValue,\n  STORAGE_AVAILABLE_KEY,\n  PersistenceType\n} from '../../core/persistence';\n\n// There are two different browser persistence types: local and session.\n// Both have the same implementation but use a different underlying storage\n// object.\n\nexport abstract class BrowserPersistenceClass {\n  protected constructor(\n    protected readonly storageRetriever: () => Storage,\n    readonly type: PersistenceType\n  ) {}\n\n  _isAvailable(): Promise<boolean> {\n    try {\n      if (!this.storage) {\n        return Promise.resolve(false);\n      }\n      this.storage.setItem(STORAGE_AVAILABLE_KEY, '1');\n      this.storage.removeItem(STORAGE_AVAILABLE_KEY);\n      return Promise.resolve(true);\n    } catch {\n      return Promise.resolve(false);\n    }\n  }\n\n  _set(key: string, value: PersistenceValue): Promise<void> {\n    this.storage.setItem(key, JSON.stringify(value));\n    return Promise.resolve();\n  }\n\n  _get<T extends PersistenceValue>(key: string): Promise<T | null> {\n    const json = this.storage.getItem(key);\n    return Promise.resolve(json ? JSON.parse(json) : null);\n  }\n\n  _remove(key: string): Promise<void> {\n    this.storage.removeItem(key);\n    return Promise.resolve();\n  }\n\n  protected get storage(): Storage {\n    return this.storageRetriever();\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Persistence } from '../../model/public_types';\n\nimport { getUA } from '@firebase/util';\nimport {\n  _isSafari,\n  _isIOS,\n  _isIframe,\n  _isMobileBrowser,\n  _isIE10\n} from '../../core/util/browser';\nimport {\n  PersistenceInternal as InternalPersistence,\n  PersistenceType,\n  PersistenceValue,\n  StorageEventListener\n} from '../../core/persistence';\nimport { BrowserPersistenceClass } from './browser';\n\nfunction _iframeCannotSyncWebStorage(): boolean {\n  const ua = getUA();\n  return _isSafari(ua) || _isIOS(ua);\n}\n\n// The polling period in case events are not supported\nexport const _POLLING_INTERVAL_MS = 1000;\n\n// The IE 10 localStorage cross tab synchronization delay in milliseconds\nconst IE10_LOCAL_STORAGE_SYNC_DELAY = 10;\n\nclass BrowserLocalPersistence\n  extends BrowserPersistenceClass\n  implements InternalPersistence\n{\n  static type: 'LOCAL' = 'LOCAL';\n\n  constructor() {\n    super(() => window.localStorage, PersistenceType.LOCAL);\n  }\n\n  private readonly boundEventHandler = (\n    event: StorageEvent,\n    poll?: boolean\n  ): void => this.onStorageEvent(event, poll);\n  private readonly listeners: Record<string, Set<StorageEventListener>> = {};\n  private readonly localCache: Record<string, string | null> = {};\n  // setTimeout return value is platform specific\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private pollTimer: any | null = null;\n\n  // Safari or iOS browser and embedded in an iframe.\n  private readonly safariLocalStorageNotSynced =\n    _iframeCannotSyncWebStorage() && _isIframe();\n  // Whether to use polling instead of depending on window events\n  private readonly fallbackToPolling = _isMobileBrowser();\n  readonly _shouldAllowMigration = true;\n\n  private forAllChangedKeys(\n    cb: (key: string, oldValue: string | null, newValue: string | null) => void\n  ): void {\n    // Check all keys with listeners on them.\n    for (const key of Object.keys(this.listeners)) {\n      // Get value from localStorage.\n      const newValue = this.storage.getItem(key);\n      const oldValue = this.localCache[key];\n      // If local map value does not match, trigger listener with storage event.\n      // Differentiate this simulated event from the real storage event.\n      if (newValue !== oldValue) {\n        cb(key, oldValue, newValue);\n      }\n    }\n  }\n\n  private onStorageEvent(event: StorageEvent, poll = false): void {\n    // Key would be null in some situations, like when localStorage is cleared\n    if (!event.key) {\n      this.forAllChangedKeys(\n        (key: string, _oldValue: string | null, newValue: string | null) => {\n          this.notifyListeners(key, newValue);\n        }\n      );\n      return;\n    }\n\n    const key = event.key;\n\n    // Check the mechanism how this event was detected.\n    // The first event will dictate the mechanism to be used.\n    if (poll) {\n      // Environment detects storage changes via polling.\n      // Remove storage event listener to prevent possible event duplication.\n      this.detachListener();\n    } else {\n      // Environment detects storage changes via storage event listener.\n      // Remove polling listener to prevent possible event duplication.\n      this.stopPolling();\n    }\n\n    // Safari embedded iframe. Storage event will trigger with the delta\n    // changes but no changes will be applied to the iframe localStorage.\n    if (this.safariLocalStorageNotSynced) {\n      // Get current iframe page value.\n      const storedValue = this.storage.getItem(key);\n      // Value not synchronized, synchronize manually.\n      if (event.newValue !== storedValue) {\n        if (event.newValue !== null) {\n          // Value changed from current value.\n          this.storage.setItem(key, event.newValue);\n        } else {\n          // Current value deleted.\n          this.storage.removeItem(key);\n        }\n      } else if (this.localCache[key] === event.newValue && !poll) {\n        // Already detected and processed, do not trigger listeners again.\n        return;\n      }\n    }\n\n    const triggerListeners = (): void => {\n      // Keep local map up to date in case storage event is triggered before\n      // poll.\n      const storedValue = this.storage.getItem(key);\n      if (!poll && this.localCache[key] === storedValue) {\n        // Real storage event which has already been detected, do nothing.\n        // This seems to trigger in some IE browsers for some reason.\n        return;\n      }\n      this.notifyListeners(key, storedValue);\n    };\n\n    const storedValue = this.storage.getItem(key);\n    if (\n      _isIE10() &&\n      storedValue !== event.newValue &&\n      event.newValue !== event.oldValue\n    ) {\n      // IE 10 has this weird bug where a storage event would trigger with the\n      // correct key, oldValue and newValue but localStorage.getItem(key) does\n      // not yield the updated value until a few milliseconds. This ensures\n      // this recovers from that situation.\n      setTimeout(triggerListeners, IE10_LOCAL_STORAGE_SYNC_DELAY);\n    } else {\n      triggerListeners();\n    }\n  }\n\n  private notifyListeners(key: string, value: string | null): void {\n    this.localCache[key] = value;\n    const listeners = this.listeners[key];\n    if (listeners) {\n      for (const listener of Array.from(listeners)) {\n        listener(value ? JSON.parse(value) : value);\n      }\n    }\n  }\n\n  private startPolling(): void {\n    this.stopPolling();\n\n    this.pollTimer = setInterval(() => {\n      this.forAllChangedKeys(\n        (key: string, oldValue: string | null, newValue: string | null) => {\n          this.onStorageEvent(\n            new StorageEvent('storage', {\n              key,\n              oldValue,\n              newValue\n            }),\n            /* poll */ true\n          );\n        }\n      );\n    }, _POLLING_INTERVAL_MS);\n  }\n\n  private stopPolling(): void {\n    if (this.pollTimer) {\n      clearInterval(this.pollTimer);\n      this.pollTimer = null;\n    }\n  }\n\n  private attachListener(): void {\n    window.addEventListener('storage', this.boundEventHandler);\n  }\n\n  private detachListener(): void {\n    window.removeEventListener('storage', this.boundEventHandler);\n  }\n\n  _addListener(key: string, listener: StorageEventListener): void {\n    if (Object.keys(this.listeners).length === 0) {\n      // Whether browser can detect storage event when it had already been pushed to the background.\n      // This may happen in some mobile browsers. A localStorage change in the foreground window\n      // will not be detected in the background window via the storage event.\n      // This was detected in iOS 7.x mobile browsers\n      if (this.fallbackToPolling) {\n        this.startPolling();\n      } else {\n        this.attachListener();\n      }\n    }\n    if (!this.listeners[key]) {\n      this.listeners[key] = new Set();\n      // Populate the cache to avoid spuriously triggering on first poll.\n      this.localCache[key] = this.storage.getItem(key);\n    }\n    this.listeners[key].add(listener);\n  }\n\n  _removeListener(key: string, listener: StorageEventListener): void {\n    if (this.listeners[key]) {\n      this.listeners[key].delete(listener);\n\n      if (this.listeners[key].size === 0) {\n        delete this.listeners[key];\n      }\n    }\n\n    if (Object.keys(this.listeners).length === 0) {\n      this.detachListener();\n      this.stopPolling();\n    }\n  }\n\n  // Update local cache on base operations:\n\n  async _set(key: string, value: PersistenceValue): Promise<void> {\n    await super._set(key, value);\n    this.localCache[key] = JSON.stringify(value);\n  }\n\n  async _get<T extends PersistenceValue>(key: string): Promise<T | null> {\n    const value = await super._get<T>(key);\n    this.localCache[key] = JSON.stringify(value);\n    return value;\n  }\n\n  async _remove(key: string): Promise<void> {\n    await super._remove(key);\n    delete this.localCache[key];\n  }\n}\n\n/**\n * An implementation of {@link Persistence} of type `LOCAL` using `localStorage`\n * for the underlying storage.\n *\n * @public\n */\nexport const browserLocalPersistence: Persistence = BrowserLocalPersistence;\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { _generateEventId } from '../../core/util/event_id';\nimport {\n  _SenderRequest,\n  _EventType,\n  ReceiverMessageEvent,\n  _MessageError,\n  SenderMessageEvent,\n  _Status,\n  _ReceiverMessageResponse,\n  _ReceiverResponse,\n  _TimeoutDuration\n} from './index';\n\ninterface MessageHandler {\n  messageChannel: MessageChannel;\n  onMessage: EventListenerOrEventListenerObject;\n}\n\n/**\n * Interface for sending messages and waiting for a completion response.\n *\n */\nexport class Sender {\n  private readonly handlers = new Set<MessageHandler>();\n\n  constructor(private readonly target: ServiceWorker) {}\n\n  /**\n   * Unsubscribe the handler and remove it from our tracking Set.\n   *\n   * @param handler - The handler to unsubscribe.\n   */\n  private removeMessageHandler(handler: MessageHandler): void {\n    if (handler.messageChannel) {\n      handler.messageChannel.port1.removeEventListener(\n        'message',\n        handler.onMessage\n      );\n      handler.messageChannel.port1.close();\n    }\n    this.handlers.delete(handler);\n  }\n\n  /**\n   * Send a message to the Receiver located at {@link target}.\n   *\n   * @remarks\n   * We'll first wait a bit for an ACK , if we get one we will wait significantly longer until the\n   * receiver has had a chance to fully process the event.\n   *\n   * @param eventType - Type of event to send.\n   * @param data - The payload of the event.\n   * @param timeout - Timeout for waiting on an ACK from the receiver.\n   *\n   * @returns An array of settled promises from all the handlers that were listening on the receiver.\n   */\n  async _send<T extends _ReceiverResponse, S extends _SenderRequest>(\n    eventType: _EventType,\n    data: S,\n    timeout = _TimeoutDuration.ACK\n  ): Promise<_ReceiverMessageResponse<T>> {\n    const messageChannel =\n      typeof MessageChannel !== 'undefined' ? new MessageChannel() : null;\n    if (!messageChannel) {\n      throw new Error(_MessageError.CONNECTION_UNAVAILABLE);\n    }\n    // Node timers and browser timers return fundamentally different types.\n    // We don't actually care what the value is but TS won't accept unknown and\n    // we can't cast properly in both environments.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    let completionTimer: any;\n    let handler: MessageHandler;\n    return new Promise<_ReceiverMessageResponse<T>>((resolve, reject) => {\n      const eventId = _generateEventId('', 20);\n      messageChannel.port1.start();\n      const ackTimer = setTimeout(() => {\n        reject(new Error(_MessageError.UNSUPPORTED_EVENT));\n      }, timeout);\n      handler = {\n        messageChannel,\n        onMessage(event: Event): void {\n          const messageEvent = event as MessageEvent<ReceiverMessageEvent<T>>;\n          if (messageEvent.data.eventId !== eventId) {\n            return;\n          }\n          switch (messageEvent.data.status) {\n            case _Status.ACK:\n              // The receiver should ACK first.\n              clearTimeout(ackTimer);\n              completionTimer = setTimeout(() => {\n                reject(new Error(_MessageError.TIMEOUT));\n              }, _TimeoutDuration.COMPLETION);\n              break;\n            case _Status.DONE:\n              // Once the receiver's handlers are finished we will get the results.\n              clearTimeout(completionTimer);\n              resolve(messageEvent.data.response);\n              break;\n            default:\n              clearTimeout(ackTimer);\n              clearTimeout(completionTimer);\n              reject(new Error(_MessageError.INVALID_RESPONSE));\n              break;\n          }\n        }\n      };\n      this.handlers.add(handler);\n      messageChannel.port1.addEventListener('message', handler.onMessage);\n      this.target.postMessage(\n        {\n          eventType,\n          eventId,\n          data\n        } as SenderMessageEvent<S>,\n        [messageChannel.port2]\n      );\n    }).finally(() => {\n      if (handler) {\n        this.removeMessageHandler(handler);\n      }\n    });\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Persistence } from '../../model/public_types';\nimport {\n  PersistedBlob,\n  PersistenceInternal as InternalPersistence,\n  PersistenceType,\n  PersistenceValue,\n  StorageEventListener,\n  STORAGE_AVAILABLE_KEY\n} from '../../core/persistence/';\nimport {\n  _EventType,\n  _PingResponse,\n  KeyChangedResponse,\n  KeyChangedRequest,\n  PingRequest,\n  _TimeoutDuration\n} from '../messagechannel/index';\nimport { Receiver } from '../messagechannel/receiver';\nimport { Sender } from '../messagechannel/sender';\nimport {\n  _isWorker,\n  _getActiveServiceWorker,\n  _getServiceWorkerController,\n  _getWorkerGlobalScope\n} from '../util/worker';\n\nexport const DB_NAME = 'firebaseLocalStorageDb';\nconst DB_VERSION = 1;\nconst DB_OBJECTSTORE_NAME = 'firebaseLocalStorage';\nconst DB_DATA_KEYPATH = 'fbase_key';\n\ninterface DBObject {\n  [DB_DATA_KEYPATH]: string;\n  value: PersistedBlob;\n}\n\n/**\n * Promise wrapper for IDBRequest\n *\n * Unfortunately we can't cleanly extend Promise<T> since promises are not callable in ES6\n *\n */\nclass DBPromise<T> {\n  constructor(private readonly request: IDBRequest) {}\n\n  toPromise(): Promise<T> {\n    return new Promise<T>((resolve, reject) => {\n      this.request.addEventListener('success', () => {\n        resolve(this.request.result);\n      });\n      this.request.addEventListener('error', () => {\n        reject(this.request.error);\n      });\n    });\n  }\n}\n\nfunction getObjectStore(db: IDBDatabase, isReadWrite: boolean): IDBObjectStore {\n  return db\n    .transaction([DB_OBJECTSTORE_NAME], isReadWrite ? 'readwrite' : 'readonly')\n    .objectStore(DB_OBJECTSTORE_NAME);\n}\n\nexport async function _clearDatabase(db: IDBDatabase): Promise<void> {\n  const objectStore = getObjectStore(db, true);\n  return new DBPromise<void>(objectStore.clear()).toPromise();\n}\n\nexport function _deleteDatabase(): Promise<void> {\n  const request = indexedDB.deleteDatabase(DB_NAME);\n  return new DBPromise<void>(request).toPromise();\n}\n\nexport function _openDatabase(): Promise<IDBDatabase> {\n  const request = indexedDB.open(DB_NAME, DB_VERSION);\n  return new Promise((resolve, reject) => {\n    request.addEventListener('error', () => {\n      reject(request.error);\n    });\n\n    request.addEventListener('upgradeneeded', () => {\n      const db = request.result;\n\n      try {\n        db.createObjectStore(DB_OBJECTSTORE_NAME, { keyPath: DB_DATA_KEYPATH });\n      } catch (e) {\n        reject(e);\n      }\n    });\n\n    request.addEventListener('success', async () => {\n      const db: IDBDatabase = request.result;\n      // Strange bug that occurs in Firefox when multiple tabs are opened at the\n      // same time. The only way to recover seems to be deleting the database\n      // and re-initializing it.\n      // https://github.com/firebase/firebase-js-sdk/issues/634\n\n      if (!db.objectStoreNames.contains(DB_OBJECTSTORE_NAME)) {\n        // Need to close the database or else you get a `blocked` event\n        db.close();\n        await _deleteDatabase();\n        resolve(await _openDatabase());\n      } else {\n        resolve(db);\n      }\n    });\n  });\n}\n\nexport async function _putObject(\n  db: IDBDatabase,\n  key: string,\n  value: PersistenceValue | string\n): Promise<void> {\n  const request = getObjectStore(db, true).put({\n    [DB_DATA_KEYPATH]: key,\n    value\n  });\n  return new DBPromise<void>(request).toPromise();\n}\n\nasync function getObject(\n  db: IDBDatabase,\n  key: string\n): Promise<PersistedBlob | null> {\n  const request = getObjectStore(db, false).get(key);\n  const data = await new DBPromise<DBObject | undefined>(request).toPromise();\n  return data === undefined ? null : data.value;\n}\n\nexport function _deleteObject(db: IDBDatabase, key: string): Promise<void> {\n  const request = getObjectStore(db, true).delete(key);\n  return new DBPromise<void>(request).toPromise();\n}\n\nexport const _POLLING_INTERVAL_MS = 800;\nexport const _TRANSACTION_RETRY_COUNT = 3;\n\nclass IndexedDBLocalPersistence implements InternalPersistence {\n  static type: 'LOCAL' = 'LOCAL';\n\n  type = PersistenceType.LOCAL;\n  db?: IDBDatabase;\n  readonly _shouldAllowMigration = true;\n\n  private readonly listeners: Record<string, Set<StorageEventListener>> = {};\n  private readonly localCache: Record<string, PersistenceValue | null> = {};\n  // setTimeout return value is platform specific\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private pollTimer: any | null = null;\n  private pendingWrites = 0;\n\n  private receiver: Receiver | null = null;\n  private sender: Sender | null = null;\n  private serviceWorkerReceiverAvailable = false;\n  private activeServiceWorker: ServiceWorker | null = null;\n  // Visible for testing only\n  readonly _workerInitializationPromise: Promise<void>;\n\n  constructor() {\n    // Fire & forget the service worker registration as it may never resolve\n    this._workerInitializationPromise =\n      this.initializeServiceWorkerMessaging().then(\n        () => {},\n        () => {}\n      );\n  }\n\n  async _openDb(): Promise<IDBDatabase> {\n    if (this.db) {\n      return this.db;\n    }\n    this.db = await _openDatabase();\n    return this.db;\n  }\n\n  async _withRetries<T>(op: (db: IDBDatabase) => Promise<T>): Promise<T> {\n    let numAttempts = 0;\n\n    while (true) {\n      try {\n        const db = await this._openDb();\n        return await op(db);\n      } catch (e) {\n        if (numAttempts++ > _TRANSACTION_RETRY_COUNT) {\n          throw e;\n        }\n        if (this.db) {\n          this.db.close();\n          this.db = undefined;\n        }\n        // TODO: consider adding exponential backoff\n      }\n    }\n  }\n\n  /**\n   * IndexedDB events do not propagate from the main window to the worker context.  We rely on a\n   * postMessage interface to send these events to the worker ourselves.\n   */\n  private async initializeServiceWorkerMessaging(): Promise<void> {\n    return _isWorker() ? this.initializeReceiver() : this.initializeSender();\n  }\n\n  /**\n   * As the worker we should listen to events from the main window.\n   */\n  private async initializeReceiver(): Promise<void> {\n    this.receiver = Receiver._getInstance(_getWorkerGlobalScope()!);\n    // Refresh from persistence if we receive a KeyChanged message.\n    this.receiver._subscribe(\n      _EventType.KEY_CHANGED,\n      async (_origin: string, data: KeyChangedRequest) => {\n        const keys = await this._poll();\n        return {\n          keyProcessed: keys.includes(data.key)\n        };\n      }\n    );\n    // Let the sender know that we are listening so they give us more timeout.\n    this.receiver._subscribe(\n      _EventType.PING,\n      async (_origin: string, _data: PingRequest) => {\n        return [_EventType.KEY_CHANGED];\n      }\n    );\n  }\n\n  /**\n   * As the main window, we should let the worker know when keys change (set and remove).\n   *\n   * @remarks\n   * {@link https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerContainer/ready | ServiceWorkerContainer.ready}\n   * may not resolve.\n   */\n  private async initializeSender(): Promise<void> {\n    // Check to see if there's an active service worker.\n    this.activeServiceWorker = await _getActiveServiceWorker();\n    if (!this.activeServiceWorker) {\n      return;\n    }\n    this.sender = new Sender(this.activeServiceWorker);\n    // Ping the service worker to check what events they can handle.\n    const results = await this.sender._send<_PingResponse, PingRequest>(\n      _EventType.PING,\n      {},\n      _TimeoutDuration.LONG_ACK\n    );\n    if (!results) {\n      return;\n    }\n    if (\n      results[0]?.fulfilled &&\n      results[0]?.value.includes(_EventType.KEY_CHANGED)\n    ) {\n      this.serviceWorkerReceiverAvailable = true;\n    }\n  }\n\n  /**\n   * Let the worker know about a changed key, the exact key doesn't technically matter since the\n   * worker will just trigger a full sync anyway.\n   *\n   * @remarks\n   * For now, we only support one service worker per page.\n   *\n   * @param key - Storage key which changed.\n   */\n  private async notifyServiceWorker(key: string): Promise<void> {\n    if (\n      !this.sender ||\n      !this.activeServiceWorker ||\n      _getServiceWorkerController() !== this.activeServiceWorker\n    ) {\n      return;\n    }\n    try {\n      await this.sender._send<KeyChangedResponse, KeyChangedRequest>(\n        _EventType.KEY_CHANGED,\n        { key },\n        // Use long timeout if receiver has previously responded to a ping from us.\n        this.serviceWorkerReceiverAvailable\n          ? _TimeoutDuration.LONG_ACK\n          : _TimeoutDuration.ACK\n      );\n    } catch {\n      // This is a best effort approach. Ignore errors.\n    }\n  }\n\n  async _isAvailable(): Promise<boolean> {\n    try {\n      if (!indexedDB) {\n        return false;\n      }\n      const db = await _openDatabase();\n      await _putObject(db, STORAGE_AVAILABLE_KEY, '1');\n      await _deleteObject(db, STORAGE_AVAILABLE_KEY);\n      return true;\n    } catch {}\n    return false;\n  }\n\n  private async _withPendingWrite(write: () => Promise<void>): Promise<void> {\n    this.pendingWrites++;\n    try {\n      await write();\n    } finally {\n      this.pendingWrites--;\n    }\n  }\n\n  async _set(key: string, value: PersistenceValue): Promise<void> {\n    return this._withPendingWrite(async () => {\n      await this._withRetries((db: IDBDatabase) => _putObject(db, key, value));\n      this.localCache[key] = value;\n      return this.notifyServiceWorker(key);\n    });\n  }\n\n  async _get<T extends PersistenceValue>(key: string): Promise<T | null> {\n    const obj = (await this._withRetries((db: IDBDatabase) =>\n      getObject(db, key)\n    )) as T;\n    this.localCache[key] = obj;\n    return obj;\n  }\n\n  async _remove(key: string): Promise<void> {\n    return this._withPendingWrite(async () => {\n      await this._withRetries((db: IDBDatabase) => _deleteObject(db, key));\n      delete this.localCache[key];\n      return this.notifyServiceWorker(key);\n    });\n  }\n\n  private async _poll(): Promise<string[]> {\n    // TODO: check if we need to fallback if getAll is not supported\n    const result = await this._withRetries((db: IDBDatabase) => {\n      const getAllRequest = getObjectStore(db, false).getAll();\n      return new DBPromise<DBObject[] | null>(getAllRequest).toPromise();\n    });\n\n    if (!result) {\n      return [];\n    }\n\n    // If we have pending writes in progress abort, we'll get picked up on the next poll\n    if (this.pendingWrites !== 0) {\n      return [];\n    }\n\n    const keys = [];\n    const keysInResult = new Set();\n    for (const { fbase_key: key, value } of result) {\n      keysInResult.add(key);\n      if (JSON.stringify(this.localCache[key]) !== JSON.stringify(value)) {\n        this.notifyListeners(key, value as PersistenceValue);\n        keys.push(key);\n      }\n    }\n    for (const localKey of Object.keys(this.localCache)) {\n      if (this.localCache[localKey] && !keysInResult.has(localKey)) {\n        // Deleted\n        this.notifyListeners(localKey, null);\n        keys.push(localKey);\n      }\n    }\n    return keys;\n  }\n\n  private notifyListeners(\n    key: string,\n    newValue: PersistenceValue | null\n  ): void {\n    this.localCache[key] = newValue;\n    const listeners = this.listeners[key];\n    if (listeners) {\n      for (const listener of Array.from(listeners)) {\n        listener(newValue);\n      }\n    }\n  }\n\n  private startPolling(): void {\n    this.stopPolling();\n\n    this.pollTimer = setInterval(\n      async () => this._poll(),\n      _POLLING_INTERVAL_MS\n    );\n  }\n\n  private stopPolling(): void {\n    if (this.pollTimer) {\n      clearInterval(this.pollTimer);\n      this.pollTimer = null;\n    }\n  }\n\n  _addListener(key: string, listener: StorageEventListener): void {\n    if (Object.keys(this.listeners).length === 0) {\n      this.startPolling();\n    }\n    if (!this.listeners[key]) {\n      this.listeners[key] = new Set();\n      // Populate the cache to avoid spuriously triggering on first poll.\n      void this._get(key); // This can happen in the background async and we can return immediately.\n    }\n    this.listeners[key].add(listener);\n  }\n\n  _removeListener(key: string, listener: StorageEventListener): void {\n    if (this.listeners[key]) {\n      this.listeners[key].delete(listener);\n\n      if (this.listeners[key].size === 0) {\n        delete this.listeners[key];\n      }\n    }\n\n    if (Object.keys(this.listeners).length === 0) {\n      this.stopPolling();\n    }\n  }\n}\n\n/**\n * An implementation of {@link Persistence} of type `LOCAL` using `indexedDB`\n * for the underlying storage.\n *\n * @public\n */\nexport const indexedDBLocalPersistence: Persistence = IndexedDBLocalPersistence;\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AuthErrorCode } from '../../core/errors';\nimport { _assert } from '../../core/util/assert';\nimport { AuthInternal } from '../../model/auth';\nimport { RecaptchaParameters } from '../../model/public_types';\nimport { Recaptcha } from './recaptcha';\n\nexport const _SOLVE_TIME_MS = 500;\nexport const _EXPIRATION_TIME_MS = 60_000;\nexport const _WIDGET_ID_START = 1_000_000_000_000;\n\nexport interface Widget {\n  getResponse: () => string | null;\n  delete: () => void;\n  execute: () => void;\n}\n\nexport class MockReCaptcha implements Recaptcha {\n  private counter = _WIDGET_ID_START;\n  _widgets = new Map<number, Widget>();\n\n  constructor(private readonly auth: AuthInternal) {}\n\n  render(\n    container: string | HTMLElement,\n    parameters?: RecaptchaParameters\n  ): number {\n    const id = this.counter;\n    this._widgets.set(\n      id,\n      new MockWidget(container, this.auth.name, parameters || {})\n    );\n    this.counter++;\n    return id;\n  }\n\n  reset(optWidgetId?: number): void {\n    const id = optWidgetId || _WIDGET_ID_START;\n    void this._widgets.get(id)?.delete();\n    this._widgets.delete(id);\n  }\n\n  getResponse(optWidgetId?: number): string {\n    const id = optWidgetId || _WIDGET_ID_START;\n    return this._widgets.get(id)?.getResponse() || '';\n  }\n\n  async execute(optWidgetId?: number | string): Promise<string> {\n    const id: number = (optWidgetId as number) || _WIDGET_ID_START;\n    void this._widgets.get(id)?.execute();\n    return '';\n  }\n}\n\nexport class MockWidget {\n  private readonly container: HTMLElement;\n  private readonly isVisible: boolean;\n  private timerId: number | null = null;\n  private deleted = false;\n  private responseToken: string | null = null;\n  private readonly clickHandler = (): void => {\n    this.execute();\n  };\n\n  constructor(\n    containerOrId: string | HTMLElement,\n    appName: string,\n    private readonly params: RecaptchaParameters\n  ) {\n    const container =\n      typeof containerOrId === 'string'\n        ? document.getElementById(containerOrId)\n        : containerOrId;\n    _assert(container, AuthErrorCode.ARGUMENT_ERROR, { appName });\n\n    this.container = container;\n    this.isVisible = this.params.size !== 'invisible';\n    if (this.isVisible) {\n      this.execute();\n    } else {\n      this.container.addEventListener('click', this.clickHandler);\n    }\n  }\n\n  getResponse(): string | null {\n    this.checkIfDeleted();\n    return this.responseToken;\n  }\n\n  delete(): void {\n    this.checkIfDeleted();\n    this.deleted = true;\n    if (this.timerId) {\n      clearTimeout(this.timerId);\n      this.timerId = null;\n    }\n    this.container.removeEventListener('click', this.clickHandler);\n  }\n\n  execute(): void {\n    this.checkIfDeleted();\n    if (this.timerId) {\n      return;\n    }\n\n    this.timerId = window.setTimeout(() => {\n      this.responseToken = generateRandomAlphaNumericString(50);\n      const { callback, 'expired-callback': expiredCallback } = this.params;\n      if (callback) {\n        try {\n          callback(this.responseToken);\n        } catch (e) {}\n      }\n\n      this.timerId = window.setTimeout(() => {\n        this.timerId = null;\n        this.responseToken = null;\n        if (expiredCallback) {\n          try {\n            expiredCallback();\n          } catch (e) {}\n        }\n\n        if (this.isVisible) {\n          this.execute();\n        }\n      }, _EXPIRATION_TIME_MS);\n    }, _SOLVE_TIME_MS);\n  }\n\n  private checkIfDeleted(): void {\n    if (this.deleted) {\n      throw new Error('reCAPTCHA mock was already deleted!');\n    }\n  }\n}\n\nfunction generateRandomAlphaNumericString(len: number): string {\n  const chars = [];\n  const allowedChars =\n    '1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n  for (let i = 0; i < len; i++) {\n    chars.push(\n      allowedChars.charAt(Math.floor(Math.random() * allowedChars.length))\n    );\n  }\n  return chars.join('');\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { querystring } from '@firebase/util';\n\nimport { AuthErrorCode } from '../../core/errors';\nimport { _assert, _createError } from '../../core/util/assert';\nimport { Delay } from '../../core/util/delay';\nimport { AuthInternal } from '../../model/auth';\nimport { _window } from '../auth_window';\nimport * as jsHelpers from '../load_js';\nimport { Recaptcha } from './recaptcha';\nimport { MockReCaptcha } from './recaptcha_mock';\n\n// ReCaptcha will load using the same callback, so the callback function needs\n// to be kept around\nexport const _JSLOAD_CALLBACK = jsHelpers._generateCallbackName('rcb');\nconst NETWORK_TIMEOUT_DELAY = new Delay(30000, 60000);\nconst RECAPTCHA_BASE = 'https://www.google.com/recaptcha/api.js?';\n\n/**\n * We need to mark this interface as internal explicitly to exclude it in the public typings, because\n * it references AuthInternal which has a circular dependency with UserInternal.\n *\n * @internal\n */\nexport interface ReCaptchaLoader {\n  load(auth: AuthInternal, hl?: string): Promise<Recaptcha>;\n  clearedOneInstance(): void;\n}\n\n/**\n * Loader for the GReCaptcha library. There should only ever be one of this.\n */\nexport class ReCaptchaLoaderImpl implements ReCaptchaLoader {\n  private hostLanguage = '';\n  private counter = 0;\n  /**\n   * Check for `render()` method. `window.grecaptcha` will exist if the Enterprise\n   * version of the ReCAPTCHA script was loaded by someone else (e.g. App Check) but\n   * `window.grecaptcha.render()` will not. Another load will add it.\n   */\n  private readonly librarySeparatelyLoaded = !!_window().grecaptcha?.render;\n\n  load(auth: AuthInternal, hl = ''): Promise<Recaptcha> {\n    _assert(isHostLanguageValid(hl), auth, AuthErrorCode.ARGUMENT_ERROR);\n\n    if (this.shouldResolveImmediately(hl)) {\n      return Promise.resolve(_window().grecaptcha!);\n    }\n    return new Promise<Recaptcha>((resolve, reject) => {\n      const networkTimeout = _window().setTimeout(() => {\n        reject(_createError(auth, AuthErrorCode.NETWORK_REQUEST_FAILED));\n      }, NETWORK_TIMEOUT_DELAY.get());\n\n      _window()[_JSLOAD_CALLBACK] = () => {\n        _window().clearTimeout(networkTimeout);\n        delete _window()[_JSLOAD_CALLBACK];\n\n        const recaptcha = _window().grecaptcha;\n\n        if (!recaptcha) {\n          reject(_createError(auth, AuthErrorCode.INTERNAL_ERROR));\n          return;\n        }\n\n        // Wrap the greptcha render function so that we know if the developer has\n        // called it separately\n        const render = recaptcha.render;\n        recaptcha.render = (container, params) => {\n          const widgetId = render(container, params);\n          this.counter++;\n          return widgetId;\n        };\n\n        this.hostLanguage = hl;\n        resolve(recaptcha);\n      };\n\n      const url = `${RECAPTCHA_BASE}?${querystring({\n        onload: _JSLOAD_CALLBACK,\n        render: 'explicit',\n        hl\n      })}`;\n\n      jsHelpers._loadJS(url).catch(() => {\n        clearTimeout(networkTimeout);\n        reject(_createError(auth, AuthErrorCode.INTERNAL_ERROR));\n      });\n    });\n  }\n\n  clearedOneInstance(): void {\n    this.counter--;\n  }\n\n  private shouldResolveImmediately(hl: string): boolean {\n    // We can resolve immediately if:\n    //   • grecaptcha is already defined AND (\n    //     1. the requested language codes are the same OR\n    //     2. there exists already a ReCaptcha on the page\n    //     3. the library was already loaded by the app\n    // In cases (2) and (3), we _can't_ reload as it would break the recaptchas\n    // that are already in the page\n    return (\n      !!_window().grecaptcha?.render &&\n      (hl === this.hostLanguage ||\n        this.counter > 0 ||\n        this.librarySeparatelyLoaded)\n    );\n  }\n}\n\nfunction isHostLanguageValid(hl: string): boolean {\n  return hl.length <= 6 && /^\\s*[a-zA-Z0-9\\-]*\\s*$/.test(hl);\n}\n\nexport class MockReCaptchaLoaderImpl implements ReCaptchaLoader {\n  async load(auth: AuthInternal): Promise<Recaptcha> {\n    return new MockReCaptcha(auth);\n  }\n\n  clearedOneInstance(): void {}\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Auth, RecaptchaParameters } from '../../model/public_types';\nimport { getRecaptchaParams } from '../../api/authentication/recaptcha';\nimport { _castAuth } from '../../core/auth/auth_impl';\nimport { AuthErrorCode } from '../../core/errors';\nimport { _assert } from '../../core/util/assert';\nimport { _isHttpOrHttps } from '../../core/util/location';\nimport { ApplicationVerifierInternal } from '../../model/application_verifier';\nimport { AuthInternal } from '../../model/auth';\nimport { _window } from '../auth_window';\nimport { _isWorker } from '../util/worker';\nimport { Recaptcha } from './recaptcha';\nimport {\n  MockReCaptchaLoaderImpl,\n  ReCaptchaLoader,\n  ReCaptchaLoaderImpl\n} from './recaptcha_loader';\n\nexport const RECAPTCHA_VERIFIER_TYPE = 'recaptcha';\n\nconst DEFAULT_PARAMS: RecaptchaParameters = {\n  theme: 'light',\n  type: 'image'\n};\n\ntype TokenCallback = (token: string) => void;\n\n/**\n * An {@link https://www.google.com/recaptcha/ | reCAPTCHA}-based application verifier.\n *\n * @public\n */\nexport class RecaptchaVerifier implements ApplicationVerifierInternal {\n  /**\n   * The application verifier type.\n   *\n   * @remarks\n   * For a reCAPTCHA verifier, this is 'recaptcha'.\n   */\n  readonly type = RECAPTCHA_VERIFIER_TYPE;\n  private destroyed = false;\n  private widgetId: number | null = null;\n  private readonly container: HTMLElement;\n  private readonly isInvisible: boolean;\n  private readonly tokenChangeListeners = new Set<TokenCallback>();\n  private renderPromise: Promise<number> | null = null;\n  private readonly auth: AuthInternal;\n\n  /** @internal */\n  readonly _recaptchaLoader: ReCaptchaLoader;\n  private recaptcha: Recaptcha | null = null;\n\n  /**\n   *\n   * @param containerOrId - The reCAPTCHA container parameter.\n   *\n   * @remarks\n   * This has different meaning depending on whether the reCAPTCHA is hidden or visible. For a\n   * visible reCAPTCHA the container must be empty. If a string is used, it has to correspond to\n   * an element ID. The corresponding element must also must be in the DOM at the time of\n   * initialization.\n   *\n   * @param parameters - The optional reCAPTCHA parameters.\n   *\n   * @remarks\n   * Check the reCAPTCHA docs for a comprehensive list. All parameters are accepted except for\n   * the sitekey. Firebase Auth backend provisions a reCAPTCHA for each project and will\n   * configure this upon rendering. For an invisible reCAPTCHA, a size key must have the value\n   * 'invisible'.\n   *\n   * @param authExtern - The corresponding Firebase {@link Auth} instance.\n   */\n  constructor(\n    containerOrId: HTMLElement | string,\n    private readonly parameters: RecaptchaParameters = {\n      ...DEFAULT_PARAMS\n    },\n    authExtern: Auth\n  ) {\n    this.auth = _castAuth(authExtern);\n    this.isInvisible = this.parameters.size === 'invisible';\n    _assert(\n      typeof document !== 'undefined',\n      this.auth,\n      AuthErrorCode.OPERATION_NOT_SUPPORTED\n    );\n    const container =\n      typeof containerOrId === 'string'\n        ? document.getElementById(containerOrId)\n        : containerOrId;\n    _assert(container, this.auth, AuthErrorCode.ARGUMENT_ERROR);\n\n    this.container = container;\n    this.parameters.callback = this.makeTokenCallback(this.parameters.callback);\n\n    this._recaptchaLoader = this.auth.settings.appVerificationDisabledForTesting\n      ? new MockReCaptchaLoaderImpl()\n      : new ReCaptchaLoaderImpl();\n\n    this.validateStartingState();\n    // TODO: Figure out if sdk version is needed\n  }\n\n  /**\n   * Waits for the user to solve the reCAPTCHA and resolves with the reCAPTCHA token.\n   *\n   * @returns A Promise for the reCAPTCHA token.\n   */\n  async verify(): Promise<string> {\n    this.assertNotDestroyed();\n    const id = await this.render();\n    const recaptcha = this.getAssertedRecaptcha();\n\n    const response = recaptcha.getResponse(id);\n    if (response) {\n      return response;\n    }\n\n    return new Promise<string>(resolve => {\n      const tokenChange = (token: string): void => {\n        if (!token) {\n          return; // Ignore token expirations.\n        }\n        this.tokenChangeListeners.delete(tokenChange);\n        resolve(token);\n      };\n\n      this.tokenChangeListeners.add(tokenChange);\n      if (this.isInvisible) {\n        recaptcha.execute(id);\n      }\n    });\n  }\n\n  /**\n   * Renders the reCAPTCHA widget on the page.\n   *\n   * @returns A Promise that resolves with the reCAPTCHA widget ID.\n   */\n  render(): Promise<number> {\n    try {\n      this.assertNotDestroyed();\n    } catch (e) {\n      // This method returns a promise. Since it's not async (we want to return the\n      // _same_ promise if rendering is still occurring), the API surface should\n      // reject with the error rather than just throw\n      return Promise.reject(e);\n    }\n\n    if (this.renderPromise) {\n      return this.renderPromise;\n    }\n\n    this.renderPromise = this.makeRenderPromise().catch(e => {\n      this.renderPromise = null;\n      throw e;\n    });\n\n    return this.renderPromise;\n  }\n\n  /** @internal */\n  _reset(): void {\n    this.assertNotDestroyed();\n    if (this.widgetId !== null) {\n      this.getAssertedRecaptcha().reset(this.widgetId);\n    }\n  }\n\n  /**\n   * Clears the reCAPTCHA widget from the page and destroys the instance.\n   */\n  clear(): void {\n    this.assertNotDestroyed();\n    this.destroyed = true;\n    this._recaptchaLoader.clearedOneInstance();\n    if (!this.isInvisible) {\n      this.container.childNodes.forEach(node => {\n        this.container.removeChild(node);\n      });\n    }\n  }\n\n  private validateStartingState(): void {\n    _assert(!this.parameters.sitekey, this.auth, AuthErrorCode.ARGUMENT_ERROR);\n    _assert(\n      this.isInvisible || !this.container.hasChildNodes(),\n      this.auth,\n      AuthErrorCode.ARGUMENT_ERROR\n    );\n    _assert(\n      typeof document !== 'undefined',\n      this.auth,\n      AuthErrorCode.OPERATION_NOT_SUPPORTED\n    );\n  }\n\n  private makeTokenCallback(\n    existing: TokenCallback | string | undefined\n  ): TokenCallback {\n    return token => {\n      this.tokenChangeListeners.forEach(listener => listener(token));\n      if (typeof existing === 'function') {\n        existing(token);\n      } else if (typeof existing === 'string') {\n        const globalFunc = _window()[existing];\n        if (typeof globalFunc === 'function') {\n          globalFunc(token);\n        }\n      }\n    };\n  }\n\n  private assertNotDestroyed(): void {\n    _assert(!this.destroyed, this.auth, AuthErrorCode.INTERNAL_ERROR);\n  }\n\n  private async makeRenderPromise(): Promise<number> {\n    await this.init();\n    if (!this.widgetId) {\n      let container = this.container;\n      if (!this.isInvisible) {\n        const guaranteedEmpty = document.createElement('div');\n        container.appendChild(guaranteedEmpty);\n        container = guaranteedEmpty;\n      }\n\n      this.widgetId = this.getAssertedRecaptcha().render(\n        container,\n        this.parameters\n      );\n    }\n\n    return this.widgetId;\n  }\n\n  private async init(): Promise<void> {\n    _assert(\n      _isHttpOrHttps() && !_isWorker(),\n      this.auth,\n      AuthErrorCode.INTERNAL_ERROR\n    );\n\n    await domReady();\n    this.recaptcha = await this._recaptchaLoader.load(\n      this.auth,\n      this.auth.languageCode || undefined\n    );\n\n    const siteKey = await getRecaptchaParams(this.auth);\n    _assert(siteKey, this.auth, AuthErrorCode.INTERNAL_ERROR);\n    this.parameters.sitekey = siteKey;\n  }\n\n  private getAssertedRecaptcha(): Recaptcha {\n    _assert(this.recaptcha, this.auth, AuthErrorCode.INTERNAL_ERROR);\n    return this.recaptcha;\n  }\n}\n\nfunction domReady(): Promise<void> {\n  let resolver: (() => void) | null = null;\n  return new Promise<void>(resolve => {\n    if (document.readyState === 'complete') {\n      resolve();\n      return;\n    }\n\n    // Document not ready, wait for load before resolving.\n    // Save resolver, so we can remove listener in case it was externally\n    // cancelled.\n    resolver = () => resolve();\n    window.addEventListener('load', resolver);\n  }).catch(e => {\n    if (resolver) {\n      window.removeEventListener('load', resolver);\n    }\n\n    throw e;\n  });\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ApplicationVerifier,\n  Auth,\n  ConfirmationResult,\n  PhoneInfoOptions,\n  User,\n  UserCredential\n} from '../../model/public_types';\n\nimport { startEnrollPhoneMfa } from '../../api/account_management/mfa';\nimport { startSignInPhoneMfa } from '../../api/authentication/mfa';\nimport { sendPhoneVerificationCode } from '../../api/authentication/sms';\nimport { ApplicationVerifierInternal } from '../../model/application_verifier';\nimport { PhoneAuthCredential } from '../../core/credentials/phone';\nimport { AuthErrorCode } from '../../core/errors';\nimport { _assertLinkedStatus, _link } from '../../core/user/link_unlink';\nimport { _assert } from '../../core/util/assert';\nimport { AuthInternal } from '../../model/auth';\nimport {\n  linkWithCredential,\n  reauthenticateWithCredential,\n  signInWithCredential\n} from '../../core/strategies/credential';\nimport {\n  MultiFactorSessionImpl,\n  MultiFactorSessionType\n} from '../../mfa/mfa_session';\nimport { UserInternal } from '../../model/user';\nimport { RECAPTCHA_VERIFIER_TYPE } from '../recaptcha/recaptcha_verifier';\nimport { _castAuth } from '../../core/auth/auth_impl';\nimport { getModularInstance } from '@firebase/util';\nimport { ProviderId } from '../../model/enums';\n\ninterface OnConfirmationCallback {\n  (credential: PhoneAuthCredential): Promise<UserCredential>;\n}\n\nclass ConfirmationResultImpl implements ConfirmationResult {\n  constructor(\n    readonly verificationId: string,\n    private readonly onConfirmation: OnConfirmationCallback\n  ) {}\n\n  confirm(verificationCode: string): Promise<UserCredential> {\n    const authCredential = PhoneAuthCredential._fromVerification(\n      this.verificationId,\n      verificationCode\n    );\n    return this.onConfirmation(authCredential);\n  }\n}\n\n/**\n * Asynchronously signs in using a phone number.\n *\n * @remarks\n * This method sends a code via SMS to the given\n * phone number, and returns a {@link ConfirmationResult}. After the user\n * provides the code sent to their phone, call {@link ConfirmationResult.confirm}\n * with the code to sign the user in.\n *\n * For abuse prevention, this method also requires a {@link ApplicationVerifier}.\n * This SDK includes a reCAPTCHA-based implementation, {@link RecaptchaVerifier}.\n * This function can work on other platforms that do not support the\n * {@link RecaptchaVerifier} (like React Native), but you need to use a\n * third-party {@link ApplicationVerifier} implementation.\n *\n * @example\n * ```javascript\n * // 'recaptcha-container' is the ID of an element in the DOM.\n * const applicationVerifier = new firebase.auth.RecaptchaVerifier('recaptcha-container');\n * const confirmationResult = await signInWithPhoneNumber(auth, phoneNumber, applicationVerifier);\n * // Obtain a verificationCode from the user.\n * const credential = await confirmationResult.confirm(verificationCode);\n * ```\n *\n * @param auth - The {@link Auth} instance.\n * @param phoneNumber - The user's phone number in E.164 format (e.g. +16505550101).\n * @param appVerifier - The {@link ApplicationVerifier}.\n *\n * @public\n */\nexport async function signInWithPhoneNumber(\n  auth: Auth,\n  phoneNumber: string,\n  appVerifier: ApplicationVerifier\n): Promise<ConfirmationResult> {\n  const authInternal = _castAuth(auth);\n  const verificationId = await _verifyPhoneNumber(\n    authInternal,\n    phoneNumber,\n    getModularInstance(appVerifier as ApplicationVerifierInternal)\n  );\n  return new ConfirmationResultImpl(verificationId, cred =>\n    signInWithCredential(authInternal, cred)\n  );\n}\n\n/**\n * Links the user account with the given phone number.\n *\n * @param user - The user.\n * @param phoneNumber - The user's phone number in E.164 format (e.g. +16505550101).\n * @param appVerifier - The {@link ApplicationVerifier}.\n *\n * @public\n */\nexport async function linkWithPhoneNumber(\n  user: User,\n  phoneNumber: string,\n  appVerifier: ApplicationVerifier\n): Promise<ConfirmationResult> {\n  const userInternal = getModularInstance(user) as UserInternal;\n  await _assertLinkedStatus(false, userInternal, ProviderId.PHONE);\n  const verificationId = await _verifyPhoneNumber(\n    userInternal.auth,\n    phoneNumber,\n    getModularInstance(appVerifier as ApplicationVerifierInternal)\n  );\n  return new ConfirmationResultImpl(verificationId, cred =>\n    linkWithCredential(userInternal, cred)\n  );\n}\n\n/**\n * Re-authenticates a user using a fresh phone credential.\n *\n * @remarks Use before operations such as {@link updatePassword} that require tokens from recent sign-in attempts.\n *\n * @param user - The user.\n * @param phoneNumber - The user's phone number in E.164 format (e.g. +16505550101).\n * @param appVerifier - The {@link ApplicationVerifier}.\n *\n * @public\n */\nexport async function reauthenticateWithPhoneNumber(\n  user: User,\n  phoneNumber: string,\n  appVerifier: ApplicationVerifier\n): Promise<ConfirmationResult> {\n  const userInternal = getModularInstance(user) as UserInternal;\n  const verificationId = await _verifyPhoneNumber(\n    userInternal.auth,\n    phoneNumber,\n    getModularInstance(appVerifier as ApplicationVerifierInternal)\n  );\n  return new ConfirmationResultImpl(verificationId, cred =>\n    reauthenticateWithCredential(userInternal, cred)\n  );\n}\n\n/**\n * Returns a verification ID to be used in conjunction with the SMS code that is sent.\n *\n */\nexport async function _verifyPhoneNumber(\n  auth: AuthInternal,\n  options: PhoneInfoOptions | string,\n  verifier: ApplicationVerifierInternal\n): Promise<string> {\n  const recaptchaToken = await verifier.verify();\n\n  try {\n    _assert(\n      typeof recaptchaToken === 'string',\n      auth,\n      AuthErrorCode.ARGUMENT_ERROR\n    );\n    _assert(\n      verifier.type === RECAPTCHA_VERIFIER_TYPE,\n      auth,\n      AuthErrorCode.ARGUMENT_ERROR\n    );\n\n    let phoneInfoOptions: PhoneInfoOptions;\n\n    if (typeof options === 'string') {\n      phoneInfoOptions = {\n        phoneNumber: options\n      };\n    } else {\n      phoneInfoOptions = options;\n    }\n\n    if ('session' in phoneInfoOptions) {\n      const session = phoneInfoOptions.session as MultiFactorSessionImpl;\n\n      if ('phoneNumber' in phoneInfoOptions) {\n        _assert(\n          session.type === MultiFactorSessionType.ENROLL,\n          auth,\n          AuthErrorCode.INTERNAL_ERROR\n        );\n        const response = await startEnrollPhoneMfa(auth, {\n          idToken: session.credential,\n          phoneEnrollmentInfo: {\n            phoneNumber: phoneInfoOptions.phoneNumber,\n            recaptchaToken\n          }\n        });\n        return response.phoneSessionInfo.sessionInfo;\n      } else {\n        _assert(\n          session.type === MultiFactorSessionType.SIGN_IN,\n          auth,\n          AuthErrorCode.INTERNAL_ERROR\n        );\n        const mfaEnrollmentId =\n          phoneInfoOptions.multiFactorHint?.uid ||\n          phoneInfoOptions.multiFactorUid;\n        _assert(mfaEnrollmentId, auth, AuthErrorCode.MISSING_MFA_INFO);\n        const response = await startSignInPhoneMfa(auth, {\n          mfaPendingCredential: session.credential,\n          mfaEnrollmentId,\n          phoneSignInInfo: {\n            recaptchaToken\n          }\n        });\n        return response.phoneResponseInfo.sessionInfo;\n      }\n    } else {\n      const { sessionInfo } = await sendPhoneVerificationCode(auth, {\n        phoneNumber: phoneInfoOptions.phoneNumber,\n        recaptchaToken\n      });\n      return sessionInfo;\n    }\n  } finally {\n    verifier._reset();\n  }\n}\n\n/**\n * Updates the user's phone number.\n *\n * @example\n * ```\n * // 'recaptcha-container' is the ID of an element in the DOM.\n * const applicationVerifier = new RecaptchaVerifier('recaptcha-container');\n * const provider = new PhoneAuthProvider(auth);\n * const verificationId = await provider.verifyPhoneNumber('+16505550101', applicationVerifier);\n * // Obtain the verificationCode from the user.\n * const phoneCredential = PhoneAuthProvider.credential(verificationId, verificationCode);\n * await updatePhoneNumber(user, phoneCredential);\n * ```\n *\n * @param user - The user.\n * @param credential - A credential authenticating the new phone number.\n *\n * @public\n */\nexport async function updatePhoneNumber(\n  user: User,\n  credential: PhoneAuthCredential\n): Promise<void> {\n  await _link(getModularInstance(user) as UserInternal, credential);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Auth,\n  PhoneInfoOptions,\n  ApplicationVerifier,\n  UserCredential\n} from '../../model/public_types';\n\nimport { SignInWithPhoneNumberResponse } from '../../api/authentication/sms';\nimport { ApplicationVerifierInternal as ApplicationVerifierInternal } from '../../model/application_verifier';\nimport { AuthInternal as AuthInternal } from '../../model/auth';\nimport { UserCredentialInternal as UserCredentialInternal } from '../../model/user';\nimport { PhoneAuthCredential } from '../../core/credentials/phone';\nimport { _verifyPhoneNumber } from '../strategies/phone';\nimport { _castAuth } from '../../core/auth/auth_impl';\nimport { AuthCredential } from '../../core';\nimport { FirebaseError, getModularInstance } from '@firebase/util';\nimport { TaggedWithTokenResponse } from '../../model/id_token';\nimport { ProviderId, SignInMethod } from '../../model/enums';\n\n/**\n * Provider for generating an {@link PhoneAuthCredential}.\n *\n * @example\n * ```javascript\n * // 'recaptcha-container' is the ID of an element in the DOM.\n * const applicationVerifier = new RecaptchaVerifier('recaptcha-container');\n * const provider = new PhoneAuthProvider(auth);\n * const verificationId = await provider.verifyPhoneNumber('+16505550101', applicationVerifier);\n * // Obtain the verificationCode from the user.\n * const phoneCredential = PhoneAuthProvider.credential(verificationId, verificationCode);\n * const userCredential = await signInWithCredential(auth, phoneCredential);\n * ```\n *\n * @public\n */\nexport class PhoneAuthProvider {\n  /** Always set to {@link ProviderId}.PHONE. */\n  static readonly PROVIDER_ID: 'phone' = ProviderId.PHONE;\n  /** Always set to {@link SignInMethod}.PHONE. */\n  static readonly PHONE_SIGN_IN_METHOD: 'phone' = SignInMethod.PHONE;\n\n  /** Always set to {@link ProviderId}.PHONE. */\n  readonly providerId = PhoneAuthProvider.PROVIDER_ID;\n  private readonly auth: AuthInternal;\n\n  /**\n   * @param auth - The Firebase {@link Auth} instance in which sign-ins should occur.\n   *\n   */\n  constructor(auth: Auth) {\n    this.auth = _castAuth(auth);\n  }\n\n  /**\n   *\n   * Starts a phone number authentication flow by sending a verification code to the given phone\n   * number.\n   *\n   * @example\n   * ```javascript\n   * const provider = new PhoneAuthProvider(auth);\n   * const verificationId = await provider.verifyPhoneNumber(phoneNumber, applicationVerifier);\n   * // Obtain verificationCode from the user.\n   * const authCredential = PhoneAuthProvider.credential(verificationId, verificationCode);\n   * const userCredential = await signInWithCredential(auth, authCredential);\n   * ```\n   *\n   * @example\n   * An alternative flow is provided using the `signInWithPhoneNumber` method.\n   * ```javascript\n   * const confirmationResult = signInWithPhoneNumber(auth, phoneNumber, applicationVerifier);\n   * // Obtain verificationCode from the user.\n   * const userCredential = confirmationResult.confirm(verificationCode);\n   * ```\n   *\n   * @param phoneInfoOptions - The user's {@link PhoneInfoOptions}. The phone number should be in\n   * E.164 format (e.g. +16505550101).\n   * @param applicationVerifier - For abuse prevention, this method also requires a\n   * {@link ApplicationVerifier}. This SDK includes a reCAPTCHA-based implementation,\n   * {@link RecaptchaVerifier}.\n   *\n   * @returns A Promise for a verification ID that can be passed to\n   * {@link PhoneAuthProvider.credential} to identify this flow..\n   */\n  verifyPhoneNumber(\n    phoneOptions: PhoneInfoOptions | string,\n    applicationVerifier: ApplicationVerifier\n  ): Promise<string> {\n    return _verifyPhoneNumber(\n      this.auth,\n      phoneOptions,\n      getModularInstance(applicationVerifier as ApplicationVerifierInternal)\n    );\n  }\n\n  /**\n   * Creates a phone auth credential, given the verification ID from\n   * {@link PhoneAuthProvider.verifyPhoneNumber} and the code that was sent to the user's\n   * mobile device.\n   *\n   * @example\n   * ```javascript\n   * const provider = new PhoneAuthProvider(auth);\n   * const verificationId = provider.verifyPhoneNumber(phoneNumber, applicationVerifier);\n   * // Obtain verificationCode from the user.\n   * const authCredential = PhoneAuthProvider.credential(verificationId, verificationCode);\n   * const userCredential = signInWithCredential(auth, authCredential);\n   * ```\n   *\n   * @example\n   * An alternative flow is provided using the `signInWithPhoneNumber` method.\n   * ```javascript\n   * const confirmationResult = await signInWithPhoneNumber(auth, phoneNumber, applicationVerifier);\n   * // Obtain verificationCode from the user.\n   * const userCredential = await confirmationResult.confirm(verificationCode);\n   * ```\n   *\n   * @param verificationId - The verification ID returned from {@link PhoneAuthProvider.verifyPhoneNumber}.\n   * @param verificationCode - The verification code sent to the user's mobile device.\n   *\n   * @returns The auth provider credential.\n   */\n  static credential(\n    verificationId: string,\n    verificationCode: string\n  ): PhoneAuthCredential {\n    return PhoneAuthCredential._fromVerification(\n      verificationId,\n      verificationCode\n    );\n  }\n\n  /**\n   * Generates an {@link AuthCredential} from a {@link UserCredential}.\n   * @param userCredential - The user credential.\n   */\n  static credentialFromResult(\n    userCredential: UserCredential\n  ): AuthCredential | null {\n    const credential = userCredential as UserCredentialInternal;\n    return PhoneAuthProvider.credentialFromTaggedObject(credential);\n  }\n\n  /**\n   * Returns an {@link AuthCredential} when passed an error.\n   *\n   * @remarks\n   *\n   * This method works for errors like\n   * `auth/account-exists-with-different-credentials`. This is useful for\n   * recovering when attempting to set a user's phone number but the number\n   * in question is already tied to another account. For example, the following\n   * code tries to update the current user's phone number, and if that\n   * fails, links the user with the account associated with that number:\n   *\n   * ```js\n   * const provider = new PhoneAuthProvider(auth);\n   * const verificationId = await provider.verifyPhoneNumber(number, verifier);\n   * try {\n   *   const code = ''; // Prompt the user for the verification code\n   *   await updatePhoneNumber(\n   *       auth.currentUser,\n   *       PhoneAuthProvider.credential(verificationId, code));\n   * } catch (e) {\n   *   if ((e as FirebaseError)?.code === 'auth/account-exists-with-different-credential') {\n   *     const cred = PhoneAuthProvider.credentialFromError(e);\n   *     await linkWithCredential(auth.currentUser, cred);\n   *   }\n   * }\n   *\n   * // At this point, auth.currentUser.phoneNumber === number.\n   * ```\n   *\n   * @param error - The error to generate a credential from.\n   */\n  static credentialFromError(error: FirebaseError): AuthCredential | null {\n    return PhoneAuthProvider.credentialFromTaggedObject(\n      (error.customData || {}) as TaggedWithTokenResponse\n    );\n  }\n\n  private static credentialFromTaggedObject({\n    _tokenResponse: tokenResponse\n  }: TaggedWithTokenResponse): AuthCredential | null {\n    if (!tokenResponse) {\n      return null;\n    }\n    const { phoneNumber, temporaryProof } =\n      tokenResponse as SignInWithPhoneNumberResponse;\n    if (phoneNumber && temporaryProof) {\n      return PhoneAuthCredential._fromTokenResponse(\n        phoneNumber,\n        temporaryProof\n      );\n    }\n    return null;\n  }\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PopupRedirectResolver } from '../../model/public_types';\nimport { AuthInternal } from '../../model/auth';\nimport { PopupRedirectResolverInternal } from '../../model/popup_redirect';\nimport { AuthErrorCode } from '../errors';\nimport { _assert } from './assert';\nimport { _getInstance } from './instantiator';\n\n/**\n * Chooses a popup/redirect resolver to use. This prefers the override (which\n * is directly passed in), and falls back to the property set on the auth\n * object. If neither are available, this function errors w/ an argument error.\n */\nexport function _withDefaultResolver(\n  auth: AuthInternal,\n  resolverOverride: PopupRedirectResolver | undefined\n): PopupRedirectResolverInternal {\n  if (resolverOverride) {\n    return _getInstance(resolverOverride);\n  }\n\n  _assert(auth._popupRedirectResolver, auth, AuthErrorCode.ARGUMENT_ERROR);\n\n  return auth._popupRedirectResolver;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  signInWithIdp,\n  SignInWithIdpRequest\n} from '../../api/authentication/idp';\nimport { PhoneOrOauthTokenResponse } from '../../api/authentication/mfa';\nimport { AuthInternal } from '../../model/auth';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { UserInternal, UserCredentialInternal } from '../../model/user';\nimport { AuthCredential } from '../credentials';\nimport { _link as _linkUser } from '../user/link_unlink';\nimport { _reauthenticate } from '../user/reauthenticate';\nimport { _assert } from '../util/assert';\nimport { _signInWithCredential } from './credential';\nimport { AuthErrorCode } from '../errors';\nimport { ProviderId } from '../../model/enums';\n\nexport interface IdpTaskParams {\n  auth: AuthInternal;\n  requestUri: string;\n  sessionId?: string;\n  tenantId?: string;\n  postBody?: string;\n  pendingToken?: string;\n  user?: UserInternal;\n  bypassAuthState?: boolean;\n}\n\nexport type IdpTask = (\n  params: IdpTaskParams\n) => Promise<UserCredentialInternal>;\n\nclass IdpCredential extends AuthCredential {\n  constructor(readonly params: IdpTaskParams) {\n    super(ProviderId.CUSTOM, ProviderId.CUSTOM);\n  }\n\n  _getIdTokenResponse(auth: AuthInternal): Promise<PhoneOrOauthTokenResponse> {\n    return signInWithIdp(auth, this._buildIdpRequest());\n  }\n\n  _linkToIdToken(\n    auth: AuthInternal,\n    idToken: string\n  ): Promise<IdTokenResponse> {\n    return signInWithIdp(auth, this._buildIdpRequest(idToken));\n  }\n\n  _getReauthenticationResolver(auth: AuthInternal): Promise<IdTokenResponse> {\n    return signInWithIdp(auth, this._buildIdpRequest());\n  }\n\n  private _buildIdpRequest(idToken?: string): SignInWithIdpRequest {\n    const request: SignInWithIdpRequest = {\n      requestUri: this.params.requestUri,\n      sessionId: this.params.sessionId,\n      postBody: this.params.postBody,\n      tenantId: this.params.tenantId,\n      pendingToken: this.params.pendingToken,\n      returnSecureToken: true,\n      returnIdpCredential: true\n    };\n\n    if (idToken) {\n      request.idToken = idToken;\n    }\n\n    return request;\n  }\n}\n\nexport function _signIn(\n  params: IdpTaskParams\n): Promise<UserCredentialInternal> {\n  return _signInWithCredential(\n    params.auth,\n    new IdpCredential(params),\n    params.bypassAuthState\n  ) as Promise<UserCredentialInternal>;\n}\n\nexport function _reauth(\n  params: IdpTaskParams\n): Promise<UserCredentialInternal> {\n  const { auth, user } = params;\n  _assert(user, auth, AuthErrorCode.INTERNAL_ERROR);\n  return _reauthenticate(\n    user,\n    new IdpCredential(params),\n    params.bypassAuthState\n  );\n}\n\nexport async function _link(\n  params: IdpTaskParams\n): Promise<UserCredentialInternal> {\n  const { auth, user } = params;\n  _assert(user, auth, AuthErrorCode.INTERNAL_ERROR);\n  return _linkUser(user, new IdpCredential(params), params.bypassAuthState);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ActionCodeOperation, Auth } from '../../model/public_types';\n\nimport {\n  Endpoint,\n  HttpMethod,\n  _addTidIfNecessary,\n  _performApiRequest\n} from '../index';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { MfaEnrollment } from './mfa';\n\nexport interface ResetPasswordRequest {\n  oobCode: string;\n  newPassword?: string;\n  tenantId?: string;\n}\n\nexport interface ResetPasswordResponse {\n  email: string;\n  newEmail?: string;\n  requestType?: ActionCodeOperation;\n  mfaInfo?: MfaEnrollment;\n}\n\nexport async function resetPassword(\n  auth: Auth,\n  request: ResetPasswordRequest\n): Promise<ResetPasswordResponse> {\n  return _performApiRequest<ResetPasswordRequest, ResetPasswordResponse>(\n    auth,\n    HttpMethod.POST,\n    Endpoint.RESET_PASSWORD,\n    _addTidIfNecessary(auth, request)\n  );\n}\nexport interface UpdateEmailPasswordRequest {\n  idToken: string;\n  returnSecureToken?: boolean;\n  email?: string;\n  password?: string;\n}\n\nexport interface UpdateEmailPasswordResponse extends IdTokenResponse {}\n\nexport async function updateEmailPassword(\n  auth: Auth,\n  request: UpdateEmailPasswordRequest\n): Promise<UpdateEmailPasswordResponse> {\n  return _performApiRequest<\n    UpdateEmailPasswordRequest,\n    UpdateEmailPasswordResponse\n  >(auth, HttpMethod.POST, Endpoint.SET_ACCOUNT_INFO, request);\n}\n\nexport interface ApplyActionCodeRequest {\n  oobCode: string;\n  tenantId?: string;\n}\n\nexport interface ApplyActionCodeResponse {}\n\nexport async function applyActionCode(\n  auth: Auth,\n  request: ApplyActionCodeRequest\n): Promise<ApplyActionCodeResponse> {\n  return _performApiRequest<ApplyActionCodeRequest, ApplyActionCodeResponse>(\n    auth,\n    HttpMethod.POST,\n    Endpoint.SET_ACCOUNT_INFO,\n    _addTidIfNecessary(auth, request)\n  );\n}\n","// Import the functions you need from the SDKs you need\n\"use strict\";\nimport { initializeApp } from \"firebase/app\";\nimport {\n  getFirestore,\n  collection,\n  getDocs,\n  addDoc,\n} from \"firebase/firestore/lite\";\n\nimport { isAdmin } from \"./addinfo\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAFJEYkyjLPKiINvDPPHnVXHJT5q1mWo7A\",\n  authDomain: \"urkstrong-5d465.firebaseapp.com\",\n  databaseURL: \"https://urkstrong-5d465-default-rtdb.firebaseio.com\",\n  projectId: \"urkstrong-5d465\",\n  storageBucket: \"urkstrong-5d465.appspot.com\",\n  messagingSenderId: \"422349636540\",\n  appId: \"1:422349636540:web:6e20659c8e292b95a361b9\",\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst db = getFirestore(app);\n\nconst auth = getAuth(app);\nimport { getAuth, signInWithPopup, GithubAuthProvider } from \"firebase/auth\";\n\nconst provider = new GithubAuthProvider();\n\ndocument.querySelector(\".loginJS\").addEventListener(\"click\", signIn);\nfunction signIn() {\n  signInWithPopup(auth, provider)\n    .then((result) => {\n      // This gives you a GitHub Access Token. You can use it to access the GitHub API.\n      const credential = GithubAuthProvider.credentialFromResult(result);\n      const token = credential.accessToken;\n\n      // The signed-in user info.\n      const user = result.user;\n      // ...\n      console.log(token);\n      console.log(credential);\n      console.log(user.uid);\n\n      if (user.uid === \"KcXUsbUEOMMsDuD5LsyEDy2Sdk73\") {\n        alert(\"admin hello\");\n        let isAdmin = true;\n        console.log(isAdmin);\n\n        //____________________________________________________________________//\n\n        const form = document.forms.inputJS;\n\n        form.addEventListener(\"submit\", (event) => {\n          event.preventDefault();\n          if (isAdmin) {\n            const indexOblast = event.currentTarget.chooseoblast.selectedIndex;\n            console.log(indexOblast);\n            console.log(event.currentTarget);\n\n            try {\n              const docRef = addDoc(collection(db, \"users\"), {\n                first: \"Alan\",\n                middle: \"Mathison\",\n                last: \"Turing\",\n                born: 1912,\n              });\n\n              console.log(\"Document written with ID: \", docRef.id);\n            } catch (e) {\n              console.error(\"Error adding document: \", e);\n            }\n          } else {\n            console.log(\"not admin\");\n          }\n        });\n      }\n    })\n    .catch((error) => {\n      // Handle Errors here.\n      const errorCode = error.code;\n      const errorMessage = error.message;\n      // The email of the user's account used.\n      const email = error.customData.email;\n      // The AuthCredential type that was used.\n      const credential = GithubAuthProvider.credentialFromError(error);\n      // ...\n    });\n}\n\nasync function getCities(db) {\n  const citiesCol = collection(db, \"cities\");\n  const citySnapshot = await getDocs(citiesCol);\n  const cityList = citySnapshot.docs.map((doc) => doc.data());\n  return cityList;\n}\n\nasync function postData(db) {\n  try {\n    const docRef = await addDoc(collection(db, \"users\"), {\n      first: \"Ada\",\n      last: \"Lovelace\",\n      born: 1815,\n    });\n    console.log(\"Document written with ID: \", docRef.id);\n  } catch (e) {\n    console.error(\"Error adding document: \", e);\n  }\n}\n\nfunction onSignIn(googleUser) {\n  var profile = googleUser.getBasicProfile();\n  console.log(\"ID: \" + profile.getId()); // Do not send to your backend! Use an ID token instead.\n  console.log(\"Name: \" + profile.getName());\n  console.log(\"Image URL: \" + profile.getImageUrl());\n  console.log(\"Email: \" + profile.getEmail()); // This is null if the 'email' scope is not present.\n}\n\nfunction signOut() {\n  var auth2 = gapi.auth2.getAuthInstance();\n  auth2.signOut().then(function () {\n    console.log(\"User signed out.\");\n  });\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Unsubscribe } from '@firebase/util';\nimport { FirebaseAuthInternal } from '@firebase/auth-interop-types';\n\nimport { AuthInternal } from '../../model/auth';\nimport { UserInternal } from '../../model/user';\nimport { _assert } from '../util/assert';\nimport { AuthErrorCode } from '../errors';\n\ninterface TokenListener {\n  (tok: string | null): unknown;\n}\n\nexport class AuthInterop implements FirebaseAuthInternal {\n  private readonly internalListeners: Map<TokenListener, Unsubscribe> =\n    new Map();\n\n  constructor(private readonly auth: AuthInternal) {}\n\n  getUid(): string | null {\n    this.assertAuthConfigured();\n    return this.auth.currentUser?.uid || null;\n  }\n\n  async getToken(\n    forceRefresh?: boolean\n  ): Promise<{ accessToken: string } | null> {\n    this.assertAuthConfigured();\n    await this.auth._initializationPromise;\n    if (!this.auth.currentUser) {\n      return null;\n    }\n\n    const accessToken = await this.auth.currentUser.getIdToken(forceRefresh);\n    return { accessToken };\n  }\n\n  addAuthTokenListener(listener: TokenListener): void {\n    this.assertAuthConfigured();\n    if (this.internalListeners.has(listener)) {\n      return;\n    }\n\n    const unsubscribe = this.auth.onIdTokenChanged(user => {\n      listener(\n        (user as UserInternal | null)?.stsTokenManager.accessToken || null\n      );\n    });\n    this.internalListeners.set(listener, unsubscribe);\n    this.updateProactiveRefresh();\n  }\n\n  removeAuthTokenListener(listener: TokenListener): void {\n    this.assertAuthConfigured();\n    const unsubscribe = this.internalListeners.get(listener);\n    if (!unsubscribe) {\n      return;\n    }\n\n    this.internalListeners.delete(listener);\n    unsubscribe();\n    this.updateProactiveRefresh();\n  }\n\n  private assertAuthConfigured(): void {\n    _assert(\n      this.auth._initializationPromise,\n      AuthErrorCode.DEPENDENT_SDK_INIT_BEFORE_AUTH\n    );\n  }\n\n  private updateProactiveRefresh(): void {\n    if (this.internalListeners.size > 0) {\n      this.auth._startProactiveRefresh();\n    } else {\n      this.auth._stopProactiveRefresh();\n    }\n  }\n}\n","export const allItems = {\n  0: {\n    1: `41кг речей`,\n    2: `1300 касок`,\n    3: `40 автівок`,\n    4: `5 танків`,\n  },\n  1: {\n    1: `42кг речей`,\n    2: `1300 касок`,\n    3: `40 автівок`,\n    4: `5 танків`,\n  },\n  2: {\n    1: `43кг речей`,\n    2: `1300 касок`,\n    3: `40 автівок`,\n    4: `5 танків`,\n  },\n  3: {\n    1: `44кг речей`,\n    2: `1300 касок`,\n    3: `40 автівок`,\n    4: `5 танків`,\n  },\n  4: {\n    1: `45кг речей`,\n    2: `1300 касок`,\n    3: `40 автівок`,\n    4: `5 танків`,\n  },\n  5: {\n    1: `46кг речей`,\n    2: `1300 касок`,\n    3: `40 автівок`,\n    4: `5 танків`,\n  },\n  6: {\n    1: `47кг речей`,\n    2: `1300 касок`,\n    3: `40 автівок`,\n    4: `5 танків`,\n  },\n  7: {\n    1: `48кг речей`,\n    2: `1300 касок`,\n    3: `40 автівок`,\n    4: `5 танків`,\n  },\n  8: {\n    1: `49кг речей`,\n    2: `1300 касок`,\n    3: `40 автівок`,\n    4: `5 танків`,\n  },\n  9: {\n    1: `50кг речей`,\n    2: `1300 касок`,\n    3: `40 автівок`,\n    4: `5 танків`,\n  },\n  10: {\n    1: `51кг речей`,\n    2: `1300 касок`,\n    3: `40 автівок`,\n    4: `5 танків`,\n  },\n  11: {\n    1: `50кг речей`,\n    2: `1300 касок`,\n    3: `40 автівок`,\n    4: `5 танків`,\n  },\n  12: {\n    1: `53кг речей`,\n    2: `1300 касок`,\n    3: `40 автівок`,\n    4: `5 танків`,\n  },\n  13: {\n    1: `54кг речей`,\n    2: `1300 касок`,\n    3: `40 автівок`,\n    4: `5 танків`,\n  },\n  14: {\n    1: `55кг речей`,\n    2: `1300 касок`,\n    3: `40 автівок`,\n    4: `5 танків`,\n  },\n  15: {\n    1: `56кг речей`,\n    2: `1300 касок`,\n    3: `40 автівок`,\n    4: `5 танків`,\n  },\n  16: {\n    1: `57кг речей`,\n    2: `1300 касок`,\n    3: `40 автівок`,\n    4: `5 танків`,\n  },\n  17: {\n    1: `58кг речей`,\n    2: `1300 касок`,\n    3: `40 автівок`,\n    4: `5 танків`,\n  },\n  18: {\n    1: `59кг речей`,\n    2: `1300 касок`,\n    3: `40 автівок`,\n    4: `5 танків`,\n  },\n  19: {\n    1: `60кг речей`,\n    2: `1300 касок`,\n    3: `40 автівок`,\n    4: `5 танків`,\n  },\n  20: {\n    1: `61кг речей`,\n    2: `1300 касок`,\n    3: `40 автівок`,\n    4: `5 танків`,\n  },\n  21: {\n    1: `62кг речей`,\n    2: `1300 касок`,\n    3: `40 автівок`,\n    4: `5 танків`,\n  },\n  22: {\n    1: `63кг речей`,\n    2: `1300 касок`,\n    3: `40 автівок`,\n    4: `5 танків`,\n  },\n  23: {\n    1: `64кг речей`,\n    2: `1300 касок`,\n    3: `40 автівок`,\n    4: `5 танків`,\n  },\n  24: {\n    1: `65кг речей`,\n    2: `1300 касок`,\n    3: `40 автівок`,\n    4: `5 танків`,\n  },\n};\n\nexport const detailed = {\n  0: {\n    0: [`120 000`, `на потреби зсу`, `фонд “еремiя” вул. городецького 23`],\n    1: [`20`, `автівок`, `фонд “еремiя” вул. городецького 23`],\n    2: [`3000`, `кг продуктів`, `фонд “еремiя” вул. городецького 23`],\n    3: [`180 000`, `на потреби зсу`, `фонд “еремiя” вул. городецького 23`],\n    4: [`120 000`, `на потреби зсу`, `фонд “еремiя” вул. городецького 23`],\n    5: [`3000`, `кг продуктів`, `фонд “еремiя” вул. городецького 23`],\n  },\n  1: {\n    0: [`120 001`, `на потреби зсу`, `фонд “еремiя” вул. городецького 23`],\n    1: [`20`, `автівок`, `фонд “еремiя” вул. городецького 23`],\n    2: [`3000`, `кг продуктів`, `фонд “еремiя” вул. городецького 23`],\n    3: [`180 000`, `на потреби зсу`, `фонд “еремiя” вул. городецького 23`],\n    4: [`120 000`, `на потреби зсу`, `фонд “еремiя” вул. городецького 23`],\n    5: [`3000`, `кг продуктів`, `фонд “еремiя” вул. городецького 23`],\n  },\n  2: {\n    0: [`120 002`, `на потреби зсу`, `фонд “еремiя” вул. городецького 23`],\n    1: [`20`, `автівок`, `фонд “еремiя” вул. городецького 23`],\n    2: [`3000`, `кг продуктів`, `фонд “еремiя” вул. городецького 23`],\n    3: [`180 000`, `на потреби зсу`, `фонд “еремiя” вул. городецького 23`],\n    4: [`120 000`, `на потреби зсу`, `фонд “еремiя” вул. городецького 23`],\n    5: [`3000`, `кг продуктів`, `фонд “еремiя” вул. городецького 23`],\n  },\n  3: {\n    0: [`120 003`, `на потреби зсу`, `фонд “еремiя” вул. городецького 23`],\n    1: [`20`, `автівок`, `фонд “еремiя” вул. городецького 23`],\n    2: [`3000`, `кг продуктів`, `фонд “еремiя” вул. городецького 23`],\n    3: [`180 000`, `на потреби зсу`, `фонд “еремiя” вул. городецького 23`],\n    4: [`120 000`, `на потреби зсу`, `фонд “еремiя” вул. городецького 23`],\n    5: [`3000`, `кг продуктів`, `фонд “еремiя” вул. городецького 23`],\n  },\n  4: {\n    0: [`120 004`, `на потреби зсу`, `фонд “еремiя” вул. городецького 23`],\n    1: [`20`, `автівок`, `фонд “еремiя” вул. городецького 23`],\n    2: [`3000`, `кг продуктів`, `фонд “еремiя” вул. городецького 23`],\n    3: [`180 000`, `на потреби зсу`, `фонд “еремiя” вул. городецького 23`],\n    4: [`120 000`, `на потреби зсу`, `фонд “еремiя” вул. городецького 23`],\n    5: [`3000`, `кг продуктів`, `фонд “еремiя” вул. городецького 23`],\n  },\n  5: {\n    0: [`120 005`, `на потреби зсу`, `фонд “еремiя” вул. городецького 23`],\n    1: [`20`, `автівок`, `фонд “еремiя” вул. городецького 23`],\n    2: [`3000`, `кг продуктів`, `фонд “еремiя” вул. городецького 23`],\n    3: [`180 000`, `на потреби зсу`, `фонд “еремiя” вул. городецького 23`],\n    4: [`120 000`, `на потреби зсу`, `фонд “еремiя” вул. городецького 23`],\n    5: [`3000`, `кг продуктів`, `фонд “еремiя” вул. городецького 23`],\n  },\n  6: {\n    0: [`120 006`, `на потреби зсу`, `фонд “еремiя” вул. городецького 23`],\n    1: [`20`, `автівок`, `фонд “еремiя” вул. городецького 23`],\n    2: [`3000`, `кг продуктів`, `фонд “еремiя” вул. городецького 23`],\n    3: [`180 000`, `на потреби зсу`, `фонд “еремiя” вул. городецького 23`],\n    4: [`120 000`, `на потреби зсу`, `фонд “еремiя” вул. городецького 23`],\n    5: [`3000`, `кг продуктів`, `фонд “еремiя” вул. городецького 23`],\n  },\n  7: {\n    0: [`120 007`, `на потреби зсу`, `фонд “еремiя” вул. городецького 23`],\n    1: [`20`, `автівок`, `фонд “еремiя” вул. городецького 23`],\n    2: [`3000`, `кг продуктів`, `фонд “еремiя” вул. городецького 23`],\n    3: [`180 000`, `на потреби зсу`, `фонд “еремiя” вул. городецького 23`],\n    4: [`120 000`, `на потреби зсу`, `фонд “еремiя” вул. городецького 23`],\n    5: [`3000`, `кг продуктів`, `фонд “еремiя” вул. городецького 23`],\n  },\n  8: {\n    0: [`120 008`, `на потреби зсу`, `фонд “еремiя” вул. городецького 23`],\n    1: [`20`, `автівок`, `фонд “еремiя” вул. городецького 23`],\n    2: [`3000`, `кг продуктів`, `фонд “еремiя” вул. городецького 23`],\n    3: [`180 000`, `на потреби зсу`, `фонд “еремiя” вул. городецького 23`],\n    4: [`120 000`, `на потреби зсу`, `фонд “еремiя” вул. городецького 23`],\n    5: [`3000`, `кг продуктів`, `фонд “еремiя” вул. городецького 23`],\n  },\n  9: {\n    0: [`120 009`, `на потреби зсу`, `фонд “еремiя” вул. городецького 23`],\n    1: [`20`, `автівок`, `фонд “еремiя” вул. городецького 23`],\n    2: [`3000`, `кг продуктів`, `фонд “еремiя” вул. городецького 23`],\n    3: [`180 000`, `на потреби зсу`, `фонд “еремiя” вул. городецького 23`],\n    4: [`120 000`, `на потреби зсу`, `фонд “еремiя” вул. городецького 23`],\n    5: [`3000`, `кг продуктів`, `фонд “еремiя” вул. городецького 23`],\n  },\n  10: {\n    0: [`120 010`, `на потреби зсу`, `фонд “еремiя” вул. городецького 23`],\n    1: [`20`, `автівок`, `фонд “еремiя” вул. городецького 23`],\n    2: [`3000`, `кг продуктів`, `фонд “еремiя” вул. городецького 23`],\n    3: [`180 000`, `на потреби зсу`, `фонд “еремiя” вул. городецького 23`],\n    4: [`120 000`, `на потреби зсу`, `фонд “еремiя” вул. городецького 23`],\n    5: [`3000`, `кг продуктів`, `фонд “еремiя” вул. городецького 23`],\n  },\n  11: {\n    0: [`120 011`, `на потреби зсу`, `фонд “еремiя” вул. городецького 23`],\n    1: [`20`, `автівок`, `фонд “еремiя” вул. городецького 23`],\n    2: [`3000`, `кг продуктів`, `фонд “еремiя” вул. городецького 23`],\n    3: [`180 000`, `на потреби зсу`, `фонд “еремiя” вул. городецького 23`],\n    4: [`120 000`, `на потреби зсу`, `фонд “еремiя” вул. городецького 23`],\n    5: [`3000`, `кг продуктів`, `фонд “еремiя” вул. городецького 23`],\n  },\n  12: {\n    0: [`120 012`, `на потреби зсу`, `фонд “еремiя” вул. городецького 23`],\n    1: [`20`, `автівок`, `фонд “еремiя” вул. городецького 23`],\n    2: [`3000`, `кг продуктів`, `фонд “еремiя” вул. городецького 23`],\n    3: [`180 000`, `на потреби зсу`, `фонд “еремiя” вул. городецького 23`],\n    4: [`120 000`, `на потреби зсу`, `фонд “еремiя” вул. городецького 23`],\n    5: [`3000`, `кг продуктів`, `фонд “еремiя” вул. городецького 23`],\n  },\n  13: {\n    0: [`120 013`, `на потреби зсу`, `фонд “еремiя” вул. городецького 23`],\n    1: [`20`, `автівок`, `фонд “еремiя” вул. городецького 23`],\n    2: [`3000`, `кг продуктів`, `фонд “еремiя” вул. городецького 23`],\n    3: [`180 000`, `на потреби зсу`, `фонд “еремiя” вул. городецького 23`],\n    4: [`120 000`, `на потреби зсу`, `фонд “еремiя” вул. городецького 23`],\n    5: [`3000`, `кг продуктів`, `фонд “еремiя” вул. городецького 23`],\n  },\n  14: {\n    0: [`120 014`, `на потреби зсу`, `фонд “еремiя” вул. городецького 23`],\n    1: [`20`, `автівок`, `фонд “еремiя” вул. городецького 23`],\n    2: [`3000`, `кг продуктів`, `фонд “еремiя” вул. городецького 23`],\n    3: [`180 000`, `на потреби зсу`, `фонд “еремiя” вул. городецького 23`],\n    4: [`120 000`, `на потреби зсу`, `фонд “еремiя” вул. городецького 23`],\n    5: [`3000`, `кг продуктів`, `фонд “еремiя” вул. городецького 23`],\n  },\n  15: {\n    0: [`120 015`, `на потреби зсу`, `фонд “еремiя” вул. городецького 23`],\n    1: [`20`, `автівок`, `фонд “еремiя” вул. городецького 23`],\n    2: [`3000`, `кг продуктів`, `фонд “еремiя” вул. городецького 23`],\n    3: [`180 000`, `на потреби зсу`, `фонд “еремiя” вул. городецького 23`],\n    4: [`120 000`, `на потреби зсу`, `фонд “еремiя” вул. городецького 23`],\n    5: [`3000`, `кг продуктів`, `фонд “еремiя” вул. городецького 23`],\n  },\n  16: {\n    0: [`120 016`, `на потреби зсу`, `фонд “еремiя” вул. городецького 23`],\n    1: [`20`, `автівок`, `фонд “еремiя” вул. городецького 23`],\n    2: [`3000`, `кг продуктів`, `фонд “еремiя” вул. городецького 23`],\n    3: [`180 000`, `на потреби зсу`, `фонд “еремiя” вул. городецького 23`],\n    4: [`120 000`, `на потреби зсу`, `фонд “еремiя” вул. городецького 23`],\n    5: [`3000`, `кг продуктів`, `фонд “еремiя” вул. городецького 23`],\n  },\n  17: {\n    0: [`120 017`, `на потреби зсу`, `фонд “еремiя” вул. городецького 23`],\n    1: [`20`, `автівок`, `фонд “еремiя” вул. городецького 23`],\n    2: [`3000`, `кг продуктів`, `фонд “еремiя” вул. городецького 23`],\n    3: [`180 000`, `на потреби зсу`, `фонд “еремiя” вул. городецького 23`],\n    4: [`120 000`, `на потреби зсу`, `фонд “еремiя” вул. городецького 23`],\n    5: [`3000`, `кг продуктів`, `фонд “еремiя” вул. городецького 23`],\n  },\n  18: {\n    0: [`120 018`, `на потреби зсу`, `фонд “еремiя” вул. городецького 23`],\n    1: [`20`, `автівок`, `фонд “еремiя” вул. городецького 23`],\n    2: [`3000`, `кг продуктів`, `фонд “еремiя” вул. городецького 23`],\n    3: [`180 000`, `на потреби зсу`, `фонд “еремiя” вул. городецького 23`],\n    4: [`120 000`, `на потреби зсу`, `фонд “еремiя” вул. городецького 23`],\n    5: [`3000`, `кг продуктів`, `фонд “еремiя” вул. городецького 23`],\n  },\n  19: {\n    0: [`120 019`, `на потреби зсу`, `фонд “еремiя” вул. городецького 23`],\n    1: [`20`, `автівок`, `фонд “еремiя” вул. городецького 23`],\n    2: [`3000`, `кг продуктів`, `фонд “еремiя” вул. городецького 23`],\n    3: [`180 000`, `на потреби зсу`, `фонд “еремiя” вул. городецького 23`],\n    4: [`120 000`, `на потреби зсу`, `фонд “еремiя” вул. городецького 23`],\n    5: [`3000`, `кг продуктів`, `фонд “еремiя” вул. городецького 23`],\n  },\n  20: {\n    0: [`120 020`, `на потреби зсу`, `фонд “еремiя” вул. городецького 23`],\n    1: [`20`, `автівок`, `фонд “еремiя” вул. городецького 23`],\n    2: [`3000`, `кг продуктів`, `фонд “еремiя” вул. городецького 23`],\n    3: [`180 000`, `на потреби зсу`, `фонд “еремiя” вул. городецького 23`],\n    4: [`120 000`, `на потреби зсу`, `фонд “еремiя” вул. городецького 23`],\n    5: [`3000`, `кг продуктів`, `фонд “еремiя” вул. городецького 23`],\n  },\n  21: {\n    0: [`120 021`, `на потреби зсу`, `фонд “еремiя” вул. городецького 23`],\n    1: [`20`, `автівок`, `фонд “еремiя” вул. городецького 23`],\n    2: [`3000`, `кг продуктів`, `фонд “еремiя” вул. городецького 23`],\n    3: [`180 000`, `на потреби зсу`, `фонд “еремiя” вул. городецького 23`],\n    4: [`120 000`, `на потреби зсу`, `фонд “еремiя” вул. городецького 23`],\n    5: [`3000`, `кг продуктів`, `фонд “еремiя” вул. городецького 23`],\n  },\n  22: {\n    0: [`120 022`, `на потреби зсу`, `фонд “еремiя” вул. городецького 23`],\n    1: [`20`, `автівок`, `фонд “еремiя” вул. городецького 23`],\n    2: [`3000`, `кг продуктів`, `фонд “еремiя” вул. городецького 23`],\n    3: [`180 000`, `на потреби зсу`, `фонд “еремiя” вул. городецького 23`],\n    4: [`120 000`, `на потреби зсу`, `фонд “еремiя” вул. городецького 23`],\n    5: [`3000`, `кг продуктів`, `фонд “еремiя” вул. городецького 23`],\n  },\n  23: {\n    0: [`120 023`, `на потреби зсу`, `фонд “еремiя” вул. городецького 23`],\n    1: [`20`, `автівок`, `фонд “еремiя” вул. городецького 23`],\n    2: [`3000`, `кг продуктів`, `фонд “еремiя” вул. городецького 23`],\n    3: [`180 000`, `на потреби зсу`, `фонд “еремiя” вул. городецького 23`],\n    4: [`120 000`, `на потреби зсу`, `фонд “еремiя” вул. городецького 23`],\n    5: [`3000`, `кг продуктів`, `фонд “еремiя” вул. городецького 23`],\n  },\n  24: {\n    0: [`120 024`, `на потреби зсу`, `фонд “еремiя” вул. городецького 23`],\n    1: [`20`, `автівок`, `фонд “еремiя” вул. городецького 23`],\n    2: [`3000`, `кг продуктів`, `фонд “еремiя” вул. городецького 23`],\n    3: [`180 000`, `на потреби зсу`, `фонд “еремiя” вул. городецького 23`],\n    4: [`120 000`, `на потреби зсу`, `фонд “еремiя” вул. городецького 23`],\n    5: [`3000`, `кг продуктів`, `фонд “еремiя” вул. городецького 23`],\n  },\n  25: {\n    0: [`120 025`, `на потреби зсу`, `фонд “еремiя” вул. городецького 23`],\n    1: [`20`, `автівок`, `фонд “еремiя” вул. городецького 23`],\n    2: [`3000`, `кг продуктів`, `фонд “еремiя” вул. городецького 23`],\n    3: [`180 000`, `на потреби зсу`, `фонд “еремiя” вул. городецького 23`],\n    4: [`120 000`, `на потреби зсу`, `фонд “еремiя” вул. городецького 23`],\n    5: [`3000`, `кг продуктів`, `фонд “еремiя” вул. городецького 23`],\n  },\n};\n","\"use srict\";\nconst regionButtonsRef = document.querySelectorAll(\".swiper-slide\");\nconsole.log(regionButtonsRef);\nconst oblastRender = document.querySelector(\".oblastJS\");\nconst ukraineMapRef = document.querySelector(\".Ukraine\");\nconst charityRef = document.querySelector(\".charityJS\");\nconst bubblesRef = document.querySelector(\".charityWrapperJS\");\nimport { allItems } from \"./items\";\n\nconst renderOblast = (oblastId) => {\n  switch (oblastId) {\n    case 0:\n      console.log(\"drawing Луцьк\");\n      charityRef.classList.remove(\"hidden\");\n      oblastRender.innerHTML = `<svg width=\"129\" height=\"135\" viewBox=\"0 0 129 135\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M109.085 11.2997V5.92593H107.284L101.879 4.58249L96.0248 2.79125L92.8723 1H87.9184H82.5142L77.5603 2.79125H71.7057H60.8972H51.8901H46.0355L39.7305 7.26936L38.8298 11.2997L37.4787 14.4343L32.0745 19.3603L27.1206 22.4949L23.5177 24.2862H20.3652L16.3121 22.4949L13.6099 20.7037H7.30496L2.35106 21.5993L1 24.2862L5.50355 36.3771V39.5118L2.35106 44.8855V46.6768L7.30496 52.9461L12.2589 59.6633V62.3502L15.4113 72.6498L18.5638 81.6061L21.7163 85.1886V87.8754H17.2128L15.4113 88.771V91.9057L18.5638 96.8316L20.3652 101.31L21.7163 104.892L24.4184 106.236L26.6702 108.923L29.3723 110.714L31.6241 108.027L33.4255 107.131L37.0284 108.923V112.505H38.8298L41.5319 115.192L40.1809 116.983L38.8298 118.327V122.805L40.1809 125.044L42.4326 123.7L48.2872 125.044V126.835L51.4397 129.074L53.6915 134L55.9433 131.761H59.5461L65.8511 132.657L69.4539 134H72.6064L76.2092 131.761V129.074L74.8582 126.835L72.6064 125.044V122.805L74.8582 121.461V119.222L76.2092 116.088L78.461 116.983H83.4149V115.192V112.505H87.9184V107.131H95.5745H98.2766H101.879L107.284 110.714H111.787L114.039 108.027V99.9663L116.291 98.6229L118.092 96.3838H120.794L122.596 93.697V88.771H124.397V84.7407H128V82.9495L127.099 82.0539V78.4714L125.748 76.6801H121.695L120.794 75.7845L121.695 71.7542L125.748 70.4108L127.099 68.1717L124.397 63.6936L119.894 62.3502L118.092 58.3199L116.291 54.7374L115.39 51.1549H111.787H103.23L101.879 42.1987V40.8552V38.1684L104.131 34.5859V31.0034L103.23 29.6599L100.528 26.5253V22.0471L104.131 18.0168L106.383 14.4343L109.085 11.2997Z\" fill=\"#AFB78E\" stroke=\"#849464\" stroke-width=\"2\" stroke-linejoin=\"round\"/>\n</svg>\n\n<text class=\"oblast-text\">ЛУЦЬК</text>\n`;\n      break;\n    case 1:\n      console.log(\"drawing Миколаїв\");\n      charityRef.classList.remove(\"hidden\");\n      oblastRender.innerHTML = `<svg width=\"163\" height=\"135\" viewBox=\"0 0 163 135\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M55.3919 120.438L54.0865 122.625V131.375V131.812L56.6973 131.375L61.0486 133.562L63.2243 134L66.7054 132.25L71.4919 127L72.7973 123.938L71.0568 120.438L72.7973 119.562L77.1486 117.812L75.8432 121.312L74.5378 126.125V132.25L77.1486 133.125L80.1946 129.188H83.6757L84.9811 130.5L89.7676 131.812L94.1189 130.5L96.2946 127.875V122.625L94.1189 119.562L95.4243 117.375L98.0351 118.25V121.312L99.3405 122.625L104.562 121.312H110.219L115.441 116.062H118.051H119.792L122.838 113H125.449H128.059L132.846 109.938H138.503L139.808 113L146.77 114.312L150.251 111.25L146.77 107.312H152.862L155.908 103.812L154.603 100.75H157.649L159.824 96.8125L154.603 92.4375L150.251 90.6875L152.862 85.875L156.778 85L159.824 82.375L162 79.3125L161.13 75.8125V68.8125L158.519 65.75L156.778 60.5L159.824 62.25L161.13 59.625L159.824 55.6875V51.3125L155.908 48.6875L154.603 46.0625L152.862 41.25L154.603 39.0625H158.519L156.778 35.5625V27.6875L157.649 25.0625L154.603 22V18.0625L155.908 14.5625L152.862 12.8125H150.251L147.205 15.875L145.03 18.0625L143.289 19.8125L141.549 18.0625H137.632L135.457 20.6875V22L136.762 23.75L135.457 26.375V28.5625V29.875L134.586 32.9375L131.541 34.6875L125.884 35.5625L119.357 32.9375H111.959L106.738 39.0625L103.257 36.875L101.081 34.6875H91.073L89.3324 29.875L91.073 27.6875V23.75L86.7216 22L83.2405 18.0625V15.875L85.4162 14.5625V9.75H81.0649L77.1486 8.875L74.1027 12.8125L71.0568 14.5625V11.5L71.927 9.75L69.3162 7.5625L66.7054 9.75L64.0946 8.875H57.5676L55.3919 4.5L53.2162 1H47.1243H43.6432L41.4676 4.5L38.4216 5.8125L34.5054 4.5L33.2 5.8125L30.5892 3.625H25.8027L22.3216 5.8125H10.1378L8.83243 4.5L5.35135 7.125L7.09189 10.625L4.04595 11.5L1 12.375V13.6875L1.87027 15.875V19.8125L5.35135 22L6.22162 29L7.09189 32.9375L10.1378 36V38.1875L11.8784 39.0625V43.4375V48.25H14.0541L14.9243 50.4375H18.8405L20.5811 49.125L23.1919 48.25L25.8027 50.4375L28.4135 51.3125L30.5892 48.25L32.3297 51.3125L34.5054 53.9375L37.5513 57.875L36.2459 60.9375V61.8125V67.0625V71.875L38.4216 78.4375H43.6432L45.8189 79.75H47.9946V78.4375H52.3459L54.0865 79.75L52.3459 82.8125L50.6054 85L52.3459 87.1875L55.3919 88.5H58.873V90.6875L60.6135 92.875V96.375L58.873 99V101.188L57.5676 103.375H53.2162L47.9946 104.25L46.6892 106L49.7351 111.25L55.3919 116.062V120.438Z\" fill=\"#AFB78E\" stroke=\"#849464\" stroke-width=\"2\" stroke-linejoin=\"round\"/>\n</svg>\n<text class=\"oblast-text\">Миколаїв</text>\n`;\n      break;\n    case 2:\n      console.log(\"drawing Кіровоград\");\n      charityRef.classList.remove(\"hidden\");\n      oblastRender.innerHTML = `<svg width=\"176\" height=\"92\" viewBox=\"0 0 176 92\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M138.225 70.5455L140.609 71.9091L142.652 70.5455L146.057 68.8409L150.143 63.0455L153.207 61.3409L156.953 58.9545L159.677 56.5682L160.358 53.8409L158.315 50.7727V47.3636L156.953 42.25V38.8409L160.358 37.4773L165.125 34.4091L169.552 31.6818L170.573 29.2955L166.487 27.5909L162.061 25.5455L160.358 22.4773L165.125 21.4545L169.552 22.4773L173.297 20.7727L175 18.7273V16L171.935 13.2727L167.509 14.2955L164.444 16L162.061 14.6364H157.634L156.953 13.2727L151.505 12.9318L149.462 9.52273L150.143 8.84091V6.45455L148.44 5.09091L141.971 2.36364L133.798 1L127.329 5.09091L129.712 8.84091L128.691 10.2045L119.497 14.2955H116.432L112.006 6.79545H105.536L100.088 12.9318V16L99.4071 17.0227L94.9804 15.3182L91.2348 19.4091H89.1918L86.4677 14.2955H82.0411L81.0196 16H74.8904V20.7727L69.7828 27.5909H68.0802L65.0157 26.9091H61.2701L57.5245 28.9545L54.4599 27.5909L44.9256 26.9091L41.8611 26.5682L38.1155 29.6364L34.3699 34.0682V39.8636H31.9863L30.2838 38.5H28.2407L26.5382 41.5682H24.8356L21.09 44.6364L18.7065 43.2727L13.5988 45.3182L12.9178 46.6818L10.8748 49.0682L8.15069 50.4318L6.78865 48.3864L5.76712 47.7045L4.06458 48.7273L2.36204 50.4318L1 51.7955L3.38356 54.5227L6.78865 55.8864L9.85323 58.6136L11.2153 61V63.3864L11.8963 65.0909L14.2798 66.1136H20.0685H22.7926L25.5166 64.0682L26.5382 65.0909H36.0724L38.7965 63.3864H42.5421L44.5851 65.0909L45.6067 64.0682L48.6712 65.0909L51.0548 64.0682L52.7573 61.3409H55.4814H60.2485L61.9511 64.0682L63.6536 67.4773H68.7613L70.8043 68.1591L72.8474 66.4545L74.8904 68.1591L74.2094 69.5227V71.9091L76.593 70.5455L78.9765 67.4773L82.0411 68.1591H85.4462V71.9091L83.7436 72.9318V74.6364L86.4677 77.7045L89.8728 79.0682V82.1364L88.5108 83.8409L89.8728 87.5909H97.7045L99.4071 89.2955L102.131 91L106.217 86.2273H112.006L117.114 88.2727L121.54 87.5909L123.924 86.2273L124.605 83.8409V82.8182V81.1136L125.626 79.0682L124.605 77.7045V76.6818L126.307 74.6364H129.372L130.734 76L132.096 74.6364L133.798 72.9318L136.182 70.5455H138.225Z\" fill=\"#AFB78E\" stroke=\"#849464\" stroke-width=\"2\" stroke-linejoin=\"round\"/>\n</svg>\n<text class=\"oblast-text\">Кіровоград</text>\n`;\n      break;\n    case 3:\n      console.log(\"drawing Полтава\");\n      charityRef.classList.remove(\"hidden\");\n      oblastRender.innerHTML = `<svg width=\"162\" height=\"131\" viewBox=\"0 0 162 131\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M2.92308 28.0359L1 26.1048L1.76923 24.1737L3.30769 21.0838L3.69231 18.3802L7.92308 19.1527L10.2308 17.6078L12.5385 15.6767L14.0769 14.1317L15.6154 15.6767H17.1538L18.6923 14.1317L21 16.8353H23.3077L25.2308 17.6078L26 16.8353H28.3077L30.6154 17.6078L32.5385 15.6767L36.3846 14.1317L39.8462 12.2006L40.6154 10.6557L42.1538 9.88325L45.2308 6.4072L46 4.64479H51.3846L52.1538 5.2485L54.8462 2.93114L56.7692 3.31737L59.0769 5.2485L60.6154 6.4072L65.6154 6.02096L67.5385 5.2485H69.4615L75.6154 7.9521L77.9231 6.4072L81.3846 6.02096L82.5385 3.31737H86L90.6154 6.79341L92.9231 5.2485L95.6154 2.15868L99.4615 1L100.615 1.77246L101 7.9521L102.538 10.2695L105.231 12.2006L106.769 14.1317V15.2904L106 16.4491V18.3802L109.462 20.6976L109.846 23.015L113.308 24.9461L112.923 27.2635L111.385 28.4222L110.615 29.5808L111.385 30.7395H114.846L115.615 29.5808H117.154V30.7395L121.769 30.3533L122.154 29.1946L123.308 28.4222L125.231 27.6497L127.154 25.7186L128.692 26.491L129.846 27.2635L132.154 27.6497V32.6707H132.923V34.2156L131.385 34.6018L128.692 38.4641L129.462 39.6228L130.615 41.1677V44.2575L134.077 45.4162L138.692 46.1886L140.231 48.506L142.154 49.2784L142.923 48.506L145.231 48.8922L146.385 50.0509V55.0719L148.308 57.3892L151.385 60.8653L154.462 60.479L157.154 59.3204L157.923 60.479L158.308 61.6377L157.154 62.7964L157.538 64.3413L159.077 66.2725L161 67.8174L160.615 68.9761H157.154L157.538 69.7485L160.615 72.0659L159.077 73.997H154.462V76.3144L155.231 77.4731V83.2665L151.385 86.7425L149.846 88.2874L144.077 88.6737L141 86.7425L139.077 89.0599V90.6048L140.231 91.7635L137.923 93.3084L139.077 94.4671L140.231 95.6257V98.3293H135.615L129.846 97.9431L126.385 101.033L121.769 103.737L117.154 104.895L114.462 106.44L111.769 111.075L108.692 116.482L106.769 118.799V120.344L108.692 121.889V126.138L107.923 130L104.077 127.683L99.4615 124.979L94.8462 124.207L91 124.979V121.889L87.5385 118.799L82.5385 119.958L79.0769 121.889L76.3846 120.344H71.3846L70.6154 118.799L64.4615 118.413L62.1538 114.551L62.9231 113.778V111.075L61 109.53L53.6923 106.44L54.8462 104.895L51.3846 100.26L44.8462 91.3772L42.1538 86.7425L34.4615 83.2665L32.5385 79.4042L34.4615 74.3832L32.5385 70.1347L28.3077 66.2725L25.6154 65.1138L24.8462 59.7066L20.6154 58.9341L17.5385 55.8443L15.6154 53.1407L17.1538 51.2096L18.3077 48.506V46.1886L13.3077 41.1677L9.46154 39.2365V34.6018L8.30769 31.8982L4.07692 29.9671L2.92308 28.0359Z\" fill=\"#AFB78E\" stroke=\"#849464\" stroke-width=\"2\" stroke-linejoin=\"round\"/>\n</svg>\n\n<text class=\"oblast-text\">Полтава</text>\n`;\n      break;\n    case 4:\n      console.log(\"drawing Херсон\");\n      charityRef.classList.remove(\"hidden\");\n      oblastRender.innerHTML = `<svg width=\"171\" height=\"111\" viewBox=\"0 0 171 111\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M124.558 7.0346L119.676 4.39446H111.789H108.409L102.776 5.90311H97.8933L94.1378 3.64014L91.8844 1H90.0067L87.7533 4.39446L84.3733 5.14879L82.12 7.0346L79.8667 2.88581H74.6089L73.1067 1H70.4778V4.77163L71.6044 8.16609L70.4778 10.4291L67.8489 8.92042L69.3511 13.4464L71.6044 16.0865V22.1211L72.3556 25.1384L70.4778 27.7785L67.8489 30.0415L64.4689 30.7958L62.2156 34.9446L65.9711 36.4533L70.4778 40.2249L68.6 43.6194H65.9711L67.0978 46.2595L64.4689 49.2768H59.2111L62.2156 52.6713L59.2111 55.3114L53.2022 54.1799L52.0756 51.5398H47.1933L43.0622 54.1799H40.8089H38.5556L35.9267 56.8201H34.4244H32.1711L27.6644 61.346H22.7822L18.2756 62.4775L19.7778 68.1349L22.7822 70.3979L25.4111 71.1523L27.6644 73.7924L32.1711 72.6609L35.9267 75.6782L40.4333 74.9239L44.5644 70.3979L45.6911 72.6609L40.4333 77.9412L38.5556 80.9585L37.4289 81.4883L30.2933 79.827L24.66 77.9412H16.3978L11.14 76.8097L6.63333 75.6782L1 77.9412L4.00444 82.4671L7.38444 80.3121L11.14 80.9585L16.3978 83.9758L20.9044 82.8443L22.4067 84.3529L21.28 88.1246L16.3978 91.1419L12.2667 90.3875L9.26222 91.1419V93.782L12.6422 94.9135L17.1489 93.782L20.9044 96.4221H23.5333L27.2889 100.948L32.1711 102.08L35.1756 105.851L39.6822 108.114H45.6911L50.5733 106.228H56.9578L59.5867 103.588H63.7178L69.7267 104.343L71.6044 102.08H73.4822L76.1111 103.588L79.4911 99.8166H81.3689V102.08L84.7489 102.834L86.2511 105.097H88.1289L89.2556 106.983L93.0111 108.663L96.3911 106.228V102.834H99.02L102.776 99.8166L102.024 97.5536L107.658 94.5363L110.287 96.045L114.042 94.5363L115.92 96.045V98.6851L118.924 100.948L121.929 100.194L123.056 96.045L126.436 91.8962L129.44 92.6505L132.82 99.8166H134.322L136.2 96.045L138.829 96.7993L140.331 99.8166H142.584L144.087 101.325L140.331 102.834V106.228L143.336 110L146.34 109.246L149.344 103.588H152.349L155.353 107.737L160.611 109.246V105.474L157.982 102.834V100.948H156.48L160.987 90.7647L163.991 90.0104L166.244 91.8962L168.498 90.7647L170 87.7474L168.498 84.7301L166.996 76.4325V74.9239L163.24 74.1695L158.358 73.0381L157.231 70.0208L153.851 69.2664L150.847 67.0035L152.349 64.7405V62.1003L148.218 61.346L147.467 58.3287H149.72L150.847 55.6886L152.349 50.7855L153.851 50.0311V47.391L149.72 43.9965L147.467 42.1107L143.336 41.3564L142.209 38.7163V33.436L138.829 29.2872L137.702 24.3841L139.58 20.2353L136.2 16.8408H133.947L132.82 18.3495V19.481H127.562L124.558 13.4464V7.0346Z\" fill=\"#AFB78E\"/>\n<path d=\"M17.1489 58.7059V61.346L18.2756 62.4775M18.2756 62.4775L22.7822 61.346H27.6644L32.1711 56.8201H34.4244H35.9267L38.5556 54.1799H40.8089H43.0622L47.1933 51.5398H52.0756L53.2022 54.1799L59.2111 55.3114L62.2156 52.6713L59.2111 49.2768H64.4689L67.0978 46.2595L65.9711 43.6194H68.6L70.4778 40.2249L65.9711 36.4533L62.2156 34.9446L64.4689 30.7958L67.8489 30.0415L70.4778 27.7785L72.3556 25.1384L71.6044 22.1211V16.0865L69.3511 13.4464L67.8489 8.92042L70.4778 10.4291L71.6044 8.16609L70.4778 4.77163V1H73.1067L74.6089 2.88581H79.8667L82.12 7.0346L84.3733 5.14879L87.7533 4.39446L90.0067 1H91.8844L94.1378 3.64014L97.8933 5.90311H102.776L108.409 4.39446H111.789H119.676L124.558 7.0346V13.4464L127.562 19.481H132.82V18.3495L133.947 16.8408H136.2L139.58 20.2353L137.702 24.3841L138.829 29.2872L142.209 33.436V38.7163L143.336 41.3564L147.467 42.1107L149.72 43.9965L153.851 47.391V50.0311L152.349 50.7855L150.847 55.6886L149.72 58.3287H147.467L148.218 61.346L152.349 62.1003V64.7405L150.847 67.0035L153.851 69.2664L157.231 70.0208L158.358 73.0381L163.24 74.1696L166.996 74.9239V76.4325L168.498 84.7301L170 87.7474L168.498 90.7647L166.244 91.8962L163.991 90.0104L160.987 90.7647L156.48 100.948H157.982V102.834L160.611 105.474V109.246L155.353 107.737L152.349 103.588H149.344L146.34 109.246L143.336 110L140.331 106.228V102.834L144.087 101.325L142.584 99.8166H140.331L138.829 96.7993L136.2 96.045L134.322 99.8166H132.82L129.44 92.6505L126.436 91.8962L123.056 96.045L121.929 100.194L118.924 100.948L115.92 98.6851V96.045L114.042 94.5363L110.287 96.045L107.658 94.5363L102.024 97.5536L102.776 99.8166L99.02 102.834H96.3911V106.228L93.0111 108.663L89.2556 106.983L88.1289 105.097H86.2511L84.7489 102.834L81.3689 102.08V99.8166H79.4911L76.1111 103.588L73.4822 102.08H71.6044L69.7267 104.343L63.7178 103.588H59.5867L56.9578 106.228H50.5733L45.6911 108.114H39.6822L35.1756 105.851L32.1711 102.08L27.2889 100.948L23.5333 96.4221H20.9044L17.1489 93.782L12.6422 94.9135L9.26222 93.782V91.1419L12.2667 90.3875L16.3978 91.1419L21.28 88.1246L22.4067 84.3529L20.9044 82.8443L16.3978 83.9758L11.14 80.9585L7.38444 80.3121L4.00444 82.4671L1 77.9412L6.63333 75.6782L11.14 76.8097L16.3978 77.9412H24.66L30.2933 79.827L37.4289 81.4883L38.5556 80.9585L40.4333 77.9412L45.6911 72.6609L44.5644 70.3979L40.4333 74.9239L35.9267 75.6782L32.1711 72.6609L27.6644 73.7924L25.4111 71.1523L22.7822 70.3979L19.7778 68.1349L18.2756 62.4775Z\" stroke=\"#849464\" stroke-width=\"2\" stroke-linejoin=\"round\"/>\n</svg>\n\n<text class=\"oblast-text\">Херсон</text>\n`;\n      break;\n    case 5:\n      console.log(\"drawing Суми\");\n      charityRef.classList.remove(\"hidden\");\n      oblastRender.innerHTML = `<svg width=\"107\" height=\"136\" viewBox=\"0 0 107 136\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M10.7222 113.026H6.18518V111.908L7.15741 110.282L7.48148 106.704L6.83333 106.053L5.53704 105.078V103.451L6.18518 102.15L8.4537 101.825L9.42593 100.524L9.75 99.5485L8.77778 97.754L7.15741 97.5971L6.83333 95.9709L7.80556 95.6456L8.4537 93.3689L8.77778 91.7427L10.3981 90.4417V86.8641L9.75 85.8884V81.9854L6.50926 82.3107L5.53704 81.335L4.88889 80.034L2.94444 79.7087L2.2963 78.733L1 78.0825V73.8544L1.97222 73.5291L2.94444 71.5777L3.91667 69.9515L4.88889 68.3252V66.0485L4.24074 64.7476L2.94444 63.4466L3.59259 60.8447L4.88889 59.5437L6.50926 58.568L6.83333 57.5922L7.15741 55.6408L7.80556 54.3398L7.48148 49.7864L8.12963 48.1602V47.1845L7.15741 46.534L6.18518 45.233L7.48148 44.5825L6.83333 42.6311L5.86111 41.3301L3.91667 40.3544V34.5L4.56481 33.199L5.86111 32.2233L6.18518 30.5971L7.48148 29.2961H8.77778L10.3981 27.9951L12.9907 26.6942L14.287 25.7184V21.4903H15.2593L16.5556 20.1893L17.8519 19.5388V18.2379L15.5833 16.6117L14.287 14.9854L12.0185 13.3592L11.3704 12.0583L12.0185 10.7573L13.3148 9.45631V5.87864L14.6111 5.5534V2.30097H17.8519L19.1481 4.57767H20.7685L26.9259 1L30.4907 1.32524L32.1111 3.2767L34.7037 8.48058L37.6204 9.45631L40.537 12.7087L40.8611 20.1893L45.3981 27.0194L49.287 29.9466L53.1759 33.8495L54.4722 38.0777L49.6111 39.7039L46.6944 40.6796L43.4537 41.9806V44.2573L45.7222 47.835L48.6389 50.7621L47.3426 56.6165V59.8689L49.9352 60.1942L50.9074 61.1699L48.6389 66.699L51.5556 68.3252L54.4722 66.699L58.6852 67.6748L65.1667 68.3252L66.787 70.6019H71.6481L74.2407 69.301L78.7778 68.3252L82.9907 69.301V74.8301L85.2593 77.432L89.7963 76.1311L92.0648 78.0825L90.4444 82.3107L93.037 86.2136L94.6574 91.7427L96.9259 94.3447L96.2778 99.8738L94.9815 101.5L96.9259 108.655L99.1944 111.583L103.083 112.883V115.16L106 119.388L103.083 121.015L99.8426 121.99L96.9259 119.388L95.9537 120.689V121.99L95.3055 122.316L94.0093 121.99L93.037 123.942H91.4167L91.0926 125.568L89.4722 127.519L87.5278 126.544H85.9074L84.6111 128.495L82.3426 130.121L80.3981 131.422L78.7778 132.398L76.8333 132.073L75.8611 131.422L74.5648 130.772L72.9444 132.398L71.3241 133.049L70.3519 133.699L70.0278 134.675L66.1389 135V134.024H64.8426L64.1944 135H61.2778L60.6296 134.024L61.2778 133.049L62.5741 132.073L62.8981 130.121L59.9815 128.495L59.6574 126.544L56.7407 124.592V122.966L57.3889 121.99V121.015L56.0926 119.388L53.8241 117.762L52.5278 115.811L52.2037 110.607L51.2315 109.956L47.9907 110.932L45.7222 113.534L43.7778 114.835L39.8889 111.908H36.9722L36 114.184L33.0833 114.51L31.1389 115.811L25.9537 113.534H24.3333L22.713 114.184L18.5 114.51L17.2037 113.534L15.2593 111.908L13.6389 111.583L11.3704 113.534L10.7222 113.026Z\" fill=\"#AFB78E\"/>\n<path d=\"M6.18518 113.026L5.53704 114.51M6.18518 113.026H10.7222L11.3704 113.534L13.6389 111.583L15.2593 111.908L17.2037 113.534L18.5 114.51L22.713 114.184L24.3333 113.534H25.9537L31.1389 115.811L33.0833 114.51L36 114.184L36.9722 111.908H39.8889L43.7778 114.835L45.7222 113.534L47.9907 110.932L51.2315 109.956L52.2037 110.607L52.5278 115.811L53.8241 117.762L56.0926 119.388L57.3889 121.015V121.99L56.7407 122.966V124.592L59.6574 126.544L59.9815 128.495L62.8981 130.121L62.5741 132.073L61.2778 133.049L60.6296 134.024L61.2778 135H64.1944L64.8426 134.024H66.1389V135L70.0278 134.675L70.3518 133.699L71.3241 133.049L72.9444 132.398L74.5648 130.772L75.8611 131.422L76.8333 132.073L78.7778 132.398L80.3981 131.422L82.3426 130.121L84.6111 128.495L85.9074 126.544H87.5278L89.4722 127.519L91.0926 125.568L91.4167 123.942H93.037L94.0093 121.99L95.3056 122.316L95.9537 121.99V120.689L96.9259 119.388L99.8426 121.99L103.083 121.015L106 119.388L103.083 115.16V112.883L99.1944 111.583L96.9259 108.655L94.9815 101.5L96.2778 99.8738L96.9259 94.3447L94.6574 91.7427L93.037 86.2136L90.4444 82.3107L92.0648 78.0825L89.7963 76.1311L85.2593 77.432L82.9907 74.8301V69.301L78.7778 68.3252L74.2407 69.301L71.6481 70.6019H66.787L65.1667 68.3252L58.6852 67.6748L54.4722 66.699L51.5556 68.3252L48.6389 66.699L50.9074 61.1699L49.9352 60.1942L47.3426 59.8689V56.6165L48.6389 50.7621L45.7222 47.835L43.4537 44.2573V41.9806L46.6944 40.6796L49.6111 39.7039L54.4722 38.0777L53.1759 33.8495L49.287 29.9466L45.3981 27.0194L40.8611 20.1893L40.537 12.7087L37.6204 9.45631L34.7037 8.48058L32.1111 3.2767L30.4907 1.32524L26.9259 1L20.7685 4.57767H19.1481L17.8519 2.30097H14.6111V5.5534L13.3148 5.87864V9.45631L12.0185 10.7573L11.3704 12.0583L12.0185 13.3592L14.287 14.9854L15.5833 16.6117L17.8519 18.2379V19.5388L16.5556 20.1893L15.2593 21.4903H14.287V25.7184L12.9907 26.6942L10.3981 27.9951L8.77778 29.2961H7.48148L6.18518 30.5971L5.86111 32.2233L4.56481 33.199L3.91667 34.5V40.3544L5.86111 41.3301L6.83333 42.6311L7.48148 44.5825L6.18518 45.233L7.15741 46.534L8.12963 47.1845V48.1602L7.48148 49.7864L7.80556 54.3398L7.15741 55.6408L6.83333 57.5922L6.50926 58.568L4.88889 59.5437L3.59259 60.8447L2.94444 63.4466L4.24074 64.7476L4.88889 66.0485V68.3252L3.91667 69.9515L2.94444 71.5777L1.97222 73.5291L1 73.8544V78.0825L2.2963 78.733L2.94444 79.7087L4.88889 80.034L5.53704 81.335L6.50926 82.3107L9.75 81.9854V85.8884L10.3981 86.8641V90.4418L8.77778 91.7427L8.4537 93.3689L7.80556 95.6456L6.83333 95.9709L7.15741 97.5971L8.77778 97.754L9.75 99.5485L9.42593 100.524L8.4537 101.825L6.18518 102.15L5.53704 103.451V105.078L6.83333 106.053L7.48148 106.704L7.15741 110.282L6.18518 111.908V113.026Z\" stroke=\"#849464\" stroke-width=\"2\" stroke-linejoin=\"round\"/></svg><text class=\"oblast-text\">Суми</text>\n`;\n      break;\n    case 6:\n      console.log(\"drawing Крим\");\n      charityRef.classList.remove(\"hidden\");\n      oblastRender.innerHTML = `<svg width=\"174\" height=\"108\" viewBox=\"0 0 174 108\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M44.1564 7.30952V3.52381L47.2836 1H49.16L56.9782 8.8869L59.48 8.57143L62.2945 6.67857L64.4836 7.625L64.7964 10.4643L66.6727 13.619L68.2364 12.9881L69.1745 10.7798L76.0545 10.1488L77.6182 11.7262L76.9927 14.25L77.6182 16.4583L80.12 15.8274H82.6218V17.4048L80.7455 19.2976L81.3709 22.1369L85.7491 19.6131L89.1891 20.244L93.88 19.2976L90.7527 23.0833L91.3782 25.6071L95.4436 25.2917L97.32 28.4464L101.698 29.0774L105.138 33.494L107.015 36.6488L104.2 42.3274L109.204 47.375L111.705 46.744L121.4 50.8452L127.029 48.3214L132.345 46.744L136.411 41.381L135.473 38.2262L137.975 37.2798L138.6 39.4881L140.789 41.6964L143.604 42.9583L145.793 42.6429L147.356 38.8571L152.047 36.9643L160.491 37.5952L167.684 37.9107L172.062 38.5417L173 41.381L172.062 43.2738L167.996 41.6964L165.807 42.6429L165.495 45.4821L163.618 46.744L162.68 52.1071L162.993 55.5774L164.869 56.8393L165.182 59.0476L159.865 60.9405L157.676 63.1488H155.175L152.985 61.8869L149.858 61.256L146.731 64.4107L141.102 65.9881L139.538 64.4107L137.349 61.8869L132.345 58.4167L127.029 58.1012L122.025 61.8869L120.775 64.0952L119.836 69.4583H116.396L115.458 71.6667L112.331 72.6131L110.142 75.4524V79.2381L108.578 79.5536L105.764 77.6607L103.262 77.3452L101.073 78.9226L94.8182 78.6071L92.9418 80.5L83.8727 84.6012L81.9964 89.0179L80.12 95.6429H77.3055L72.9273 99.4286L70.7382 103.214L66.36 104.792L64.4836 107H61.9818L60.7309 104.476H59.48L56.9782 106.685H53.5382L50.4109 104.792L47.9091 101.637H46.6582L41.9673 99.8584L39.7782 97.5357L39.1527 95.9583L41.9673 95.0119L44.1564 93.119L45.4073 89.9643L44.7818 85.5476L45.0945 82.0774L47.9091 78.6071L48.2218 74.8214L46.3455 66.619L40.0909 60.625L36.3382 59.0476L33.2109 60.625L29.7709 60.3095L21.64 53.0536L17.5745 50.8452L11.6327 49.8988L8.81818 52.4226L4.75273 53.6845L3.18909 53.0536L1 50.8452L1.31273 46.1131L8.50545 40.119L12.5709 38.2262L16.3236 33.1786L23.2036 30.6548L25.7055 28.4464L27.2691 26.2381L29.7709 27.1845L33.2109 25.9226L39.7782 20.5595H42.9055L44.1564 19.2976H47.9091L49.7855 16.1429L50.0982 14.25L49.16 13.619L47.5964 14.5655L45.72 13.9345L44.1564 11.0952V7.30952Z\" fill=\"#AFB78E\" stroke=\"#849464\" stroke-width=\"2\" stroke-linejoin=\"round\"/>\n</svg>\n\n<text class=\"oblast-text\">Крим</text>\n`;\n      break;\n    case 7:\n      console.log(\"drawing Рівне\");\n      charityRef.classList.remove(\"hidden\");\n      oblastRender.innerHTML = `<svg width=\"126\" height=\"136\" viewBox=\"0 0 126 136\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M35.3801 7.52722V2.91977H39.6293L41.5607 1H45.4237L48.514 2.91977L55.081 4.07163L60.4891 7.52722L67.8287 8.67908L71.6916 12.1347H80.5763L89.0748 16.7421H95.6417L97.5732 15.9742L102.595 17.51L104.14 23.6533L107.231 25.5731L108.389 29.7966H114.184L116.115 27.8768L119.592 27.4928L121.91 30.1805H124.227L125 32.8682L123.455 36.7077L120.751 38.2436L119.978 40.5473V43.235H118.819L116.502 40.5473L114.956 41.6991L115.729 43.6189V46.6905L112.639 50.5301V52.0659L113.798 53.6017V55.1375L111.093 57.0573V58.5931L109.162 60.1289L108.389 62.8166V64.3524L106.844 65.5043L106.072 67.4241L104.14 68.192L102.981 68.9599H101.436L101.822 70.8797L102.595 71.6476V75.1032V76.639L103.368 77.0229V79.3267L102.595 81.2464V86.2378L102.981 87.0057L103.368 88.1576L104.14 88.9255V90.4613V91.6132L102.595 92.3811L102.209 94.3009L101.436 96.6046L100.664 97.7564L99.5047 100.444H96.4143L94.8692 101.596L93.7103 102.748H91.7788L91.0062 103.9L89.8474 104.668H87.9159L86.3707 103.9L84.8255 104.284V105.052L82.5078 105.819H80.9626V106.971L80.5763 109.275H78.6449L77.0997 109.659V111.195L75.9408 112.731L72.8505 114.266V116.186L71.3053 118.106H69.3738V119.258L68.215 120.794L67.0561 121.562V122.713H63.5794H61.648L59.3302 125.401L58.1713 126.937L56.6262 128.089L54.3084 128.473L52.7632 127.705V125.401V124.249L53.5358 121.946L51.9907 121.562L50.8318 122.33L49.2866 121.562L47.3551 120.026L46.5826 120.794H41.947L41.1745 121.562L39.243 122.33L38.4704 123.481H36.1526V125.401L34.2212 126.169H27.6542L26.8816 126.937H21.8598L21.0872 126.169L19.5421 125.785L18.7695 125.401L18.3832 126.553L16.838 127.705V128.473L18.3832 129.241L17.9969 131.16L16.4517 133.08L15.2928 134.232H12.9751L12.2025 135L10.6573 134.232H9.11215L8.33956 132.312L7.18069 131.16H6.02181V129.241L4.86293 127.705L5.24922 125.785L6.4081 124.633V123.481L5.24922 122.33V121.178L7.18069 120.41V118.49H7.95327L7.56698 116.954L6.4081 116.186L3.70405 116.954L3.31776 117.722L1.77259 116.186L1 115.034L1.77259 114.266L1.38629 112.731H4.09034L7.18069 110.811V108.507L6.02181 106.587L4.09034 105.052V103.132L6.02181 101.98V100.06L7.18069 97.3725L9.11215 98.1404H13.3614V96.6046V94.3009H17.2243V89.6934H23.7913H26.109H29.1994L33.8349 92.765H37.6978L39.6293 90.4613V83.5501L41.5607 82.3983L43.1059 80.4785H45.4237L46.9688 78.1748V73.9513H48.514V70.4957H51.6044V68.9599L50.8318 68.192V65.1203L49.6729 63.5845H46.1963L45.4237 62.8166L46.1963 59.361L49.6729 58.2092L50.8318 56.2894L48.514 52.4499L44.6511 51.298L43.1059 47.8424L41.5607 44.7708L40.7882 41.6991H37.6978H30.3583L29.1994 34.0201V32.8682V30.5645L31.1308 27.4928V24.4212L30.3583 23.2693L28.0405 20.5817V16.7421L31.1308 13.2865L33.0623 10.2149L35.3801 7.52722Z\" fill=\"#AFB78E\" stroke=\"#849464\" stroke-width=\"2\" stroke-linejoin=\"round\"/>\n</svg>\n\n<text class=\"oblast-text\">Рівне</text>\n`;\n      break;\n    case 8:\n      console.log(\"drawing Хмельницький\");\n      charityRef.classList.remove(\"hidden\");\n      oblastRender.innerHTML = `<svg width=\"71\" height=\"135\" viewBox=\"0 0 71 135\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M48 123.121V124.62H46L43.6667 125.96L43 128.305L41 126.965H38.3333L36.6667 128.64L35.6667 127.97L33.3333 127.635V126.63L31 126.295L29.6667 127.3L28 128.64L27 127.635L26.3333 126.63L25.6667 124.62L21.6667 125.625L22.3333 127.3L21 128.975L20 129.645V127.97L18.3333 127.635L17 126.965L16.6667 131.32L16 134H15L13.6667 133.33L13.3333 131.655L12 128.64L8.33333 128.305L7.33333 126.965L5.66667 124.62L4.33333 122.275L3.33333 119.929L1.33333 118.254L2.33333 114.904V111.554L3 110.549L1.33333 108.539V106.194L2.33333 105.524L1.33333 104.519V99.1587L2.33333 98.4887V96.4786L1 95.1385L2.33333 94.1335L3 91.4534V88.4383L2.33333 87.4333V84.0831L4 82.7431L4.66667 81.738V76.7128L4 75.0378L3 71.6877L2.33333 68.3375L1.33333 64.6524L2.33333 63.3123L4.66667 60.9673L5.33333 58.9572L6 56.9471L4.66667 55.272L5.33333 52.927L6 51.9219V49.9118L4 47.2317V43.5466L3 42.8766L3.66667 37.8514L5.33333 36.5113L6 34.1662L6.66667 33.1612L6 31.1511V29.8111L8.66667 29.1411L7.33333 27.466L6.33333 27.131L6.66667 25.4559H7.33333L9.33333 25.1209L10.6667 24.1159L11.6667 22.7758L13.6667 20.4307H15.3333H18.3333V19.4257L19.3333 18.7557L20.3333 17.4156V16.4106H22L23.3333 14.7355V13.0605L26 11.7204L27 10.3804V9.0403L28.3333 8.70529H30L30.3333 6.69521V5.69018H31.6667L33.6667 5.02015V4.35013L35 4.01511L36.3333 4.68514H38L39 4.01511L39.6667 3.01008H41.3333L42.3333 2.00504L43.6667 1L45 3.01008L46 5.02015L48 6.02519L49 7.36524L49.3333 9.0403L48.6667 10.3804L47.3333 11.3854L48 13.3955L49.3333 14.7355L50.6667 17.4156L53.3333 18.7557L54 20.4307L58 24.1159L59.3333 23.4458L59.6667 22.7758H61L62 23.7809V25.4559L62.6667 26.461V29.4761L63.3333 30.4811V33.4962V36.8463L61.6667 37.1814L59.3333 38.1864V39.1914L60.3333 40.5315L59.3333 42.8766L58 43.8816L59.3333 45.5567L61 47.9018L62 50.2468L63.6667 50.9169L66.3333 52.2569L67.6667 53.262L69.3333 55.272V56.6121L67.3333 57.2821L66.6667 57.9521L67.3333 60.2972L68.3333 62.3073L67.6667 63.6474L67 65.6574L67.3333 69.0076L66 69.3426L64.6667 70.3476L65.3333 72.3577L66.6667 74.3678L68 76.7128V79.3929L69.3333 80.733V82.7431L70 84.0831L69.3333 84.4181V86.7632L70 88.7733L69.6667 92.1234L68.6667 92.4584L66.3333 93.4635L65 94.1335L63 93.4635L61.3333 92.1234H60.3333L58.3333 92.4584L58 93.7985H54.6667L54 94.1335L53.3333 96.4786L51 98.1536L50.3333 99.4937L50 110.214L49.6667 111.554L50.3333 112.559L50 114.904L49.6667 115.909L49.3333 120.599L48 123.121Z\" fill=\"#AFB78E\" stroke=\"#849464\" stroke-width=\"2\" stroke-linejoin=\"round\"/>\n</svg>\n\n<text class=\"oblast-text\">Хмельницький</text>\n`;\n      break;\n    case 9:\n      console.log(\"drawing Житомир\");\n      charityRef.classList.remove(\"hidden\");\n      oblastRender.innerHTML = `<svg width=\"105\" height=\"132\" viewBox=\"0 0 105 132\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M27.1694 10.4545L24.8208 9.1039L24.4853 8.76623L22.1368 10.1169L21.4658 12.1429V14.5065H20.4593L18.4463 12.1429L17.1042 13.1558L17.7752 14.8442V17.5455L15.0912 20.9221V22.2727L16.0977 23.6234V24.974L13.7492 26.6623V28.013L12.0717 29.3636L11.4007 31.7273V33.0779L10.0586 34.0909L9.38762 35.7792L7.7101 36.4545L6.70358 37.1299H5.36156L5.69707 38.8182L6.36808 39.4935V42.5325V43.8831L7.03909 44.2208V46.2468L6.36808 47.9351V52.3247L6.70358 53L7.03909 54.013L7.7101 54.6883V56.039V57.0519L6.36808 57.7273L6.03257 59.4156L5.36156 61.4416L4.69055 62.4545L3.68404 64.8182H1L2.34202 66.8442L3.34853 68.8701L5.36156 69.8831L6.36808 71.2338L6.70358 72.9221L6.03257 74.2727L4.69055 75.2857L5.36156 77.3117L6.70358 78.6623L8.0456 81.3636L10.7296 82.7143L11.4007 84.4026L15.4267 88.1169L16.7687 87.4416L17.1042 86.7662H18.4463L19.4528 87.7792V89.4675L20.1238 90.4805V93.5195L20.7948 94.5325V97.5714V100.948L19.1173 101.286L16.7687 102.299V103.312L17.7752 104.662L16.7687 107.026L15.4267 108.039L16.7687 109.727L18.4463 112.091L19.4528 114.455L21.1303 115.13L23.8143 116.481L25.1564 117.494L26.8339 119.519L28.1759 118.844L29.8534 118.169L32.873 118.844H36.228L38.9121 117.156L42.6026 118.169L44.9511 117.156L47.9707 118.169L51.9967 116.481H54.6808L57.3648 117.494L59.7134 116.481L60.7199 117.156L62.7329 117.494L65.4169 115.13L66.4235 113.442L67.43 111.753H70.4495L72.127 114.117V117.156L73.4691 118.169L73.8046 121.545L72.127 122.896L71.1205 124.584L73.8046 129.312L76.1531 131H84.2052L86.5537 130.325L88.9023 128.299L91.2508 127.623L93.5993 126.948V124.247L91.5863 123.909L91.9218 122.221L92.2573 120.195L91.5863 119.182V117.494H93.5993L94.9414 115.805L97.6254 115.13L97.9609 113.779L100.309 113.104L102.658 110.74L104 109.052V106.688L102.658 106.013L101.651 104.325L101.316 99.2597H102.993L104 98.2467V95.2078L102.993 94.1948V88.1169L102.322 87.7792L101.316 86.0909L99.3029 85.4156V84.0649L98.6319 79.6753H95.2769L92.5928 78.6623V77.6494L93.9349 76.2987L95.2769 75.6234L94.9414 73.5974H93.5993V72.5844L95.9479 70.8961V69.5455L94.6059 67.8571V65.8312L96.6189 64.1429L97.6254 62.4545L98.6319 61.1039L98.2964 56.7143L95.2769 56.3766L94.9414 54.6883L95.2769 51.987V49.6234L92.9283 45.9091L90.5798 44.8961V44.2208L92.5928 43.2078L94.9414 41.8571V38.1429L92.5928 34.4286L87.8958 33.0779L87.5603 31.0519V27L90.5798 23.961L91.2508 20.9221L88.9023 17.5455L87.8958 14.5065L86.2182 12.1429V8.09091L82.8632 2.68831H78.8371L76.1531 6.06494L71.1205 6.4026L67.43 10.7922L67.0945 14.1688H63.4039L62.3974 9.44156L62.0619 6.06494L55.6873 5.38961L52.6678 7.41558L50.9902 7.07792L46.9642 1H45.9577L42.6026 5.05195H36.228L32.873 1.67532L30.1889 4.37662L30.5244 7.41558L27.1694 10.4545Z\" fill=\"#AFB78E\" stroke=\"#849464\" stroke-width=\"2\" stroke-linejoin=\"round\"/>\n</svg>\n\n<text class=\"oblast-text\">Житомир</text>\n`;\n      break;\n    case 10:\n      console.log(\"drawing Вінниця\");\n      charityRef.classList.remove(\"hidden\");\n      oblastRender.innerHTML = `<svg width=\"123\" height=\"131\" viewBox=\"0 0 123 131\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M106.012 46.0592L106.739 49.3296L106.375 52.6L104.559 55.1437L102.378 56.2338L100.562 58.0507L101.652 60.231L104.195 61.3211V62.4113L102.015 64.2282L103.105 65.3183L104.559 66.0451L106.375 67.1352L106.012 71.8592H107.102L108.556 73.3127V77.6732H110.009L112.553 78.4L113.643 79.8535L111.099 81.6704L113.643 82.3972L114.006 84.2141L116.186 85.3042L118.73 88.5746L119.456 93.2986L118.003 95.1155V97.2958L122 98.0225L121.273 99.4761L119.093 102.02L116.186 103.473L114.733 101.293L113.643 100.566L111.826 101.656L110.009 103.473L108.556 104.927L111.099 107.834L114.733 109.287L118.003 112.194L119.456 114.738L117.276 115.465H114.733V116.192L112.553 117.282L110.009 115.465L107.465 116.192H105.285L103.468 117.282L104.922 120.189V122.369L102.378 123.823H96.9279L94.3844 122.369L92.2042 121.642L89.2973 123.823L85.6637 123.096H82.3934L79.1231 120.189L75.1261 119.462V123.823L71.4925 127.093L68.2222 130L64.5886 120.915L56.5946 118.372L51.5075 119.462L50.7808 121.642L48.2372 123.823L47.1471 122.369V119.462H43.8769L43.1502 118.372L45.3303 115.465L44.6036 112.921H41.6967L39.5165 114.738H38.0631L36.973 112.194L32.6126 111.468L31.8859 107.47L27.1622 106.38L24.6186 104.2L20.2583 98.7493L17.7147 97.2958H12.991L11.1742 96.2056H6.08709L5.72372 94.0254V91.4817L6.08709 89.6648L2.81682 85.3042L1 84.5775V82.9514L2.45345 80.2169L2.81682 75.1296L3.18018 74.0394L3.54354 71.4958L2.81682 70.4056L3.18018 68.9521L3.54354 57.3239L4.27027 55.8704L6.81381 54.0535L7.54054 51.5099L8.26727 51.1465H11.9009L12.2643 49.693L14.4444 49.3296H15.5345L17.3514 50.7831L19.5315 51.5099L20.985 50.7831L23.5285 49.693L24.6186 49.3296L24.982 45.6958L24.2553 43.5155V40.9718L24.982 40.6085L24.2553 39.1549V36.9746L22.8018 35.5211V32.6141L21.3483 30.0704L19.8949 27.8901L19.1682 25.7099L20.6216 24.6197L22.0751 24.2563L21.7117 20.6225L22.4384 18.4423L23.1652 16.9887L22.0751 14.8085L21.3483 12.2648L22.0751 11.538L24.2553 10.8113V9.35775L25.7087 8.63099L27.5255 7.90423L30.7958 8.63099H34.4294L37.3363 6.81408L41.3333 7.90423L43.8769 6.81408L47.1471 7.90423L51.5075 6.08732H54.4144L57.3213 7.17746L59.8649 6.08732L60.955 6.81408L63.1351 7.17746L66.042 4.6338L67.1321 2.8169L68.2222 1H71.4925L73.3093 3.54366V6.81408L74.7628 7.90423L75.1261 11.538L73.3093 12.9915L72.2192 14.8085L75.1261 19.8958L77.6697 21.7127H86.3904L88.9339 20.9859L91.4775 18.8056L94.021 18.0789L96.5646 17.3521L98.7447 18.4423L98.018 19.8958L96.9279 21.7127L97.2913 23.5296L99.4715 25.3465L100.198 26.4366L98.7447 28.6169L99.4715 29.707L100.562 31.1606L100.198 33.3408L97.6547 34.7944L97.2913 37.338L98.7447 38.0648L100.198 40.6085L102.378 42.062L106.012 46.0592Z\" fill=\"#AFB78E\" stroke=\"#849464\" stroke-width=\"2\" stroke-linejoin=\"round\"/>\n</svg>\n\n<text class=\"oblast-text\">Вінниця</text>\n`;\n      break;\n    case 11:\n      console.log(\"drawing Одеса\");\n      charityRef.classList.remove(\"hidden\");\n      oblastRender.innerHTML = `<svg width=\"101\" height=\"139\" viewBox=\"0 0 101 139\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M27.8433 9.25887L25.6269 11.2021L26.3657 12.1738L27.597 13.3883H30.306L31.0448 12.1738L33.5075 12.4167L34.7388 13.3883V15.3316L36.2164 16.789L34.7388 19.9468L36.2164 21.8901L35.2313 24.0762V28.2057L33.5075 30.3918L33.0149 32.578V34.2784L34.4925 35.7358L36.9552 36.2216L39.6642 39.8652L40.6493 42.5372L42.3731 43.0231L44.3433 41.0798L45.8209 41.3227L46.806 42.0514V45.695L45.3284 46.6667L46.0672 50.3103L44.5896 51.7677V52.7394H46.806L47.5448 54.1968L46.3134 58.0833L47.2985 60.0266L49.0224 60.7553L51.2388 62.4557L52.9627 62.9415H55.6716L57.6418 65.6135V73.8723L58.1343 75.5727L57.6418 77.0301L56.1642 78.0018L56.903 79.7021L60.3507 81.6454L62.0746 84.3174L61.5821 85.289H56.4104L55.6716 86.2606H53.209V84.0745L52.9627 83.3457L51.2388 81.8883L50.0075 81.6454L48.5299 83.3457L48.2836 84.8032L46.5597 85.289L45.3284 83.8316L43.3582 83.5887L42.6194 80.4309H41.3881L39.9104 82.3741H37.694L35.9701 84.5603H34.4925L34.2463 78.0018H32.7687L30.5522 78.9734L25.8731 81.8883L25.3806 85.289L25.8731 86.7465V89.9043L28.5821 93.305V94.7624L26.3657 96.7057L25.8731 98.6489L26.3657 100.835V102.293L23.6567 103.021L21.4403 102.778L18.9776 104.965V108.608L16.5149 112.009H13.806L13.0672 113.709L11.5896 115.167H10.6045V117.596L12.0821 119.296V121.482L10.6045 123.911L7.64925 124.397L5.18657 123.426L1.49254 124.397L1 125.855L2.97015 127.555L4.69403 131.684L7.40299 134.356L11.5896 135.328L13.806 136.785L18.2388 137.271L19.4701 136.785L19.2239 133.385L20.7015 131.684H21.9328V134.113L23.4104 135.328L25.8731 134.113L29.3209 130.956L34.2463 129.012L40.403 128.041L47.0522 132.17L48.0373 133.871V136.3V138H49.2687L50.9925 135.085L51.4851 130.47L50.2537 127.555L47.0522 127.312L46.806 125.855L47.2985 123.911V122.697L46.3134 121.725L46.0672 116.138L46.806 113.466H48.2836L48.7761 115.167L49.2687 117.839L51.2388 119.782H51.9776L54.4403 118.082L53.9478 117.11L53.4552 114.681L55.6716 114.438L56.4104 112.495L59.1194 109.823H60.3507L62.0746 110.794H63.0597V108.365L64.291 107.879L65.2761 109.337L66.2612 109.094L68.2313 106.179L72.9104 101.078V97.9202L71.4328 95.977L71.1866 94.2766L67.7388 92.3333L63.5522 88.9326L63.0597 86.2606L64.291 84.3174L66.2612 83.3457L67.7388 83.5887L68.2313 85.7748L70.2015 87.4752V89.9043L72.9104 91.8475L73.403 94.2766L75.8657 95.977L78.3284 94.7624L81.2836 90.633V87.4752L84.2388 84.0745V78.4876L85.2239 76.5443H88.9179L93.3507 74.844L96.306 73.8723V68.7713L97.0448 67.5567V65.1277L93.8433 62.4557L92.1194 59.5408L92.8582 58.5691L95.8134 58.0833H98.2761L99.0149 56.8688V55.6543L100 54.1968V52.2535L99.0149 51.039V49.8245H97.0448L95.3209 49.0957L94.3358 47.8812L95.3209 46.6667L96.306 44.9663L95.3209 44.2376H92.8582V44.9663H91.6269L90.3955 44.2376H87.4403L86.209 40.594V37.922V35.0071V34.5213L86.9478 32.8209L85.2239 30.6348L83.9925 29.1773L83.0075 27.477L81.7761 29.1773L80.2985 28.6915L78.8209 27.477L77.3433 27.9628L76.3582 28.6915H74.1418L73.6493 27.477H72.4179V24.805V22.3759L71.4328 21.8901V20.6755L69.709 18.9752L69.2164 16.789L68.7239 12.9025L66.7537 11.6879V9.50177L66.2612 8.28723V7.55851L67.9851 7.0727L69.709 6.58688L68.7239 4.64362H66.7537H62.5672L60.8433 3.91489L60.3507 2.70035V1L58.8731 1.48582H57.1493V1.97163L55.6716 2.70035L53.9478 1.48582L52.2239 1.97163H50.7463L49.5149 2.70035L50.5 4.64362V6.10106L48.7761 7.0727H45.0821L43.3582 6.10106L41.8806 5.61525L39.9104 7.0727L37.4478 6.58688H35.2313L33.0149 4.64362L30.306 4.1578V7.0727L27.8433 9.25887Z\" fill=\"#AFB78E\" stroke=\"#849464\" stroke-width=\"2\" stroke-linejoin=\"round\"/>\n</svg>\n\n<text class=\"oblast-text\">Одеса</text>\n`;\n      break;\n    case 12:\n      console.log(\"drawing Черкаси\");\n      charityRef.classList.remove(\"hidden\");\n      oblastRender.innerHTML = `<svg width=\"166\" height=\"128\" viewBox=\"0 0 166 128\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M23.041 127L18.9317 126.246V123.982L20.426 122.096L19.6788 117.192L17.0638 113.796L14.8223 112.665L14.4487 110.778L11.8337 110.024L14.4487 108.138L13.328 106.629L10.713 105.874H9.21868V101.347L7.72437 99.8383H6.60364L6.97722 94.9341L5.10934 93.8024L3.61503 93.0479L2.49431 91.9162L4.73576 90.0299V88.8982L2.12073 87.7665L1 85.503L2.86788 83.6168L5.10934 82.485L6.97722 79.8443L7.3508 76.4491L10.3394 77.5808H12.5809L14.4487 76.4491L16.6902 73.8084V71.5449H17.8109H20.426L23.4146 70.0359L27.5239 66.6407L27.8975 68.9042L29.3918 70.0359L33.5011 69.6587L35.7426 71.5449L37.6105 72.6767L38.7312 68.9042L40.2255 65.8862H47.697L49.5649 64L52.9271 66.6407H54.795L56.2893 65.1317L61.8929 65.509L62.6401 64V61.7365L64.8815 58.3413L68.2437 55.3234L69.738 53.8144L71.9795 50.4192L73.1002 48.5329L70.1116 46.6467L71.9795 45.1377L73.8474 44.006L73.1002 39.1018L73.8474 36.4611V34.5749L74.221 33.4431L74.5945 29.2934L80.1982 25.8982L83.5604 25.521L86.1754 27.0299L93.2733 28.9162H95.5148L97.0091 27.4072L98.5034 24.7665L100.745 22.8802L102.613 20.2395V17.976L104.854 16.8443V15.7126L103.36 13.8263V11.5629L105.601 8.92216L108.216 7.79042L109.337 6.65868V5.1497L108.59 4.01796V2.13174L109.711 1H112.699L114.567 2.88623L115.688 4.77246L119.797 6.65868L120.918 9.2994V13.8263L124.654 15.7126L129.51 20.6168V22.8802L128.39 25.521L126.895 27.4072L128.763 30.0479L131.752 33.0659L135.861 33.8204L136.608 39.1018L139.223 40.2335L143.333 44.006L145.2 48.1557L143.333 53.0599L145.2 56.8323L152.672 60.2275L155.287 64.7545L161.638 73.4311L165 77.9581L163.879 79.4671L154.913 77.9581L147.815 82.485L150.431 86.6347L149.31 88.1437L139.223 92.6707H135.861L131.005 84.3713H123.907L117.929 91.1617V94.5569L117.182 95.6886L112.326 93.8024L108.216 98.3293H105.975L102.986 92.6707H98.1298L97.0091 94.5569H90.2847V99.8383L84.6811 107.383H82.8132L79.451 106.629H75.3417L71.2323 108.892L67.8702 107.383L57.41 106.629L54.0478 106.251L49.9385 109.647L45.8292 114.551V120.964H43.2141L41.3462 119.455H39.1048L37.2369 122.85H35.369L31.2597 126.246L28.6446 124.737L23.041 127Z\" fill=\"#AFB78E\" stroke=\"#849464\" stroke-width=\"2\" stroke-linejoin=\"round\"/>\n</svg>\n\n<text class=\"oblast-text\">Черкаси</text>\n`;\n      break;\n    case 13:\n      console.log(\"drawing Ужгород\");\n      charityRef.classList.remove(\"hidden\");\n      oblastRender.innerHTML = `<svg width=\"150\" height=\"123\" viewBox=\"0 0 150 123\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M45.5 6.5L49 9.5L50 10V15L51.5 18L54 20L57 24L61 25H65L66 29V31.5L71.5 33.5H75.5L79.5 35.5L81 38H85.5L87 39H88.5L89.5 40.5L92 41.5L95 44.5L96.5 47.5H100.5L102 49.5V53L103.5 55L107 58V61L110 61.5L113.5 64L118.5 62.5V61H123V64L122 65.5L121 71L122 75.5L126.5 77.5L129 75.5H132L134.5 78L138 82L143 86.5V89.5L145 91.5V94L142.5 97L145 101.5L149 104.5V108L148 111L146 113V116L145 117.5L136 116.5L129 119L127 121.5H125L122 119L118.5 120L116 117L112.5 113L110 112L105.5 115L103 116.5H101L98.5 113L94 111L87 109L83 106L80.5 108L76.5 109L71.5 104.5L61.5 95H59.5L53.5 102L52 106H50.5L48.5 103H47L45 104.5L43.5 106H41L42 104.5L41 99L39.5 95L35 92H29.5L27 90.5L21 78H13.5L11.5 75.5L7 61H4L2 59L1 46L4 43L11.5 40.5L13.5 38L14.5 35L16 28L18.5 24V18.5L22 16.5L23 13.5L31.5 6.5V2L33 1L38 5L45.5 6.5Z\" fill=\"#AFB78E\" stroke=\"#849464\" stroke-width=\"2\" stroke-linejoin=\"round\"/>\n</svg>\n\n<text class=\"oblast-text\">Ужгород</text>\n`;\n      break;\n    case 14:\n      console.log(\"drawing Львів\");\n      charityRef.classList.remove(\"hidden\");\n      oblastRender.innerHTML = `<svg width=\"127\" height=\"130\" viewBox=\"0 0 127 130\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M6.16224 111.294V106.499L6.8997 103.179L5.79351 100.965L2.84366 97.6455L1 95.4323V93.219L3.94985 86.5792L3.58112 80.6772L2.47493 77.7262L1.73746 74.0375V68.8732L2.47493 66.6599L9.11209 60.0202L15.0118 53.7493L20.9115 47.1095L26.4425 41.2075L33.8171 34.5677L37.8732 29.7723L42.6667 27.1902L46.354 24.6081L49.3038 20.9193L52.2537 16.4928L54.8348 16.1239L59.997 15.755L65.8968 15.0173L68.4779 10.5908L70.6903 8.37752L71.4277 6.90202V2.4755L72.5339 1L74.7463 2.10663L76.59 4.31988L78.8024 5.79539L80.646 3.58213L82.1209 2.84438L85.0708 4.31988V7.27089H86.5457L88.7581 9.48415L87.6519 10.9597L86.5457 12.0663V15.755L87.6519 17.5994L89.4956 16.4928L94.2891 17.5994V19.0749L96.8702 20.9193L98.7139 24.9769L100.558 23.1326H103.507L108.67 23.8703L111.619 24.9769H111.988L112.357 26.4524L111.619 27.1902L112.357 28.2968L113.832 29.7723L114.201 29.0346L116.782 28.2968L117.888 29.0346L118.257 30.5101H117.519V32.3545L115.676 33.0922V34.1988L116.782 35.3055V36.4121L115.676 37.5187L115.307 39.3631L116.413 40.8386V42.683H117.519L118.625 43.7896L119.363 45.634H120.838L122.313 46.3718L123.05 45.634H125.263L126 48.2161V50.0605L125.263 53.0115L124.525 54.8559L123.05 57.438L120.469 58.1758L118.257 59.6513H113.832H111.619L109.776 61.8646L110.145 62.9712L110.513 67.7666H109.038L105.72 68.5043L104.245 68.8732V72.1931L103.139 73.2997H101.664L100.926 75.1441H98.3451H97.2389L95.0266 75.8818V76.9885L93.1829 78.464L92.0767 79.5706V81.415H90.9705L88.7581 79.9395H86.9145L86.5457 78.8328L84.3333 78.464L79.5398 78.0951L78.8024 78.8328L78.0649 80.3084L79.1711 82.1527L78.0649 83.6282L77.3274 84.366L76.2212 85.8415L76.9587 86.9481V89.1614L76.2212 91.3746L75.115 92.4813L74.0089 95.0634L75.115 97.6455L77.3274 98.0144L78.0649 99.4899L77.3274 102.072H72.5339L71.4277 102.81H69.2153L68.4779 103.179L67.003 103.548L62.2094 102.81H60.3658L58.5221 104.285L57.0472 103.548L55.941 102.81L54.4661 104.285H48.5664L47.4602 103.179H45.2478L44.1416 104.285L43.0354 106.13L42.6667 109.081H40.823L39.3481 110.187L37.8732 110.925L37.5044 113.507L36.3982 114.983V116.458L35.292 117.565V120.147L36.3982 121.622V124.205L34.9233 125.68V129H33.4484L32.3422 128.262H29.0236L27.9174 126.418L24.9676 124.942H22.0177L17.9617 123.467V121.622L17.2242 118.671H14.2743L11.3245 117.934L9.11209 114.983L7.26844 113.507L6.16224 111.294Z\" fill=\"#AFB78E\" stroke=\"#849464\" stroke-width=\"2\" stroke-linejoin=\"round\"/>\n</svg>\n\n<text class=\"oblast-text\">Львів</text>\n`;\n      break;\n    case 15:\n      console.log(\"drawing Івано-Франківськ\");\n      charityRef.classList.remove(\"hidden\");\n      oblastRender.innerHTML = `<svg width=\"101\" height=\"132\" viewBox=\"0 0 101 132\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M47.2257 117.499L44.9144 114.412V111.326L46.4553 109.783L47.2257 107.469V104.769L44.144 102.454L42.2179 98.9822L44.144 96.6677V94.7389L42.6031 93.1958V90.8813L38.751 87.4095L36.0545 84.3234L34.1284 82.3947H31.8171L29.8911 83.9377L26.4241 82.3947L25.6537 78.9228L26.4241 74.6795L27.1946 73.5223V71.2077H23.7276V72.365L19.8755 73.5223L17.179 71.5935L14.8677 71.2077V68.8932L12.1712 66.5786L11.0156 65.0356V62.3353L9.85992 60.7923H6.77821L5.62257 58.4777L3.31128 56.1632L1.38521 55.3917L1 54.6202V50.7626L2.54086 49.2196V46.5193L1.38521 44.9763V42.276L2.54086 41.1187V39.5757L3.6965 38.0326L4.08171 35.3323L5.62257 34.5608L7.16342 33.4036H9.08949L9.47471 30.3175L10.6304 28.3887L11.786 27.2315H14.0973L15.2529 28.3887H21.4163L22.9572 26.8457L24.1128 27.6172L25.6537 28.3887L27.5798 26.8457H29.5058L34.5136 27.6172L36.0545 27.2315L36.8249 26.8457H39.1362L40.2918 26.0742H45.2996L46.07 23.3739L45.2996 21.8309L42.9883 21.4451L41.8327 18.7448L42.9883 16.0445L44.144 14.8872L44.9144 12.5727V10.2582L44.144 9.10089L45.2996 7.55786L46.07 6.78635L47.2257 5.24332L46.07 3.31454L46.8405 1.77151L47.6109 1L52.6187 1.38576L54.93 1.77151L55.3152 2.92878H57.2412L59.5525 4.47181H60.7082L62.249 7.55786L63.7899 10.6439V13.3442L64.9455 17.5875V21.4451L66.8716 22.9881L67.2568 24.9169L65.716 27.2315L63.7899 27.6172L64.5603 28.7745V31.4748H65.716L66.8716 33.0178H70.7237L71.1089 34.5608L69.9533 35.7181L68.7977 36.4896L66.8716 36.8754V38.8042L68.0272 39.5757L68.7977 41.5045L71.1089 43.4332H73.8054L75.7315 44.5905L77.2724 46.1335V48.8338L77.6576 50.7626L78.8132 49.6053H81.1245L80.7393 52.3056V55.0059H81.8949L83.0506 53.0772H87.2879L88.8288 53.8487L91.5253 54.6202V55.7774L93.8366 56.9347H95.7626L97.3035 59.2493L98.8444 60.4065V63.4926L100 64.6498L99.6148 67.7359L98.0739 68.1217L94.9922 69.6647V70.822L96.1479 74.6795V76.2225L97.3035 77.7656V80.8516L96.1479 81.2374V83.9377L94.9922 85.8665H92.2957L91.5253 85.095H88.8288L86.9027 85.8665L84.2062 86.638L81.8949 88.5668L79.9689 91.6528H78.0428L76.8872 94.3531L75.3463 95.5104H72.6498L72.2646 99.368H71.8794L70.3385 101.682L68.0272 103.997H66.1012L64.9455 105.154L64.1751 107.855L63.0195 108.626L62.6342 111.326L61.4786 111.712V115.955L62.249 117.499V119.813L63.7899 120.97V125.599L63.0195 125.985L60.7082 130.614L59.1673 131L56.0856 126.757L52.2335 125.985L49.1517 122.513V119.813L47.2257 117.499Z\" fill=\"#AFB78E\" stroke=\"#849464\" stroke-width=\"2\" stroke-linejoin=\"round\"/>\n</svg>\n\n<text class=\"oblast-text\">Івано-Франківськ</text>\n`;\n      break;\n    case 16:\n      console.log(\"drawing Чернігів\");\n      charityRef.classList.remove(\"hidden\");\n      oblastRender.innerHTML = `<svg width=\"119\" height=\"135\" viewBox=\"0 0 119 135\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M3.42308 71.35L2.73077 74.15L1.69231 78L2.73077 79.05L4.46154 81.85V86.4V90.95L6.53846 93.05V97.6L11.0385 101.1L11.3846 102.5L10 104.6L10.6923 108.45H14.5L15.5385 109.5L19.3462 109.15L22.1154 107.05H24.8846L25.5769 109.15L27.6538 110.9L28.6923 112.65L29.7308 114.4V116.15H28.6923V117.9L32.1538 121.4V123.5L33.8846 124.9L34.9231 123.5H37L39.0769 124.9L41.1538 123.5H42.5385H44.9615H47.7308L48.7692 121.4L50.1538 120.35L52.9231 119.65L54.3077 117.2L56.0385 116.15L58.1154 117.9V119.65L60.8846 121.4H63.6538V123.5H62.2692L60.8846 124.9L61.5769 127L65.3846 129.45V130.85L67.4615 133.3L71.2692 134L73.3462 132.6L75.4231 130.85L76.8077 129.45L78.1923 130.85H79.5769L80.9615 129.45L83.0385 131.9H85.1154L86.8462 132.6L87.5385 131.9H89.6154L91.6923 132.6L93.4231 130.85L96.8846 129.45L100 127.7L100.692 126.3L102.077 125.6L104.846 122.45L105.538 120.853V119.65L106.577 117.9L106.923 114.05L106.231 113.35L104.846 112.3V110.55L105.538 109.15L107.962 108.8L109 107.4L109.346 106.35L108.308 104.419L106.577 104.25L106.231 102.5L107.269 102.15L107.962 99.7L108.308 97.95L110.038 96.55V92.7L109.346 91.65V87.45L105.885 87.8L104.846 86.75L104.154 85.35L102.077 85L101.385 83.95L100 83.25V78.7L101.038 78.35L102.077 76.25L103.115 74.5L104.154 72.75V70.3L103.462 68.9L102.077 67.5L102.769 64.7L104.154 63.3L105.885 62.25L106.231 61.2L106.577 59.1L107.269 57.7L106.923 52.8L107.615 51.05V50L106.577 49.3L105.538 47.9L106.923 47.2L106.231 45.1L105.192 43.7L103.115 42.65V36.35L103.808 34.95L105.192 33.9L105.538 32.15L106.923 30.75H108.308L110.038 29.35L112.808 27.95L114.192 26.9V22.35H115.231L116.615 20.95L118 20.25V18.85L115.577 17.1L114.192 15.35L111.769 13.6L111.077 12.2L111.769 10.8L113.154 9.4V5.55L114.538 5.2V1.7H109.346L108.654 1H107.269L99.3077 6.6L96.8846 9.75H95.8462L93.0769 7.65L88.5769 8.7L82.3462 5.2H74.0385L71.9615 17.8L65.7308 23.75L61.2308 22.7L57.0769 23.05L55 19.9H33.8846L29.7308 23.4L26.2692 20.6L18.6538 22.35L17.9615 26.2L12.0769 31.1L11.3846 33.55L6.19231 40.2L5.5 44.05L2.38462 47.55L3.07692 51.05L1 52.45L1.34615 56.3L3.76923 59.1L3.42308 64L5.5 66.45V70.3L3.42308 71.35Z\" fill=\"#AFB78E\" stroke=\"#849464\" stroke-width=\"2\" stroke-linejoin=\"round\"/>\n</svg>\n\n<text class=\"oblast-text\">Чернігів</text>\n`;\n      break;\n    case 17:\n      console.log(\"drawing Тернопіль\");\n      charityRef.classList.remove(\"hidden\");\n      oblastRender.innerHTML = `<svg width=\"80\" height=\"135\" viewBox=\"0 0 80 135\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M77.4 130.805L78.6 132.402L77.4 134H75L73 132.802L70.2 131.604H67L65.4 130.405L63.8 128.408V126.411L61.8 124.414H59.4L57.8 125.613L56.2 126.411L53 126.012L51.8 125.213L49.8 121.619L49 120.82H47.8L46.2 122.417H45.8L44.2 120.82L42.2 120.42L41.4 120.021L41.8 116.826L40.6 115.628V112.432L39 111.234L37.4 108.838H35.4L33 107.64V106.441L30.2 105.643L28.6 104.844H24.2L23 106.841H21.8V104.045L22.2 101.249H19.8L18.6 102.447L18.2 100.45V97.6547L16.6 96.0571L14.6 94.8589H11.8L9.4 92.8619L8.6 90.8649L7.4 90.0661V88.0691L9.4 87.6697L10.6 86.8709L11.8 85.6727L11.4 84.0751H7.4L6.2 82.4775H5V79.6817L4.2 78.4835L6.2 78.0841L7.8 75.6877L7.4 73.6907L5.4 72.0931V68.0991L4.2 63.7057V60.9099L2.6 57.7147L1 54.5195V52.5225L2.2 51.3243L4.2 49.7267V48.5285L6.6 47.7297H7.8H10.6L11.4 45.7327H13L14.2 44.5345V40.9399L15.8 40.5405L19.4 39.7417H21L20.6 34.5495L20.2 33.3514L22.2 30.955H24.6H29.4L31.8 29.3574L34.6 28.5586L36.2 25.7628L37 23.7658L37.8 20.5706V18.5736L37 15.7778L38.2 14.5796L39.8 12.5826L40.2 10.5856L38.6 9.78679V8.98799L40.2 7.78979L40.6 6.59159L41.4 6.99099L43 7.39039L43.8 8.18919H49L49.8 7.39039H56.6L58.6 6.59159V4.59459H61L61.8 3.3964L63.8 2.5976L64.6 1.7988H69.4L70.2 1L72.2 2.5976L73.8 3.3964L75 2.5976L76.6 2.997L75.8 5.39339V6.59159V8.98799L76.6 9.78679L76.2 11.7838L77.4 12.1832L79 14.1802L75.8 14.979V16.5766L76.6 18.973L75.8 20.1712L75 22.967L73 24.5646L72.2 30.5556L73.4 31.3544V35.7477L75.8 38.9429V41.3393L75 42.5375L74.2 45.3333L75.8 47.3303L75 49.7267L74.2 52.1231L71.4 54.9189L70.2 56.5165L71.4 60.9099L72.2 64.9039L73.4 68.8979L74.2 70.8949V76.8859L73.4 78.0841L71.4 79.6817V83.6757L72.2 84.8739V88.4685L71.4 91.6637L69.8 92.8619L71.4 94.4595V96.8559L70.2 97.6547V104.045L71.4 105.243L70.2 106.042V108.838L72.2 111.234L71.4 112.432V116.426L70.2 120.42L72.6 122.417L73.8 125.213L75.4 128.009L77.4 130.805Z\" fill=\"#AFB78E\" stroke=\"#849464\" stroke-width=\"2\" stroke-linejoin=\"round\"/>\n</svg>\n\n<text class=\"oblast-text\">Тернопіль</text>\n`;\n      break;\n    case 18:\n      console.log(\"drawing Чернівці\");\n      charityRef.classList.remove(\"hidden\");\n      oblastRender.innerHTML = `<svg width=\"168\" height=\"87\" viewBox=\"0 0 168 87\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M3 82.5L1 83L2.5 85.5L13 85L26 70.5L58 69.5L66 66L81.5 65.5L89.5 55L90.5 49L93.5 47.5L99 47L101 45.5H103.5L105 47L108 46.5L111 43.5L120 43L123 38.5V33L125 31L128.5 30.5L132.5 35L136 35.5L138 32L139.5 31.5L145 34L148 35.5L151.5 32.5L156.5 28.5L161.5 29L166.5 26.5L166 24.5V20.5L166.5 18L162 12L159.5 11H156.5L153 13L152 16.5L149 14.5H145L142.5 17L141 16L137.5 15.5V14L134 13.5L132 15L129.5 17L128 15.5L127 14L126 11L120 12.5L121 15L119 17.5L117.5 18.5V16L115 15.5L113 14.5L112.5 21L111.5 25H110L108 24L107.5 21.5L105.5 17L100 16.5L98.5 18.5H95.5L93 17L89.5 15.5H85.5L83.5 14L81.5 11.5V9L79 6.5H76L74 8L72 9L68 8.5L66.5 7.5L64 3L63 2H61.5L59.5 4H59L57 2L54.5 1.5L53.5 1L51.5 1.5L47.5 3.5V5L49 10V12L50.5 14V18L49 18.5V22L47.5 24.5H44L43 23.5H39.5L37 24.5L33.5 25.5L30.5 28L28 32H25.5L24 35.5L22 37H18.5L18 42H17.5L15.5 45L12.5 48H10L8.5 49.5L7.5 53L6 54L5.5 57.5L4 58V63.5L5 65.5V68.5L7 70V76L6 76.5L3 82.5Z\" fill=\"#AFB78E\" stroke=\"#849464\" stroke-width=\"2\" stroke-linejoin=\"round\"/>\n</svg>\n\n<text class=\"oblast-text\">Чернівці</text>\n`;\n      break;\n    case 19:\n      console.log(\"drawing Дніпро\");\n      charityRef.classList.remove(\"hidden\");\n      oblastRender.innerHTML = `<svg width=\"172\" height=\"116\" viewBox=\"0 0 172 116\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M160.877 34.5705L159.83 31.4233H156.339V33.8712H152.499L150.754 31.4233L149.008 29.6748L146.914 31.773V35.6196H145.168L144.819 37.3681L141.678 38.4172L140.979 33.1718L139.583 31.773V31.4233L136.092 28.6258L133.998 27.9264L134.696 23.7301L129.111 19.184H127.016L127.366 15.6871L127.016 12.5399L124.224 11.1411L121.431 11.8405L118.639 14.9877L111.657 12.5399L107.468 11.1411L102.93 12.5399L97.694 7.64417L92.4579 3.79755L89.3162 1.34969H85.1273H83.3819H79.193L73.9569 1L70.8152 3.79755L66.6263 6.2454L62.4374 7.29448L59.9938 8.69325L57.5503 12.8896L54.7577 17.7853L53.0123 19.8834V21.2822L54.7577 22.681V26.5276L54.0595 30.0245L50.5688 27.9264L46.3799 25.4785L42.191 24.7791L38.7002 25.4785L36.9548 27.5767L33.115 29.3252L28.577 28.2761L23.6899 29.3252L25.4353 32.4724L29.9733 34.5705L34.1622 36.319L33.115 38.7669L28.577 41.5644L23.6899 44.7117L20.1992 46.1104V49.6074L21.5955 54.8528V58.3497L23.6899 61.4969L22.9918 64.2945L20.1992 66.7423L16.3593 69.1902L13.2177 70.9386L9.02875 76.8834L5.53799 78.6319L3.44353 80.0307L2.3963 82.8282V85.9755L4.83984 88.4233L4.14168 90.5215V96.8159L5.53799 99.6135H2.3963L1 101.362L2.3963 105.209L3.44353 107.307L6.58522 109.405H9.02875L10.4251 111.153H15.3121L17.4066 115L19.501 113.252L22.6427 112.552L24.7372 109.405H26.4825L28.577 111.853L32.0678 113.951H36.6058L41.8419 112.552H44.9836H52.3142L56.8522 115L63.4846 112.552L70.117 109.405H75.7023H82.3347L87.5708 107.307L85.8255 102.761L86.8727 100.313V94.3681L84.4292 92.6196L85.8255 90.5215L84.4292 88.4233L80.9384 86.3251L79.8912 83.8773L82.3347 82.4785H84.4292L85.1273 80.7301L82.3347 77.9325L79.8912 76.5337V75.135H81.6366V73.7362L80.9384 71.9877V69.8896H81.6366L83.0329 71.638L85.8255 71.9877L88.9671 70.589V69.5399H96.6468L98.0431 68.1411L101.883 68.4908L103.977 70.589L106.77 69.5399L109.563 69.8896V70.589L113.402 69.1902L116.195 68.1411L120.384 68.4908L124.224 70.589L127.016 68.4908H129.809L130.507 73.0368H132.253L132.951 71.9877L133.998 73.0368L132.951 75.135L134.696 77.9325L137.489 79.3313V81.4294L134.696 82.4785L135.394 84.5767L138.536 85.6258L139.583 83.8773L140.281 82.4785H142.027L142.725 84.5767L144.819 85.6258L147.263 85.2761L148.31 83.8773H151.103L152.848 84.5767L154.943 82.8282L155.641 79.681L159.83 77.5828L158.782 76.8834V74.7853L156.339 72.6871V69.1902V67.7914L158.084 66.3926H163.32L165.764 69.1902H169.604L169.953 66.3926V63.2454L168.906 60.4478L169.953 60.0982L171 57.6503V54.8528L169.255 51.7055L165.415 50.3067L165.764 42.2638V38.0675L168.207 35.9693L167.16 34.5705L164.368 34.2209L162.622 35.9693L160.877 34.5705Z\" fill=\"#AFB78E\"/>\n<path d=\"M3.44353 80.0307L1 78.6319M3.44353 80.0307L5.53799 78.6319L9.02875 76.8834L13.2177 70.9386L16.3593 69.1902L20.1992 66.7423L22.9918 64.2945L23.6899 61.4969L21.5955 58.3497V54.8528L20.1992 49.6074V46.1104L23.6899 44.7117L28.577 41.5644L33.115 38.7669L34.1622 36.319L29.9733 34.5706L25.4353 32.4724L23.6899 29.3252L28.577 28.2761L33.115 29.3252L36.9548 27.5767L38.7002 25.4785L42.191 24.7791L46.3799 25.4785L50.5688 27.9264L54.0595 30.0245L54.7577 26.5276V22.681L53.0123 21.2822V19.8834L54.7577 17.7853L57.5503 12.8896L59.9938 8.69325L62.4374 7.29448L66.6263 6.2454L70.8152 3.79755L73.9569 1L79.193 1.34969H83.3819H85.1273H89.3162L92.4579 3.79755L97.694 7.64417L102.93 12.5399L107.468 11.1411L111.657 12.5399L118.639 14.9877L121.431 11.8405L124.224 11.1411L127.016 12.5399L127.366 15.6871L127.016 19.184H129.111L134.696 23.7301L133.998 27.9264L136.092 28.6258L139.583 31.4233V31.773L140.979 33.1718L141.678 38.4172L144.819 37.3681L145.168 35.6196H146.914V31.773L149.008 29.6748L150.754 31.4233L152.499 33.8712H156.339V31.4233H159.83L160.877 34.5706L162.622 35.9693L164.368 34.2209L167.16 34.5706L168.207 35.9693L165.764 38.0675V42.2638L165.415 50.3067L169.255 51.7055L171 54.8528V57.6503L169.953 60.0982L168.906 60.4479L169.953 63.2454V66.3926L169.604 69.1902H165.764L163.32 66.3926H158.084L156.339 67.7914V69.1902V72.6871L158.782 74.7853V76.8834L159.83 77.5828L155.641 79.681L154.943 82.8282L152.848 84.5767L151.103 83.8773H148.31L147.263 85.2761L144.819 85.6258L142.725 84.5767L142.027 82.4785H140.281L139.583 83.8773L138.536 85.6258L135.394 84.5767L134.696 82.4785L137.489 81.4294V79.3313L134.696 77.9325L132.951 75.135L133.998 73.0368L132.951 71.9877L132.253 73.0368H130.507L129.809 68.4908H127.016L124.224 70.589L120.384 68.4908L116.195 68.1411L113.402 69.1902L109.563 70.589V69.8896L106.77 69.5399L103.977 70.589L101.883 68.4908L98.0431 68.1411L96.6468 69.5399H88.9671V70.589L85.8255 71.9877L83.0329 71.638L81.6365 69.8896H80.9384V71.9877L81.6365 73.7362V75.135H79.8912V76.5337L82.3347 77.9325L85.1273 80.7301L84.4292 82.4785H82.3347L79.8912 83.8773L80.9384 86.3252L84.4292 88.4233L85.8255 90.5215L84.4292 92.6196L86.8727 94.3681V100.313L85.8255 102.761L87.5708 107.307L82.3347 109.405H75.7023H70.117L63.4846 112.552L56.8522 115L52.3142 112.552H44.9836H41.8419L36.6057 113.951H32.0678L28.577 111.853L26.4825 109.405H24.7372L22.6427 112.552L19.501 113.252L17.4066 115L15.3121 111.153H10.4251L9.02875 109.405H6.58522L3.44353 107.307L2.3963 105.209L1 101.362L2.3963 99.6135H5.53799L4.14168 96.8159V90.5215L4.83984 88.4233L2.3963 85.9755V82.8282L3.44353 80.0307Z\" stroke=\"#849464\" stroke-width=\"2\" stroke-linejoin=\"round\"/>\n</svg>\n\n<text class=\"oblast-text\">Дніпро</text>\n`;\n      break;\n    case 20:\n      console.log(\"drawing Запоріжжя\");\n      charityRef.classList.remove(\"hidden\");\n      oblastRender.innerHTML = `<svg width=\"148\" height=\"132\" viewBox=\"0 0 148 132\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M12.9184 48.4425L5.84184 51.0575V57.408L8.82143 63.3851H14.0357V62.2644L15.1531 60.7701H17.3878L20.7398 64.1322L18.8776 68.2414L19.9949 73.0977L23.3469 77.2069V82.4368L24.4643 85.0517L28.5612 85.7989L30.7959 87.6667L34.8929 91.0287V93.6437L33.4031 94.3908L31.9133 99.2471L30.7959 101.862H28.5612L29.3061 104.851L33.4031 105.598V108.213L31.9133 110.454L34.8929 112.695L38.2449 113.443L39.3622 116.431L44.2041 117.552L47.9286 118.299V119.793L49.4184 128.011L50.9082 131L53.1429 128.759L57.2398 124.649L56.8673 120.54L55.0051 118.299V116.805L56.8673 116.431L59.8469 120.914L60.5918 125.397L62.0816 126.891H63.9439L66.551 122.408L71.0204 118.672L76.9796 114.937L80.7041 108.96L85.9184 104.851L92.25 101.862L97.4643 100.741L103.423 99.9943L106.031 102.983H107.52L109.383 98.5L114.224 94.7644L120.184 92.8966L123.163 91.4023H126.143L130.24 94.0172H132.474L134.337 91.7759L134.709 88.7874L141.786 82.8103L139.551 79.8218L140.296 77.5805L141.786 76.4598H144.02V74.9655L142.903 74.592V72.7241L144.765 71.2299L142.903 70.4828H140.296L139.551 69.7356L138.434 67.1207L135.827 64.1322L133.964 63.3851L132.474 61.8908L131.357 60.7701L132.474 59.2759L133.964 57.0345L135.082 55.9138L132.474 55.5402V54.046L133.964 52.1782L136.571 53.6724H138.806L140.296 51.431L141.041 47.3218H144.765L145.51 44.7069L147 42.4655L145.51 40.5977L141.041 40.2241L139.551 39.1035L136.571 36.8621L135.082 34.9943L132.474 33.5L129.867 35.7414L128.378 34.2471L125.026 32.3793L122.046 30.8851V27.8966L119.811 26.7759L118.321 22.2931L113.852 20.7989V15.9425L111.99 14.8218L111.245 13.3276L110.5 16.6897L108.265 18.5575L106.403 17.8103H103.423L102.306 19.3046L99.699 19.6782L97.4643 18.5575L96.7194 16.3161H94.8571L94.1122 17.8103L92.9949 19.6782L89.6429 18.5575L88.898 16.3161L91.8775 15.1954V12.954L88.898 11.4598L87.0357 8.47126L88.1531 6.22989L87.0357 5.1092L86.2908 6.22989H84.4286L83.6837 1.37356H80.7041L77.7245 3.61494L73.6275 1.37356L69.1582 1L66.1786 2.12069L62.0816 3.61494V2.86782L59.102 2.49425L56.1224 3.61494L53.8878 1.37356L49.7908 1L48.301 2.49425H40.1071V3.61494L36.7551 5.1092L33.7755 4.73563L32.2857 2.86782H31.5408V5.1092L32.2857 6.97701V8.47126H30.4235V9.96552L33.0306 11.4598L36.0102 14.4483L35.2653 16.3161H33.0306L30.4235 17.8103L31.5408 20.4253L35.2653 22.6667L36.7551 24.908L35.2653 27.1494L37.8724 29.0172V35.3678L36.7551 37.9828L38.6173 42.8391L33.0306 45.0805H25.9541H19.9949L12.9184 48.4425Z\" fill=\"#AFB78E\"/>\n<path d=\"M1 48.4425L5.84184 51.0575M5.84184 51.0575L12.9184 48.4425L19.9949 45.0805H25.9541H33.0306L38.6173 42.8391L36.7551 37.9828L37.8724 35.3678V29.0172L35.2653 27.1494L36.7551 24.908L35.2653 22.6667L31.5408 20.4253L30.4235 17.8103L33.0306 16.3161H35.2653L36.0102 14.4483L33.0306 11.4598L30.4235 9.96552V8.47126H32.2857V6.97701L31.5408 5.1092V2.86782H32.2857L33.7755 4.73563L36.7551 5.1092L40.1071 3.61494V2.49425H48.301L49.7908 1L53.8878 1.37356L56.1224 3.61494L59.102 2.49425L62.0816 2.86782V3.61494L66.1786 2.12069L69.1582 1L73.6276 1.37356L77.7245 3.61494L80.7041 1.37356H83.6837L84.4286 6.22989H86.2908L87.0357 5.1092L88.1531 6.22989L87.0357 8.47126L88.898 11.4598L91.8776 12.954V15.1954L88.898 16.3161L89.6429 18.5575L92.9949 19.6782L94.1122 17.8103L94.8571 16.3161H96.7194L97.4643 18.5575L99.699 19.6782L102.306 19.3046L103.423 17.8103H106.403L108.265 18.5575L110.5 16.6897L111.245 13.3276L111.99 14.8218L113.852 15.9425V20.7989L118.321 22.2931L119.811 26.7759L122.046 27.8966V30.8851L125.026 32.3793L128.378 34.2471L129.867 35.7414L132.474 33.5L135.082 34.9943L136.571 36.8621L139.551 39.1034L141.041 40.2241L145.51 40.5977L147 42.4655L145.51 44.7069L144.765 47.3218H141.041L140.296 51.431L138.806 53.6724H136.571L133.964 52.1782L132.474 54.046V55.5402L135.082 55.9138L133.964 57.0345L132.474 59.2759L131.357 60.7701L132.474 61.8908L133.964 63.3851L135.827 64.1322L138.434 67.1207L139.551 69.7356L140.296 70.4828H142.903L144.765 71.2299L142.903 72.7241V74.592L144.02 74.9655V76.4598H141.786L140.296 77.5805L139.551 79.8218L141.786 82.8103L134.709 88.7874L134.337 91.7759L132.474 94.0172H130.24L126.143 91.4023H123.163L120.184 92.8966L114.224 94.7644L109.383 98.5L107.52 102.983H106.031L103.423 99.9943L97.4643 100.741L92.25 101.862L85.9184 104.851L80.7041 108.96L76.9796 114.937L71.0204 118.672L66.551 122.408L63.9439 126.891H62.0816L60.5918 125.397L59.8469 120.914L56.8673 116.431L55.0051 116.805V118.299L56.8673 120.54L57.2398 124.649L53.1429 128.759L50.9082 131L49.4184 128.011L47.9286 119.793V118.299L44.2041 117.552L39.3622 116.431L38.2449 113.443L34.8929 112.695L31.9133 110.454L33.4031 108.213V105.598L29.3061 104.851L28.5612 101.862H30.7959L31.9133 99.2471L33.4031 94.3908L34.8929 93.6437V91.0287L30.7959 87.6667L28.5612 85.7989L24.4643 85.0517L23.3469 82.4368V77.2069L19.9949 73.0977L18.8776 68.2414L20.7398 64.1322L17.3878 60.7701H15.1531L14.0357 62.2644V63.3851H8.82143L5.84184 57.408V51.0575Z\" stroke=\"#849464\" stroke-width=\"2\" stroke-linejoin=\"round\"/>\n</svg>\n\n<text class=\"oblast-text\">Запоріжжя</text>\n`;\n      break;\n    case 21:\n      console.log(\"drawing Харків\");\n      charityRef.classList.remove(\"hidden\");\n      oblastRender.innerHTML = `<svg width=\"149\" height=\"132\" viewBox=\"0 0 149 132\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M31.4138 14.3241L34.6724 12.5235L36.8448 12.8837L41.9138 6.76177L44.0862 5.68144H54.9483L57.1207 6.76177L61.1034 13.6039L65.0862 13.964L67.2586 12.8837L68.3448 11.4432L73.4138 14.3241L75.5862 17.9252L79.2069 17.205L81.0172 13.6039L90.431 7.48199H97.6724L102.017 4.60111L104.914 1H112.155L114.328 6.04155L115.776 6.76177H119.397V14.3241L126.638 22.2465L133.155 24.0471L140.397 31.2493L141.845 34.8504L139.31 37.7313L140.759 39.5319L138.224 44.5734L139.31 45.2936L140.759 46.0138V49.2548L138.948 53.9363L140.397 58.2576L139.31 60.7784L137.5 63.6593L136.776 67.2604L137.5 71.2216L139.31 72.662L140.397 74.1025L140.034 75.1828V76.9834L145.828 82.385L148 85.626L146.914 87.4266V89.5873L148 91.0277L147.276 92.4681L145.828 94.9889L147.276 96.7895V98.2299L145.103 99.6704L141.483 100.751H135.69L133.879 98.2299L129.897 97.8698L128.448 95.7091V93.9086L129.534 93.5485L128.448 91.0277L127.362 91.7479L126.638 93.5485H124.103L121.569 92.4681L120.483 90.3075L117.586 91.0277L116.862 93.5485V93.9086V95.7091H113.966V97.8698L115.052 98.9501V99.6704L109.983 103.992L109.259 106.873L107.448 108.673L103.466 110.114V112.634H102.017L99.4828 111.194H95.5L94.7759 113.715H92.2414L90.069 111.914L88.9828 112.634V115.155L91.1552 117.676V123.798H87.5345V126.319H83.5517L81.7414 123.798L79.931 121.997L77.7586 124.158V128.119H75.9483L75.5862 129.92L72.3276 131L71.6034 125.598L70.1552 124.158V123.798L66.5345 120.917L64.3621 120.197L65.0862 115.875L59.2931 111.194H57.1207L57.4828 107.593L57.1207 104.352L54.2241 102.911L51.3276 103.632L48.431 106.873L41.1897 104.352L36.8448 102.911L32.1379 104.352L26.7069 99.3102L21.2759 95.349L18.0172 92.8283H13.6724H11.8621V90.3075L10.7759 89.2271L9.68966 88.1468L11.8621 86.7064L10.7759 85.626V84.1856L12.5862 82.0249L15.4828 83.8255L20.9138 83.4654L22.3621 82.0249L25.9828 78.7839V73.3823L25.2586 72.3019V70.1413H29.6034L31.0517 68.3407L28.1552 66.1801L27.7931 65.4598H31.0517L31.4138 64.3795L29.6034 62.9391L28.1552 61.1385L27.7931 59.6981L28.8793 58.6177L28.5172 57.5374L27.7931 56.4571L25.2586 57.5374L22.3621 57.8975L19.4655 54.6565L17.6552 52.4958V47.8144L16.569 46.7341L14.3966 46.374L13.6724 47.0942L11.8621 46.374L10.4138 44.2133L6.06897 43.4931L2.81034 42.4127V39.5319L1.72414 38.0914L1 37.0111L3.53448 33.41L4.98276 33.0499V31.6094H4.25862V26.928L6.06897 25.8476L8.24138 24.4072L10.7759 22.6066L12.2241 20.446H14.0345L16.2069 21.5263L18.0172 19.3657L18.3793 17.5651H20.1897L21.2759 15.4044L22.7241 15.7645L23.4483 15.4044V13.964L24.5345 12.5235L27.7931 15.4044L31.4138 14.3241Z\" fill=\"#AFB78E\" stroke=\"#849464\" stroke-width=\"2\" stroke-linejoin=\"round\"/>\n</svg>\n\n<text class=\"oblast-text\">Харків</text>\n`;\n      break;\n    case 22:\n      console.log(\"drawing Донецьк\");\n      charityRef.classList.remove(\"hidden\");\n      oblastRender.innerHTML = `<svg width=\"100\" height=\"133\" viewBox=\"0 0 100 133\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M98.0607 59.4317L99 63.8297L98.0607 64.7722L96.1821 66.0288H93.0511L91.4856 66.9712L89.9201 69.1703V74.1966L89.2939 76.7098L85.5367 78.2806L83.0319 80.7938L79.2748 81.1079L74.5783 82.6787L72.6997 84.2494L71.7604 87.3909L72.3866 93.0456L71.7604 96.5012L69.5687 99.3285L70.508 101.842L73.9521 101.528V104.041L71.1342 106.24L70.1949 108.753L72.3866 111.58L71.4473 114.408L70.1949 116.921L68.3163 114.408H65.8115H57.6709L55.7923 116.921L53.6006 117.863L48.9042 118.492L48.278 116.921L46.7125 116.293L45.147 116.921L40.7636 125.403L37.9457 128.859L36.0671 127.602H33.5623L26.6741 132L24.7955 129.487L25.4217 127.602L26.6741 126.659H28.5527V125.403L27.6134 125.089V123.518L29.1789 122.261L27.6134 121.633H25.4217L24.7955 121.005L23.8562 118.806L21.6645 116.293L20.099 115.664L18.8466 114.408L17.9073 113.465L18.8466 112.209L20.099 110.324L21.0383 109.381L18.8466 109.067V107.811L20.099 106.24L22.2907 107.496H24.1693L25.4217 105.612L26.0479 102.156H29.1789L29.8051 99.9568L31.0575 98.0719L29.8051 96.5012L26.0479 96.1871L24.7955 95.2446L22.2907 93.3597L21.0383 91.789L18.8466 90.5324L16.655 92.4173L15.4026 91.1607L12.5847 89.5899L10.0799 88.3333V85.8201L8.20128 84.8777L6.94888 81.1079L3.19169 79.8513V75.7674L1.6262 74.8249L1 73.5684L4.75719 71.6835L3.81789 71.0552V69.1703L1.6262 67.2854V64.1439V62.8873L3.19169 61.6307H7.88818L10.0799 64.1439H13.524L13.8371 61.6307V58.8034L12.8978 56.2902L13.8371 55.976L14.7764 53.777V51.2638L13.2109 48.4365L9.76677 47.1799L10.0799 39.9544V36.1847L12.2716 34.2998L11.3323 33.0432L8.82748 32.729L7.26198 34.2998L5.69649 33.0432L4.75719 30.2158V24.8753L2.87859 22.6763V20.4772L3.81789 19.8489L5.69649 21.4197H7.88818L8.51438 19.2206H11.9585L14.1502 20.4772H15.4026V18.2782L18.8466 17.0216L20.4121 15.4508L21.0383 12.9377L25.4217 9.16787V8.53957L24.4824 7.59712V5.71223H26.9872V4.14149V3.82734L27.6134 1.6283L30.1182 1L31.0575 2.88489L33.2492 3.82734H35.4409L36.0671 2.25659L37.0064 1.6283L37.9457 3.82734L37.0064 4.14149V5.71223L38.2588 7.59712L41.7029 7.91127L43.2684 10.1103H48.278L51.4089 9.16787L53.2875 7.91127V6.65468H57.984L61.115 7.91127V10.1103L63.3067 12.6235V16.3933L64.8722 18.5923L62.6805 20.7914V22.6763L64.246 24.8753L64.8722 29.9017L66.4377 30.53L67.0639 33.6715H69.5687L71.4473 35.5564L73.3259 38.3837V39.3261L71.4473 40.5827V43.0959L75.8307 43.7242L78.3355 43.0959L79.901 45.6091V47.8082L83.0319 50.3213L86.7891 50.0072L88.6677 51.8921L88.3546 54.4053L89.607 56.2902H97.4345L98.0607 59.4317Z\" fill=\"#AFB78E\" stroke=\"#849464\" stroke-width=\"2\" stroke-linejoin=\"round\"/>\n</svg>\n\n<text class=\"oblast-text\">Донецьк</text>\n`;\n      break;\n    case 23:\n      console.log(\"drawing Луганськ\");\n      charityRef.classList.remove(\"hidden\");\n      oblastRender.innerHTML = `<svg width=\"96\" height=\"135\" viewBox=\"0 0 96 135\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5.61754 13.6035L4.29825 10.2868H8.25614L10.8947 7.63342L9.24561 2.32668L10.8947 1H14.8526L16.5018 2.99002V4.31671L22.7684 6.30673L25.0772 4.98005L29.3649 5.64339L32.3333 9.29177L37.9404 10.2868L40.5789 12.6085H43.8772L47.8351 8.62843H50.4737L53.1123 13.2718L55.7509 15.9252L57.4 16.5885L61.3579 14.2668L63.6667 16.5885L66.9649 15.9252L69.2737 21.8953L75.5404 23.5536L76.8596 24.8803L79.4982 24.217L84.1158 20.2369H89.0632V21.2319L87.0842 25.8753V28.197L91.7018 34.1671L93.0211 35.4938L91.7018 41.1322V43.4539L89.0632 47.4339L86.0947 50.419L84.7754 54.0673L82.1368 55.0623L78.8386 57.384H76.2L76.8596 61.3641L80.4877 64.3491L88.0737 66.0075L91.7018 64.3491L93.0211 65.0125V67.0025L91.0421 70.6509H88.0737L82.7965 69.6559L80.4877 72.6409L78.8386 76.6209V79.9377L79.4982 83.9177L86.0947 85.9077L87.414 86.5711V90.2195L91.0421 95.5262V97.8479L89.0632 100.501V101.828L93.6807 101.165L95 101.828L94.6702 103.818L91.0421 106.803L91.7018 109.788L90.0526 111.115V115.426L88.0737 118.743L90.0526 123.718V126.372L88.7333 130.02L81.1474 131.015L75.2105 133.005L73.2316 132.673L69.2737 131.015L63.6667 134L61.3579 133.337L58.7193 131.015L57.7298 126.372L57.0702 123.055H48.8246L47.5053 121.065L47.8351 118.411L45.8561 116.421L41.8982 116.753L38.6 114.1V111.778L36.9509 109.125L34.3123 109.788L29.6947 109.125V106.471L31.6737 105.145V104.15L29.6947 101.165L27.7158 99.1746H25.0772L24.4175 95.8579L22.7684 95.1945L22.1088 89.8878L20.4597 87.5661V85.5761L22.7684 83.2544L21.1193 80.9327V76.9526L18.8105 74.2992V71.9776L15.5123 70.6509H10.5649L9.24561 68.9925L10.5649 66.6708L11.2246 65.3441L10.2351 64.0175V62.0274L11.2246 60.3691L9.24561 57.384L3.96842 52.409V50.7506L4.29825 49.7556L3.30877 48.4289L1.65965 47.1022L1 43.4539L1.65965 40.1372L3.30877 37.4838L4.29825 35.1621L2.97895 31.182L4.62807 26.8703V23.8853L3.30877 23.2219L2.3193 22.5586L4.62807 17.9152L3.30877 16.2569L5.61754 13.6035Z\" fill=\"#AFB78E\" stroke=\"#849464\" stroke-width=\"2\" stroke-linejoin=\"round\"/>\n</svg>\n\n<text class=\"oblast-text\">Луганськ</text>\n`;\n      break;\n    case 24:\n      console.log(\"drawing Київ\");\n      charityRef.classList.remove(\"hidden\");\n      oblastRender.innerHTML = `<svg width=\"112\" height=\"145\" viewBox=\"0 0 112 145\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M8.22388 6.91724L2.31343 7.57471L4.61194 10.8621L3.95522 13.8207L1 16.7793V20.7241L1.32836 22.6966L5.92537 24.0115L8.22388 27.6276V31.2437L5.92537 32.5586L3.95522 33.5448V34.2023L6.25373 35.1885L8.55224 38.8046V41.1057L8.22388 43.7356L8.55224 45.3793L11.5075 45.708L11.8358 49.9816L10.8507 51.2966L9.86567 52.9402L7.89552 54.5839V56.5563L9.20895 58.2V59.5149L6.91045 61.1586V62.1448H8.22388L8.55224 64.1172L7.23881 64.7747L5.92537 66.0897V67.0759L8.55224 68.0621H11.8358L12.4925 72.3356V73.6506L14.4627 74.308L15.4478 75.9517L16.1045 76.2805V82.1977L17.0896 83.1839V86.1425L16.1045 87.1287H14.4627L14.791 92.0598L15.7761 93.7034L17.0896 94.3609V96.6621L15.7761 98.3057L13.4776 100.607L11.1791 101.264L10.8507 102.579L8.22388 103.237L6.91045 104.88H4.9403V106.524L5.59701 107.51L5.26866 109.483L4.9403 111.126L6.91045 111.455V114.085H7.23881L8.8806 115.071L8.22388 116.386L7.23881 118.03L7.56716 119.674L9.53731 121.317L10.194 122.303L8.8806 124.276L9.53731 125.262L10.5224 126.577L10.194 128.549L7.89552 129.864L7.56716 132.166L8.8806 132.823L10.194 135.124L12.1642 136.439L15.4478 140.055L16.1045 143.014L18.7313 144H20.7015L22.3433 143.014L24.3134 140.713V138.74H25.2985H27.597L30.2239 137.425L33.8358 134.467L34.1642 136.439L35.4776 137.425L39.0896 137.097L41.0597 138.74L42.7015 139.726L43.6866 136.439L45 133.809H51.5672L53.209 132.166L56.1642 134.467H57.806L59.1194 133.152L64.0448 133.48L64.7015 132.166V130.193L66.6716 127.234L69.6269 124.605L70.9403 123.29L72.9104 120.331L73.8955 118.687L71.2687 117.044L72.9104 115.729L74.5522 114.743L73.8955 110.469L74.5522 108.168V106.524L74.8806 105.538L75.209 101.922L80.1343 98.9632L83.0896 98.6345L85.3881 99.9494L91.6269 101.593H93.597L94.9104 100.278L96.2239 97.977L98.194 96.3333L99.8358 94.0322V92.0598L101.806 91.0736V90.0874L100.493 88.4437V86.4713L102.463 84.1701L104.761 83.1839L105.746 82.1977V80.8828L105.09 79.8965V78.2529L106.075 77.2667H108.701L109.358 75.623L110.672 72.9931L111 70.6919L109.03 68.3908V67.0759L105.418 64.7747L104.761 62.8023L106.075 61.4874H107.388V59.5149H104.761L102.134 57.8713V56.2276L100.164 54.5839L98.5224 55.5701L97.209 57.8713L94.5821 58.5287L93.2687 59.5149L92.2836 61.4874H89.6567H87.3582H86.0448L84.0746 62.8023L82.1045 61.4874H80.1343L79.1493 62.8023L77.5075 61.4874V59.5149L74.2239 56.2276V54.5839H75.209V52.9402L74.2239 51.2966L73.2388 49.6529L71.2687 48.0092L70.6119 46.0368H67.9851L65.3582 48.0092L61.7463 48.3379L60.7612 47.3517H57.1493L56.4925 43.7356L57.806 41.7632L57.4776 40.4483L53.209 37.1609V32.8874L51.2388 30.9149V26.6414V22.3678L49.597 19.7379L48.6119 18.7517L49.597 15.1356H47.6269L46.3134 13.8207H43.0299L42.0448 10.8621L41.3881 6.91724L35.806 2.31494H26.2836L23 4.61609H19.0597L17.7463 3.95862V1L14.1343 1.65747L12.8209 3.30115L10.194 4.61609L8.22388 6.91724Z\" fill=\"#AFB78E\" stroke=\"#849464\" stroke-width=\"2\" stroke-linejoin=\"round\"/>\n</svg>\n\n<text class=\"oblast-text\">Київ</text>\n`;\n      break;\n    default:\n      console.log(\"drawing error\", oblastId);\n  }\n};\n\nconst swiper = new Swiper(\".mySwiper\", {\n  slidesPerView: 3,\n  grid: {\n    fill: \"row\",\n    rows: 2,\n  },\n  spaceBetween: 8,\n  on: {\n    click(event) {\n      console.log(\"event.target\", this.clickedIndex);\n      let id = parseInt(this.clickedIndex);\n      renderOblast(id);\n      ukraineMapRef.classList.add(\"hidden\");\n      renderBubbles(id);\n      localStorage.setItem(\"id\", id);\n    },\n  },\n});\n\nconst swiperBubbles = new Swiper(\".swiperBubbles\", {\n  speed: 4000,\n  slidesPerView: \"auto\",\n  spaceBetween: 8,\n});\n\nconst mySwiperGallery = new Swiper(\".mySwiperGallery\", {\n  speed: 4000,\n  slidesPerView: 3,\n  grid: {\n    fill: \"row\",\n    rows: 2,\n  },\n  spaceBetween: 8,\n  autoplay: {\n    delay: 1000,\n    // pauseOnMouseEnter: true,\n    waitForTransition: true,\n  },\n});\n\nconsole.log(allItems);\n\nconst renderBubbles = (id) => {\n  const currentOblast = allItems[id];\n  const values = Object.values(currentOblast);\n  let markup = \"\";\n  values.forEach((value) => {\n    const digit = parseInt(value);\n    const array = value.split(\"\");\n    let stringValue = array.splice(digit.toString().length).join(\"\");\n    markup += `\n      <div class=\"swiper-slide charity-item\">\n        <span class=\"charity-item--bigger\">${digit}</span><br/>${stringValue}\n      </div>`;\n  });\n\n  bubblesRef.innerHTML = markup;\n};\n","\"use srict\";\nimport { detailed } from \"./items\";\n\nconst moreRef = document.querySelector(\".map__more\");\nconst modalOblastRef = document.querySelector(\".modalOblastJS\");\n\nconst onClickOblastMobileModalHandler = (e) => {\n  let id = parseInt(localStorage.getItem(\"id\"));\n  let markup = `<button type='button' class=\"closeJS modal__oblast-button\">X</button>`;\n  const separatedMsgs = Object.values(detailed[id]);\n\n  console.log(\"separatedMsgs\", separatedMsgs);\n  separatedMsgs.forEach((e) => {\n    let uppermarkup = \"\";\n\n    console.log(e);\n    uppermarkup += `<span class='modal__oblast-detailed--first '>${e[0]}</span>`;\n    uppermarkup += `<span class='modal__oblast-detailed--second '>${e[1]}</span>`;\n    uppermarkup += `<div class='modal__oblast-detailed--third '>${e[2]}</div>`;\n\n    markup += `<div class=\"modal__oblast-detailed--section\">${uppermarkup}</div>`;\n  });\n  console.log(markup);\n  modalOblastRef.innerHTML = markup;\n  modalOblastRef.classList.toggle(\"is-hidden\");\n\n  const closeModalOblastMobileRef = document.querySelector(\".closeJS\");\n  closeModalOblastMobileRef.addEventListener(\"click\", (e) =>\n    modalOblastRef.classList.toggle(\"is-hidden\")\n  );\n};\n\nmoreRef.addEventListener(\"click\", onClickOblastMobileModalHandler);\n"],"names":["$391299e0893a3dfa$var$cachedSetTimeout","$391299e0893a3dfa$var$cachedClearTimeout","$391299e0893a3dfa$var$process","$391299e0893a3dfa$exports","$391299e0893a3dfa$var$defaultSetTimout","Error","$391299e0893a3dfa$var$defaultClearTimeout","$391299e0893a3dfa$var$runTimeout","fun","setTimeout","e","call","this","clearTimeout","e1","$391299e0893a3dfa$var$currentQueue","$391299e0893a3dfa$var$queue","$391299e0893a3dfa$var$draining","$391299e0893a3dfa$var$queueIndex","$391299e0893a3dfa$var$cleanUpNextTick","length","concat","$391299e0893a3dfa$var$drainQueue","timeout","len","run","marker","$391299e0893a3dfa$var$runClearTimeout","$391299e0893a3dfa$var$Item","array","$391299e0893a3dfa$var$noop","nextTick","args","Array","arguments","i","push","prototype","apply","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","name","binding","cwd","chdir","dir","umask","$b197424204fd80b4$var$stringToByteArray$1","str","out","p","c","charCodeAt","charToByteMapWebSafe_","ENCODED_VALS_BASE","HAS_NATIVE_SUPPORT","atob","encodeByteArray","input","webSafe","isArray","init_","byteToCharMap","byteToCharMapWebSafe_","byteToCharMap_","output","byte1","haveByte2","byte2","haveByte3","byte3","outByte1","outByte2","outByte3","outByte4","join","encodeString","btoa","decodeString","bytes","pos","c1","String","fromCharCode","stringToByteArray","c2","u","c3","$b197424204fd80b4$var$byteArrayToString","decodeStringToByteArray","charToByteMap","charToByteMap_","charAt","byte4","ENCODED_VALS","ENCODED_VALS_WEBSAFE","$b197424204fd80b4$export$4b5284a3025a455","utf8Bytes","$b197424204fd80b4$export$b3b2de96497acc47","$b197424204fd80b4$export$e510a73ee562749","replace","$b197424204fd80b4$export$c62426fdd000a97e","console","error","navigator","$b197424204fd80b4$export$caa8774a9107a58e","runtime","chrome","undefined","id","$b197424204fd80b4$export$7e7b1a9668aaed8","ua","$b197424204fd80b4$export$c36915b22ce77c19","indexOf","$b197424204fd80b4$var$getDefaultsFromGlobal","self","window","$parcel$global","$b197424204fd80b4$export$a4e55266d2135a7f","__FIREBASE_DEFAULTS__","$b197424204fd80b4$var$getDefaults","$b197424204fd80b4$var$getDefaultsFromEnvVariable","document","match","cookie","decoded","JSON","parse","$b197424204fd80b4$var$getDefaultsFromCookie","info","$b197424204fd80b4$export$9c11895284c8adad","productName","_a","_b","emulatorHosts","separatorIndex","host","port","parseInt","substring","$b197424204fd80b4$export$85f6557964517f1a","wrapCallback","callback","reject","resolve","value","promise","catch","Promise","$b197424204fd80b4$export$367bf224123348f1","token","projectId","uid","iat","sub","user_id","payload","Object","assign","project","exp","auth_time","sign_in_provider","identities","stringify","type","code","message","customData","setPrototypeOf","$b197424204fd80b4$export$dd24e9cd51226c56","captureStackTrace","data","template","$b197424204fd80b4$var$PATTERN","_","key","service","serviceName","errors","$b197424204fd80b4$export$dd1bc94b04021eeb","hasOwnProperty","obj","$b197424204fd80b4$export$9cb4719e2e525b7a","a","b","aKeys","keys","bKeys","k","includes","aProp","bProp","$b197424204fd80b4$var$isObject","$307d2bd0b522285b$export$16fa2f45be04daa8","mode","instantiationMode","multipleInstances","props","serviceProps","onInstanceCreated","constructor","instanceFactory","$307d2bd0b522285b$export$2881499e37b75b9a","instancesDeferred","has","normalizedIdentifier","deferred","set","isInitialized","shouldAutoInitialize","get","normalizeInstanceIdentifier","options","identifier","optional","component","$307d2bd0b522285b$var$isComponentEager","getOrInitializeService","instanceIdentifier","instanceDeferred","entries","instance","delete","instancesOptions","instances","services","from","values","all","filter","map","INTERNAL","_delete","opts","isComponentSet","onInit","existingCallbacks","onInitCallbacks","Set","add","existingInstance","invokeOnInitCallbacks","callbacks","container","$577b55f579ec2041$var$instances","$577b55f579ec2041$export$243e62d78d3b544d","LogLevel1","$577b55f579ec2041$var$levelStringToEnum","DEBUG","VERBOSE","INFO","ERROR","SILENT","$577b55f579ec2041$var$defaultLogLevel","$577b55f579ec2041$var$ConsoleMethod","WARN","$577b55f579ec2041$var$defaultLogHandler","logType","logLevel","now","Date","toISOString","method","_logLevel","val","TypeError","logHandler","_logHandler","userLogHandler","_userLogHandler","$a6f488ce4cf7dbe7$var$idbProxyableTypes","$a6f488ce4cf7dbe7$var$cursorAdvanceMethods","$a6f488ce4cf7dbe7$var$cursorRequestMap","WeakMap","$a6f488ce4cf7dbe7$var$transactionDoneMap","$a6f488ce4cf7dbe7$var$transactionStoreNamesMap","$a6f488ce4cf7dbe7$var$transformCache","$a6f488ce4cf7dbe7$export$407448d2b89b1813","$a6f488ce4cf7dbe7$var$idbProxyTraps","target","prop","receiver","IDBTransaction","objectStoreNames","objectStore","$a6f488ce4cf7dbe7$export$efccba1c4a2ef57b","$a6f488ce4cf7dbe7$var$wrapFunction","func","IDBDatabase","transaction","IDBCursor","advance","continue","continuePrimaryKey","$a6f488ce4cf7dbe7$export$3b14a55fb2447963","storeNames","tx","sort","$a6f488ce4cf7dbe7$var$transformCachableValue","done","unlisten","removeEventListener","complete","DOMException","addEventListener","$a6f488ce4cf7dbe7$var$cacheDonePromiseForTransaction","object","IDBObjectStore","IDBIndex","some","Proxy","IDBRequest","request","success","result","then","$a6f488ce4cf7dbe7$var$promisifyRequest","newValue","$92f73a92431170de$export$ca0ed41b1a2af7e","blocked","upgrade","blocking","terminated","indexedDB","open","openPromise","event","oldVersion","newVersion","db","$92f73a92431170de$var$readMethods","$92f73a92431170de$var$writeMethods","$92f73a92431170de$var$cachedMethods","Map","$92f73a92431170de$var$getMethod","target1","targetFuncName","useIndex","isWrite","async","storeName","store","index","shift","oldTraps","$d7defabc17f02990$var$PlatformLoggerServiceImpl","getPlatformInfoString","getProviders","provider","getImmediate","databaseCompatName","$577b55f579ec2041$export$efa9a398d6368992","$d7defabc17f02990$var$PLATFORM_LOG_STRING","$d7defabc17f02990$export$b4e3c36c855b14b5","$d7defabc17f02990$export$fa5244b94c62d36a","app","addComponent","$d7defabc17f02990$var$logger","debug","$d7defabc17f02990$export$c930050e7bb63965","componentName","$d7defabc17f02990$export$9566bce3835c0f28","$d7defabc17f02990$export$fa0d6da0f5838f50","name1","heartbeatController","getProvider","triggerHeartbeat","$d7defabc17f02990$var$ERROR_FACTORY","$b197424204fd80b4$export$3fa6e1b18a3b2d40","_automaticDataCollectionEnabled","automaticDataCollectionEnabled","checkDestroyed","_name","_options","config","_config","_container","_isDeleted","isDeleted","create","appName","$d7defabc17f02990$export$c55cfd413944906d","rawConfig","name4","existingApp","$307d2bd0b522285b$export$436a80eea5d5c0c5","$d7defabc17f02990$var$FirebaseAppImpl","newApp","$d7defabc17f02990$export$f9962582c9e66d99","name5","$d7defabc17f02990$export$d29d5299a7137abc","libraryKeyOrName","version1","variant","library","libraryMismatch","versionMismatch","warning","preExist","DB_CHECK_NAME","onsuccess","close","deleteDatabase","onupgradeneeded","onerror","$135e783d297c6b1e$var$d","isAuthenticated","toKey","isEqual","t","UNAUTHENTICATED","GOOGLE_CREDENTIALS","FIRST_PARTY","MOCK_USER","$135e783d297c6b1e$var$w","$135e783d297c6b1e$var$m","o","$135e783d297c6b1e$var$y","n","$135e783d297c6b1e$var$v","$135e783d297c6b1e$var$_","$135e783d297c6b1e$var$g","warn","$135e783d297c6b1e$var$b","$135e783d297c6b1e$var$E","$135e783d297c6b1e$var$I","$135e783d297c6b1e$export$8fada0bf726bf278","super","toString","$135e783d297c6b1e$var$B","user","headers","$135e783d297c6b1e$var$Q","getToken","invalidateToken","start","enqueueRetryable","shutdown","$135e783d297c6b1e$var$z","changeListener","$135e783d297c6b1e$var$G","auth","accessToken","getUid","t1","$135e783d297c6b1e$var$W","l","getAuthHeaderValueForFirstParty","h","r","$135e783d297c6b1e$var$K","$135e783d297c6b1e$var$Y","$135e783d297c6b1e$var$H","appCheck","t2","m","$135e783d297c6b1e$var$J","s","databaseId","appId","persistenceKey","ssl","forceLongPolling","autoDetectLongPolling","useFetchStreams","$135e783d297c6b1e$var$X","static","isDefaultDatabase","database","$135e783d297c6b1e$var$Z","comparator","child","t3","segments","slice","offset","limit","forEach","construct","popFirst","popLast","firstSegment","lastSegment","isEmpty","isPrefixOf","isImmediateParentOf","toArray","Math","min","$135e783d297c6b1e$var$tt","canonicalString","t4","split","$135e783d297c6b1e$var$et","$135e783d297c6b1e$var$nt","test","isValidIdentifier","isKeyField","$135e783d297c6b1e$var$rt","fromString","emptyPath","collectionGroup","path","hasCollectionId","getCollectionGroup","getCollectionPath","$135e783d297c6b1e$var$st","$135e783d297c6b1e$var$it","isDocumentKey","$135e783d297c6b1e$var$ot","$135e783d297c6b1e$var$ut","t5","$135e783d297c6b1e$var$ct","_delegate","$135e783d297c6b1e$var$lt","$135e783d297c6b1e$var$ft","BatchGetDocuments","Commit","RunQuery","RunAggregationQuery","$135e783d297c6b1e$var$dt","$135e783d297c6b1e$var$wt","$135e783d297c6b1e$var$mt","OK","CANCELLED","UNKNOWN","INVALID_ARGUMENT","DEADLINE_EXCEEDED","NOT_FOUND","ALREADY_EXISTS","PERMISSION_DENIED","RESOURCE_EXHAUSTED","FAILED_PRECONDITION","ABORTED","OUT_OF_RANGE","UNIMPLEMENTED","UNAVAILABLE","DATA_LOSS","$135e783d297c6b1e$var$pt","v","I","t7","e2","T","A","R","P","e3","n1","databaseInfo","g","N","V","body","t6","status","statusText","ok","json","$135e783d297c6b1e$var$yt","crypto","msCrypto","Uint8Array","getRandomValues","e4","floor","random","$135e783d297c6b1e$var$_t","$135e783d297c6b1e$var$gt","$135e783d297c6b1e$var$vt","t8","every","$135e783d297c6b1e$export$d9bcbd5e1ff81430","fromMillis","getTime","toDate","toMillis","seconds","nanoseconds","_compareTo","toJSON","valueOf","padStart","$135e783d297c6b1e$var$It","$135e783d297c6b1e$var$Tt","$135e783d297c6b1e$var$At","insert","root","copy","$135e783d297c6b1e$var$Pt","BLACK","remove","left","right","size","minKey","maxKey","inorderTraversal","reverseTraversal","getIterator","$135e783d297c6b1e$var$Rt","getIteratorFrom","getReverseIterator","getReverseIteratorFrom","EMPTY","getNext","nodeStack","pop","isReverse","hasNext","peek","color","fixUp","removeMin","isRed","moveRedLeft","rotateRight","moveRedRight","rotateLeft","colorFlip","RED","checkMaxDepth","check","pow","$135e783d297c6b1e$var$Vt","first","last","forEachInRange","forEachWhile","firstAfterOrEqual","$135e783d297c6b1e$var$Nt","unionWith","t9","iter","$135e783d297c6b1e$var$Dt","t10","fields","covers","t11","$135e783d297c6b1e$var$_iterator","Symbol","iterator","$135e783d297c6b1e$var$$t","t12","e5","next","binaryString","toBase64","toUint8Array","approximateByteSize","compareTo","EMPTY_BYTE_STRING","$135e783d297c6b1e$var$xt","RegExp","$135e783d297c6b1e$var$Ft","exec","substr","Number","nanos","$135e783d297c6b1e$var$St","$135e783d297c6b1e$var$qt","fromBase64String","fromUint8Array","$135e783d297c6b1e$var$Ot","mapValue","__type__","stringValue","$135e783d297c6b1e$var$Ct","__local_write_time__","timestampValue","$135e783d297c6b1e$var$Mt","t13","$135e783d297c6b1e$var$Ut","t14","e6","n2","booleanValue","bytesValue","referenceValue","geoPointValue","latitude","longitude","integerValue","doubleValue","isNaN","arrayValue","t15","$135e783d297c6b1e$var$Yt","$135e783d297c6b1e$var$Ht","t21","$135e783d297c6b1e$var$Jt","field","getFieldsMap","setAll","t22","applyChanges","s1","e9","n4","e8","clone","$135e783d297c6b1e$var$we","explicitOrderBy","filters","limitType","startAt","endAt","O","$135e783d297c6b1e$var$be","t26","e11","isInteger","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","C","$135e783d297c6b1e$var$Ee","$135e783d297c6b1e$var$Ie","$135e783d297c6b1e$var$Te","elements","$135e783d297c6b1e$var$Ae","$135e783d297c6b1e$var$Re","L","M","$135e783d297c6b1e$var$Ve","isNone","updateTime","exists","$135e783d297c6b1e$var$Ne","$135e783d297c6b1e$var$De","getFieldMask","precondition","fieldTransforms","$135e783d297c6b1e$var$$e","fieldMask","$135e783d297c6b1e$var$xe","$135e783d297c6b1e$var$Fe","$135e783d297c6b1e$var$Oe","$135e783d297c6b1e$var$ke","$135e783d297c6b1e$var$Ce","$135e783d297c6b1e$var$Le","toTimestamp","$135e783d297c6b1e$var$Ue","t28","$135e783d297c6b1e$var$je","$135e783d297c6b1e$var$ze","$135e783d297c6b1e$var$Ge","$135e783d297c6b1e$var$Ze","t37","fieldPaths","$135e783d297c6b1e$var$en","$135e783d297c6b1e$var$rn","et","tt","t38","authCredentials","appCheckCredentials","connection","t39","terminate","$135e783d297c6b1e$var$sn","t40","writes","t31","e14","n7","update","updateMask","verify","updateTransforms","transform","fieldPath","setToServerValue","appendMissingElements","removeAllFromArray","increment","currentDocument","$135e783d297c6b1e$var$Ke","$135e783d297c6b1e$var$an","$135e783d297c6b1e$var$hn","t45","_terminated","e19","_databaseId","n10","r3","_persistenceKey","_freezeSettings","experimentalForceLongPolling","experimentalAutoDetectLongPolling","fetch","bind","_authCredentials","_appCheckCredentials","$135e783d297c6b1e$var$ln","credentials","cacheSizeBytes","ignoreUndefinedProperties","t46","e20","$135e783d297c6b1e$export$d0e2b3272814ce82","_app","_initialized","_settingsFrozen","_terminateTask","_setSettings","t47","_settings","client","sessionIndex","iamToken","authTokenFactory","_getSettings","_terminate","settings","$135e783d297c6b1e$export$6be62b059fb12175","_path","_key","parent","$135e783d297c6b1e$export$ab5a1a47940a200e","firestore","converter","withConverter","$135e783d297c6b1e$export$62297b13309008b2","_query","$135e783d297c6b1e$export$bf5175b0c24981cd","$135e783d297c6b1e$export$9f55f2e2bf8c2fc1","t50","_byteString","$135e783d297c6b1e$export$a1a8fea822d17659","_internalPath","$135e783d297c6b1e$export$c58bc8ee7ecc248d","_methodName","$135e783d297c6b1e$export$f9f719d1b6419c4","_lat","_long","isFinite","$135e783d297c6b1e$var$Fn","$135e783d297c6b1e$var$Sn","toMutation","$135e783d297c6b1e$var$On","$135e783d297c6b1e$var$kn","rt","st","it","ot","ut","ct","nt","at","ht","$135e783d297c6b1e$var$rr","methodName","lt","ft","contains","find","$135e783d297c6b1e$var$Cn","dt","$135e783d297c6b1e$var$Ln","$135e783d297c6b1e$var$Mn","t52","merge","mergeFields","$135e783d297c6b1e$var$Zn","$135e783d297c6b1e$var$Jn","t51","$135e783d297c6b1e$var$tr","$135e783d297c6b1e$var$sr","$135e783d297c6b1e$var$Hn","t57","e22","$135e783d297c6b1e$var$Xn","_toFieldTransform","nullValue","fromDate","t58","e23","t59","getPrototypeOf","$135e783d297c6b1e$var$nr","$135e783d297c6b1e$var$er","search","t60","$135e783d297c6b1e$var$Nr","toFirestore","$135e783d297c6b1e$export$a13890143fb1c2dd","D","$135e783d297c6b1e$export$2a111da947c407d2","t88","e39","setMultipleInstances","$f5ed4ab2a4d1861b$export$3c9a16f847548506","getOwnPropertySymbols","propertyIsEnumerable","$231f9de5784ccaf5$var$_prodErrorMap","$231f9de5784ccaf5$export$e7094788287c5e9b","$231f9de5784ccaf5$var$_DEFAULT_AUTH_ERROR_FACTORY","$231f9de5784ccaf5$var$logClient","$231f9de5784ccaf5$var$_logError","msg","$231f9de5784ccaf5$export$6554612db691658e","authOrCode","rest","$231f9de5784ccaf5$var$createErrorInternal","$231f9de5784ccaf5$export$92108d983e8ee699","$231f9de5784ccaf5$var$_errorWithCustomMessage","errorMap","fullParams","_errorFactory","$231f9de5784ccaf5$export$9fa96a7d116ea3ce","assertion","$231f9de5784ccaf5$var$debugFail","failure","$231f9de5784ccaf5$var$instanceCache","$231f9de5784ccaf5$export$2f6ca3d3b1f80bf5","cls","Function","location","href","$231f9de5784ccaf5$var$_isHttpOrHttps","$231f9de5784ccaf5$var$_getCurrentScheme","protocol","$231f9de5784ccaf5$var$Delay","$231f9de5784ccaf5$var$_isOnline","isMobile","longDelay","shortDelay","$231f9de5784ccaf5$var$_emulatorUrl","emulator","url","startsWith","$231f9de5784ccaf5$export$23ebac1979863676","fetchImpl","headersImpl","responseImpl","Headers","Response","INVALID_IDENTIFIER","EMAIL_EXISTS","EXPIRED_OOB_CODE","TOO_MANY_ATTEMPTS_TRY_LATER","INVALID_CODE","SESSION_EXPIRED","UNAUTHORIZED_DOMAIN","INVALID_MFA_PENDING_CREDENTIAL","SECOND_FACTOR_LIMIT_EXCEEDED","$231f9de5784ccaf5$var$DEFAULT_API_TIMEOUT_MS","$231f9de5784ccaf5$var$_addTidIfNecessary","tenantId","$231f9de5784ccaf5$var$_performApiRequest","customErrorMap","$231f9de5784ccaf5$var$_performFetchWithErrorHandling","params","query","$b197424204fd80b4$export$ac4103b836844853","apiKey","languageCode","$231f9de5784ccaf5$var$_getFinalTarget","apiHost","referrerPolicy","fetchFn","_canInitEmulator","$231f9de5784ccaf5$var$SERVER_ERROR_MAP","networkTimeout","$231f9de5784ccaf5$var$NetworkTimeout","response","race","clearNetworkTimeout","$231f9de5784ccaf5$var$_makeTaggedError","errorMessage","serverErrorCode","serverErrorMessage","authError","toLowerCase","serverResponse","base","apiScheme","timer","errorParams","email","phoneNumber","_tokenResponse","$231f9de5784ccaf5$var$utcTimestampToDateString","utcTimestamp","date","toUTCString","$231f9de5784ccaf5$var$secondsStringToMilliseconds","$231f9de5784ccaf5$var$_parseToken","signature","$231f9de5784ccaf5$var$_logoutIfInvalidated","bypassAuthState","$231f9de5784ccaf5$var$isUserInvalidated","currentUser","signOut","isRunning","timerId","wasError","interval","errorBackoff","stsTokenManager","expirationTime","max","getInterval","iteration","getIdToken","schedule","lastSignInTime","lastLoginAt","creationTime","createdAt","metadata","_initializeTime","$231f9de5784ccaf5$var$_reloadWithoutSaving","idToken","$231f9de5784ccaf5$var$getAccountInfo","users","coreAccount","newProviderData","providerUserInfo","providerId","rawId","displayName","photoURL","photoUrl","original","newData","updates","localId","emailVerified","providerData","$231f9de5784ccaf5$var$StsTokenManager","isExpired","updateFromServerResponse","refreshToken","expiresIn","parsedToken","$231f9de5784ccaf5$var$_tokenExpiresIn","updateTokensAndExpiration","forceRefresh","refresh","clearRefreshToken","grant_type","refresh_token","tokenApiHost","_getAdditionalHeaders","access_token","expires_in","expiresInSec","manager","$231f9de5784ccaf5$var$assertStringOrUndefined","$231f9de5784ccaf5$export$cf2f7c5792f80b46","_notifyListenersIfCurrent","userInternal","$b197424204fd80b4$export$4befe9b5fa509a1b","claims","firebase","signInProvider","issuedAtTime","signInSecondFactor","$231f9de5784ccaf5$export$3b513254972cfc9c","_persistUserIfCurrent","isAnonymous","userInfo","_copy","_assign","_clone","reloadListener","reloadUserInfo","proactiveRefresh","_start","_stop","tokensRefreshed","reload1","_redirectEventId","_c","_d","_e","_f","_g","_h","plainObjectTokenManager","fromJSON","idTokenResponse","opt","$231f9de5784ccaf5$var$ProactiveRefresh","$231f9de5784ccaf5$var$UserMetadata","$231f9de5784ccaf5$var$InMemoryPersistence","storage","_listener","$231f9de5784ccaf5$export$91c6e00c14e7e6fd","$231f9de5784ccaf5$var$PersistenceUserManager","blob","persistence","_get","fullUserKey","_fromJSON","_remove","_set","fullPersistenceKey","newPersistence","getCurrentUser","removeCurrentUser","setCurrentUser","_removeListener","boundEventHandler","persistenceHierarchy","userKey","$231f9de5784ccaf5$export$3d12bd131bb975d1","$231f9de5784ccaf5$export$61196ced6d74a310","_isAvailable","selectedPersistence","availablePersistences","persistence1","userToMigrate","migrationHierarchy","_shouldAllowMigration","_onStorageEvent","_addListener","$231f9de5784ccaf5$var$_getBrowserName","userAgent","$231f9de5784ccaf5$var$_isIEMobile","$231f9de5784ccaf5$var$_isFirefox","$231f9de5784ccaf5$var$_isBlackBerry","$231f9de5784ccaf5$var$_isWebOS","$231f9de5784ccaf5$var$_isSafari","$231f9de5784ccaf5$var$_isChromeIOS","$231f9de5784ccaf5$export$d24c54395ce0c509","re","matches","$231f9de5784ccaf5$export$8a5498727ef6be21","documentMode","$231f9de5784ccaf5$export$a33b77bbdbb8366c","clientPlatform","frameworks","reportedPlatform","onAbort","signInWithEmailLink","wrappedCallback","queue","nextUser","beforeStateCallback","onAbortStack","reverse","originalMessage","popupRedirectResolver","_popupRedirectResolver","_initializationPromise","_deleted","persistenceManager","_shouldInitProactively","_initialize","initializeCurrentUser","lastNotifiedUid","assertedPersistence","_currentUser","_updateCurrentUser","previouslyStoredUser","futureCurrentUser","needsTocheckMiddleware","authDomain","getOrInitRedirectPersistenceManager","storedUserEventId","tryRedirectSignIn","signInWithPhoneNumber","directlySetCurrentUser","beforeStateQueue","runMiddleware","_overrideRedirectResult","reloadAndSetCurrentUserOrClear","redirectUser","redirectResolver","_completeRedirectFn","_setRedirectUser","languages","navigatorLanguage","language","$231f9de5784ccaf5$var$_getUserLanguage","userExtern","skipBeforeStateCallbacks","notifyAuthListeners","redirectPersistenceManager","setPersistence","_getPersistence","nextOrObserver","completed","registerStateListener","authStateSubscription","pushCallback","idTokenSubscription","redirectManager","resolver","_redirectPersistence","_isInitialized","_startProactiveRefresh","_stopProactiveRefresh","isProactiveRefreshEnabled","currentUid","subscription","cb","addObserver","action","operations","framework","clientVersion","_getFrameworks","heartbeatsHeader","heartbeatServiceProvider","getHeartbeatsHeader","emulatorConfig","$231f9de5784ccaf5$var$Subscription","$231f9de5784ccaf5$var$AuthMiddlewareQueue","appVerificationDisabledForTesting","sdkClientVersion","$231f9de5784ccaf5$export$158acd800e1ef08b","observer","$b197424204fd80b4$export$364097d812234b3f","$231f9de5784ccaf5$export$2329c99376c9d0a4","authInternal","disableWarnings","$231f9de5784ccaf5$var$extractProtocol","authority","hostAndPort","bracketedIPv6","$231f9de5784ccaf5$var$parsePort","$231f9de5784ccaf5$var$extractHostAndPort","portStr","freeze","attachBanner","el","createElement","sty","style","innerText","position","width","backgroundColor","border","bottom","margin","zIndex","textAlign","classList","appendChild","readyState","$231f9de5784ccaf5$var$emitEmulatorWarning","protocolEnd","_getIdTokenResponse","_auth","_linkToIdToken","_idToken","signInMethod","$231f9de5784ccaf5$var$updateEmailPassword","$231f9de5784ccaf5$export$9bb611d729802a56","$231f9de5784ccaf5$export$7f8ddf7c7c20b3cd","password","oobCode","_email","_password","_tenantId","_fromEmailAndPassword","_fromEmailAndCode","$231f9de5784ccaf5$var$_performSignInRequest","$231f9de5784ccaf5$var$signInWithPassword","returnSecureToken","$231f9de5784ccaf5$var$signInWithEmailLink$1","$231f9de5784ccaf5$var$signInWithEmailLinkForLinking","_getReauthenticationResolver","authentication.sendPasswordResetEmail","account.resetPassword","$231f9de5784ccaf5$export$b4171a6734a65d42","cred","nonce","pendingToken","oauthToken","oauthTokenSecret","secret","$231f9de5784ccaf5$var$signInWithIdp","buildRequest","autoCreate","requestUri","postBody","$231f9de5784ccaf5$var$VERIFY_PHONE_NUMBER_FOR_EXISTING_ERROR_MAP_","USER_NOT_FOUND","$231f9de5784ccaf5$export$3466f893ebf79586","verificationId","verificationCode","temporaryProof","$231f9de5784ccaf5$var$signInWithPhoneNumber$1","_makeVerificationRequest","$231f9de5784ccaf5$var$linkWithPhoneNumber$1","operation","$231f9de5784ccaf5$var$verifyPhoneNumberForExisting","sessionInfo","link","actionLink","$b197424204fd80b4$export$c1271ca4c8a70741","$b197424204fd80b4$export$1a8408415472d8ed","iOSDeepLink","doubleDeepLink","$231f9de5784ccaf5$var$parseDeepLink","$231f9de5784ccaf5$export$4c3d22f3d993c33f","searchParams","$231f9de5784ccaf5$var$parseMode","continueUrl","$231f9de5784ccaf5$export$3a1a48c8f6ef640e","emailLink","actionCodeUrl","parseLink","PROVIDER_ID","EMAIL_PASSWORD_SIGN_IN_METHOD","EMAIL_LINK_SIGN_IN_METHOD","$231f9de5784ccaf5$var$FederatedAuthProvider","setDefaultLanguage","defaultLanguageCode","setCustomParameters","customOAuthParameters","customParameters","scopes","scope","getScopes","$231f9de5784ccaf5$export$a07804094c3ecf2d","$231f9de5784ccaf5$var$BaseOAuthProvider","_fromParams","FACEBOOK_SIGN_IN_METHOD","userCredential","credentialFromTaggedObject","tokenResponse","credential","oauthAccessToken","$231f9de5784ccaf5$export$3722cfe417b6ed86","GOOGLE_SIGN_IN_METHOD","oauthIdToken","addScope","$231f9de5784ccaf5$export$971d5caa766a69d7","GITHUB_SIGN_IN_METHOD","$231f9de5784ccaf5$export$71cec2538cb2c617","jsHelpers._generateCallbackName","TWITTER_SIGN_IN_METHOD","$231f9de5784ccaf5$var$UserCredentialImpl","operationType","_fromIdTokenResponse","$231f9de5784ccaf5$var$providerIdForResponse","_updateTokensIfNecessary","$231f9de5784ccaf5$var$MultiFactorError","_serverResponse","_fromErrorAndOperation","_forOperation","$231f9de5784ccaf5$var$_reauthenticate","_link","$231f9de5784ccaf5$var$_processCredentialSavingMfaContextIfNecessary","parsed","$231f9de5784ccaf5$var$_signInWithCredential","top","standalone","deps","_updateErrorMap","_initializeWithPersistence","hierarchy","$b636c39bb22f6b8a$var$app","databaseURL","storageBucket","messagingSenderId","$b636c39bb22f6b8a$var$db","mockUserToken","$135e783d297c6b1e$export$966a03d25297d115","$b636c39bb22f6b8a$var$auth","getOptions","initialize","beforeAuthStateChanged","onIdTokenChanged","$b636c39bb22f6b8a$var$provider","querySelector","$231f9de5784ccaf5$export$db3b6bfb95261072","credentialFromResult","log","alert","isAdmin1","forms","inputJS","preventDefault","indexOblast","currentTarget","chooseoblast","selectedIndex","docRef","middle","born","credentialFromError","$d7ff7d3dad1083ab$export$8f0d94de710fb784","$d7ff7d3dad1083ab$export$1d8e8926e8c2d07a","$a099b541a2a5ea91$var$regionButtonsRef","querySelectorAll","$a099b541a2a5ea91$var$oblastRender","$a099b541a2a5ea91$var$ukraineMapRef","$a099b541a2a5ea91$var$charityRef","$a099b541a2a5ea91$var$bubblesRef","Swiper","slidesPerView","grid","fill","rows","spaceBetween","click","clickedIndex","oblastId","innerHTML","$a099b541a2a5ea91$var$renderOblast","$a099b541a2a5ea91$var$renderBubbles","localStorage","setItem","speed","autoplay","delay","waitForTransition","currentOblast","markup","digit","splice","$4402633f4e8be834$var$moreRef","$4402633f4e8be834$var$modalOblastRef","getItem","separatedMsgs","uppermarkup","toggle"],"version":3,"file":"index.be188d7e.js.map"}